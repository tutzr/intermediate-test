//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	_Z7lb_nvelP9lb_data_sPi
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank2_assertiPKciiiiii
(
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_0,
	.param .b64 _Z25reverse_addr_rank2_assertiPKciiiiii_param_1,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_2,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_3,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_4,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_5,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_6,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_7
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 __nv_static_21__13_model_cpp1_ii_cs2_static_param[7712];
.global .align 1 .b8 __unnamed_1[32] = {105, 110, 116, 32, 108, 98, 95, 110, 118, 101, 108, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_2[32] = {105, 110, 116, 32, 108, 98, 95, 110, 100, 105, 109, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[33] = {105, 110, 116, 32, 108, 98, 95, 110, 100, 105, 115, 116, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_4[47] = {105, 110, 116, 32, 108, 98, 95, 102, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_5[49] = {105, 110, 116, 32, 108, 98, 95, 102, 95, 115, 101, 116, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 41, 0};
.global .align 1 .b8 __unnamed_6[65] = {105, 110, 116, 32, 108, 98, 95, 48, 116, 104, 95, 109, 111, 109, 101, 110, 116, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 108, 98, 95, 100, 105, 115, 116, 95, 101, 110, 117, 109, 95, 116, 121, 112, 101, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_7[48] = {105, 110, 116, 32, 108, 98, 95, 102, 95, 105, 110, 100, 101, 120, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_8[59] = {105, 110, 116, 32, 108, 98, 95, 102, 95, 109, 117, 108, 116, 105, 95, 105, 110, 100, 101, 120, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 49, 93, 41, 0};
.global .align 1 .b8 __unnamed_9[69] = {105, 110, 116, 32, 108, 98, 95, 102, 95, 109, 117, 108, 116, 105, 95, 105, 110, 100, 101, 120, 95, 112, 97, 114, 116, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 49, 93, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_10[52] = {105, 110, 116, 32, 108, 98, 95, 102, 95, 105, 110, 100, 101, 120, 95, 115, 101, 116, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_11[63] = {105, 110, 116, 32, 108, 98, 95, 102, 95, 109, 117, 108, 116, 105, 95, 105, 110, 100, 101, 120, 95, 115, 101, 116, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 49, 93, 41, 0};
.global .align 1 .b8 __unnamed_12[73] = {105, 110, 116, 32, 108, 98, 95, 102, 95, 109, 117, 108, 116, 105, 95, 105, 110, 100, 101, 120, 95, 115, 101, 116, 95, 112, 97, 114, 116, 40, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 49, 93, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 $str[5] = {110, 118, 101, 108, 0};
.global .align 1 .b8 $str1[8] = {109, 111, 100, 101, 108, 46, 99, 0};
.global .align 1 .b8 $str2[5] = {110, 100, 105, 109, 0};
.global .align 1 .b8 $str3[3] = {108, 98, 0};
.global .align 1 .b8 $str4[6] = {110, 100, 105, 115, 116, 0};
.global .align 1 .b8 $str5[32] = {105, 110, 100, 101, 120, 32, 62, 61, 32, 48, 32, 38, 38, 32, 105, 110, 100, 101, 120, 32, 60, 32, 108, 98, 45, 62, 110, 115, 105, 116, 101, 0};
.global .align 1 .b8 $str6[19] = {112, 32, 62, 61, 32, 48, 32, 38, 38, 32, 112, 32, 60, 32, 78, 86, 69, 76, 0};
.global .align 1 .b8 $str7[24] = {110, 32, 62, 61, 32, 48, 32, 38, 38, 32, 110, 32, 60, 32, 108, 98, 45, 62, 110, 100, 105, 115, 116, 0};
.global .align 1 .b8 $str8[4] = {114, 104, 111, 0};
.global .align 1 .b8 $str9[15] = {110, 100, 32, 60, 32, 108, 98, 45, 62, 110, 100, 105, 115, 116, 0};
.global .align 1 .b8 $str10[2] = {48, 0};

.visible .func  (.param .b32 func_retval0) _Z7lb_nvelP9lb_data_sPi(
	.param .b64 _Z7lb_nvelP9lb_data_sPi_param_0,
	.param .b64 _Z7lb_nvelP9lb_data_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z7lb_nvelP9lb_data_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 374;
	mov.u64 	%rd8, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	mov.u32 	%r2, 19;
	st.u32 	[%rd1], %r2;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z7lb_ndimP9lb_data_sPi
.visible .func  (.param .b32 func_retval0) _Z7lb_ndimP9lb_data_sPi(
	.param .b64 _Z7lb_ndimP9lb_data_sPi_param_0,
	.param .b64 _Z7lb_ndimP9lb_data_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z7lb_ndimP9lb_data_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd2, $str2;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_2;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 391;
	mov.u64 	%rd8, 1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_2:
	mov.u32 	%r2, 3;
	st.u32 	[%rd1], %r2;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z8lb_ndistP9lb_data_sPi
.visible .func  (.param .b32 func_retval0) _Z8lb_ndistP9lb_data_sPi(
	.param .b64 _Z8lb_ndistP9lb_data_sPi_param_0,
	.param .b64 _Z8lb_ndistP9lb_data_sPi_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [_Z8lb_ndistP9lb_data_sPi_param_0];
	ld.param.u64 	%rd2, [_Z8lb_ndistP9lb_data_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str3;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_3;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 1216;
	mov.u64 	%rd9, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB2_2:
	setp.ne.s64	%p2, %rd2, 0;
	@%p2 bra 	BB2_4;

	mov.u64 	%rd10, $str4;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_3;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r2, 1217;
	mov.u64 	%rd16, 1;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_4:
	ld.u32 	%r3, [%rd1];
	st.u32 	[%rd2], %r3;
	mov.u32 	%r4, 0;
	st.param.b32	[func_retval0+0], %r4;
	ret;
}

	// .globl	_Z4lb_fP9lb_data_siiiPd
.visible .func  (.param .b32 func_retval0) _Z4lb_fP9lb_data_siiiPd(
	.param .b64 _Z4lb_fP9lb_data_siiiPd_param_0,
	.param .b32 _Z4lb_fP9lb_data_siiiPd_param_1,
	.param .b32 _Z4lb_fP9lb_data_siiiPd_param_2,
	.param .b32 _Z4lb_fP9lb_data_siiiPd_param_3,
	.param .b64 _Z4lb_fP9lb_data_siiiPd_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<23>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<39>;


	ld.param.u64 	%rd3, [_Z4lb_fP9lb_data_siiiPd_param_0];
	ld.param.u32 	%r7, [_Z4lb_fP9lb_data_siiiPd_param_1];
	ld.param.u32 	%r8, [_Z4lb_fP9lb_data_siiiPd_param_2];
	ld.param.u32 	%r9, [_Z4lb_fP9lb_data_siiiPd_param_3];
	ld.param.u64 	%rd4, [_Z4lb_fP9lb_data_siiiPd_param_4];
	setp.ne.s64	%p1, %rd3, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd5, $str3;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, __unnamed_4;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r10, 1255;
	mov.u64 	%rd11, 1;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r10;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB3_2:
	setp.lt.s32	%p2, %r7, 0;
	@%p2 bra 	BB3_4;

	ld.u32 	%r11, [%rd3+4];
	setp.gt.s32	%p3, %r11, %r7;
	@%p3 bra 	BB3_5;

BB3_4:
	mov.u64 	%rd12, $str5;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_4;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r12, 1256;
	mov.u64 	%rd18, 1;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB3_5:
	setp.lt.u32	%p4, %r8, 19;
	@%p4 bra 	BB3_7;

	mov.u64 	%rd19, $str6;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, __unnamed_4;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r13, 1257;
	mov.u64 	%rd25, 1;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r13;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd24;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd25;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_7:
	setp.lt.s32	%p5, %r9, 0;
	@%p5 bra 	BB3_9;

	ld.u64 	%rd2, [%rd3];
	cvt.u32.u64	%r21, %rd2;
	setp.gt.s32	%p6, %r21, %r9;
	@%p6 bra 	BB3_10;
	bra.uni 	BB3_9;

BB3_10:
	shr.u64 	%rd33, %rd2, 32;
	cvt.u32.u64	%r22, %rd33;
	bra.uni 	BB3_11;

BB3_9:
	mov.u64 	%rd26, $str7;
	cvta.global.u64 	%rd27, %rd26;
	mov.u64 	%rd28, $str1;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, __unnamed_4;
	cvta.global.u64 	%rd31, %rd30;
	mov.u32 	%r14, 1258;
	mov.u64 	%rd32, 1;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd27;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7
	ld.v2.u32 	{%r21, %r22}, [%rd3];

BB3_11:
	ld.u64 	%rd34, [%rd3+56];
	mov.u64 	%rd35, $str1;
	cvta.global.u64 	%rd36, %rd35;
	mov.u32 	%r17, 1260;
	mov.u32 	%r18, 19;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd36;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r21;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r7;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r8;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 8
	mul.wide.s32 	%rd37, %r19, 8;
	add.s64 	%rd38, %rd34, %rd37;
	ld.f64 	%fd1, [%rd38];
	st.f64 	[%rd4], %fd1;
	mov.u32 	%r20, 0;
	st.param.b32	[func_retval0+0], %r20;
	ret;
}

	// .globl	_Z8lb_f_setP9lb_data_siiid
.visible .func  (.param .b32 func_retval0) _Z8lb_f_setP9lb_data_siiid(
	.param .b64 _Z8lb_f_setP9lb_data_siiid_param_0,
	.param .b32 _Z8lb_f_setP9lb_data_siiid_param_1,
	.param .b32 _Z8lb_f_setP9lb_data_siiid_param_2,
	.param .b32 _Z8lb_f_setP9lb_data_siiid_param_3,
	.param .b64 _Z8lb_f_setP9lb_data_siiid_param_4
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<23>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<38>;


	ld.param.u64 	%rd3, [_Z8lb_f_setP9lb_data_siiid_param_0];
	ld.param.u32 	%r7, [_Z8lb_f_setP9lb_data_siiid_param_1];
	ld.param.u32 	%r8, [_Z8lb_f_setP9lb_data_siiid_param_2];
	ld.param.u32 	%r9, [_Z8lb_f_setP9lb_data_siiid_param_3];
	ld.param.f64 	%fd1, [_Z8lb_f_setP9lb_data_siiid_param_4];
	setp.ne.s64	%p1, %rd3, 0;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd4, $str3;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_5;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r10, 1276;
	mov.u64 	%rd10, 1;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r10;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB4_2:
	setp.lt.s32	%p2, %r7, 0;
	@%p2 bra 	BB4_4;

	ld.u32 	%r11, [%rd3+4];
	setp.gt.s32	%p3, %r11, %r7;
	@%p3 bra 	BB4_5;

BB4_4:
	mov.u64 	%rd11, $str5;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r12, 1277;
	mov.u64 	%rd17, 1;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB4_5:
	setp.lt.u32	%p4, %r8, 19;
	@%p4 bra 	BB4_7;

	mov.u64 	%rd18, $str6;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_5;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r13, 1278;
	mov.u64 	%rd24, 1;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r13;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB4_7:
	setp.lt.s32	%p5, %r9, 0;
	@%p5 bra 	BB4_9;

	ld.u64 	%rd2, [%rd3];
	cvt.u32.u64	%r21, %rd2;
	setp.gt.s32	%p6, %r21, %r9;
	@%p6 bra 	BB4_10;
	bra.uni 	BB4_9;

BB4_10:
	shr.u64 	%rd32, %rd2, 32;
	cvt.u32.u64	%r22, %rd32;
	bra.uni 	BB4_11;

BB4_9:
	mov.u64 	%rd25, $str7;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, $str1;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, __unnamed_5;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r14, 1279;
	mov.u64 	%rd31, 1;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd30;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd31;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12
	ld.v2.u32 	{%r21, %r22}, [%rd3];

BB4_11:
	ld.u64 	%rd33, [%rd3+56];
	mov.u64 	%rd34, $str1;
	cvta.global.u64 	%rd35, %rd34;
	mov.u32 	%r17, 1281;
	mov.u32 	%r18, 19;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r21;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r7;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r8;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 13
	mul.wide.s32 	%rd36, %r19, 8;
	add.s64 	%rd37, %rd33, %rd36;
	st.f64 	[%rd37], %fd1;
	mov.u32 	%r20, 0;
	st.param.b32	[func_retval0+0], %r20;
	ret;
}

	// .globl	_Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd
.visible .func  (.param .b32 func_retval0) _Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd(
	.param .b64 _Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd_param_0,
	.param .b32 _Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd_param_1,
	.param .b32 _Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd_param_2,
	.param .b64 _Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<125>;
	.reg .f64 	%fd<58>;
	.reg .b64 	%rd<92>;


	ld.param.u64 	%rd2, [_Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd_param_0];
	ld.param.u32 	%r1, [_Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd_param_1];
	ld.param.u32 	%r2, [_Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd_param_2];
	ld.param.u64 	%rd3, [_Z13lb_0th_momentP9lb_data_si17lb_dist_enum_typePd_param_3];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB5_2;

	mov.u64 	%rd4, $str3;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_6;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r3, 1299;
	mov.u64 	%rd10, 1;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB5_2:
	setp.ne.s64	%p2, %rd3, 0;
	@%p2 bra 	BB5_4;

	mov.u64 	%rd11, $str8;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_6;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 1300;
	mov.u64 	%rd17, 1;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB5_4:
	setp.lt.s32	%p3, %r1, 0;
	@%p3 bra 	BB5_6;

	ld.u32 	%r5, [%rd2+4];
	setp.gt.s32	%p4, %r5, %r1;
	@%p4 bra 	BB5_7;

BB5_6:
	mov.u64 	%rd18, $str5;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_6;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r6, 1301;
	mov.u64 	%rd24, 1;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB5_7:
	ld.u32 	%r7, [%rd2];
	setp.gt.s32	%p5, %r7, %r2;
	@%p5 bra 	BB5_9;

	mov.u64 	%rd25, $str9;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, $str1;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, __unnamed_6;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r8, 1302;
	mov.u64 	%rd31, 1;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd30;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd31;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB5_9:
	mov.u64 	%rd32, 0;
	st.u64 	[%rd3], %rd32;
	ld.u64 	%rd33, [%rd2+56];
	ld.v2.u32 	{%r9, %r10}, [%rd2];
	mov.u64 	%rd34, $str1;
	cvta.global.u64 	%rd35, %rd34;
	mov.u32 	%r13, 1307;
	mov.u32 	%r14, 19;
	mov.u32 	%r15, 0;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r10;
	.param .b32 param3;
	st.param.b32	[param3+0], %r9;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r15;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 18
	mul.wide.s32 	%rd36, %r16, 8;
	add.s64 	%rd37, %rd33, %rd36;
	ld.f64 	%fd1, [%rd3];
	ld.f64 	%fd2, [%rd37];
	add.f64 	%fd3, %fd2, %fd1;
	st.f64 	[%rd3], %fd3;
	ld.u64 	%rd38, [%rd2+56];
	ld.v2.u32 	{%r17, %r18}, [%rd2];
	mov.u32 	%r21, 1;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b32 param3;
	st.param.b32	[param3+0], %r17;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r21;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 19
	mul.wide.s32 	%rd39, %r22, 8;
	add.s64 	%rd40, %rd38, %rd39;
	ld.f64 	%fd4, [%rd3];
	ld.f64 	%fd5, [%rd40];
	add.f64 	%fd6, %fd5, %fd4;
	st.f64 	[%rd3], %fd6;
	ld.u64 	%rd41, [%rd2+56];
	ld.v2.u32 	{%r23, %r24}, [%rd2];
	mov.u32 	%r27, 2;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32	[param3+0], %r23;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r27;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r28, [retval0+0];
	
	//{
	}// Callseq End 20
	mul.wide.s32 	%rd42, %r28, 8;
	add.s64 	%rd43, %rd41, %rd42;
	ld.f64 	%fd7, [%rd3];
	ld.f64 	%fd8, [%rd43];
	add.f64 	%fd9, %fd8, %fd7;
	st.f64 	[%rd3], %fd9;
	ld.u64 	%rd44, [%rd2+56];
	ld.v2.u32 	{%r29, %r30}, [%rd2];
	mov.u32 	%r33, 3;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r30;
	.param .b32 param3;
	st.param.b32	[param3+0], %r29;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r33;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r34, [retval0+0];
	
	//{
	}// Callseq End 21
	mul.wide.s32 	%rd45, %r34, 8;
	add.s64 	%rd46, %rd44, %rd45;
	ld.f64 	%fd10, [%rd3];
	ld.f64 	%fd11, [%rd46];
	add.f64 	%fd12, %fd11, %fd10;
	st.f64 	[%rd3], %fd12;
	ld.u64 	%rd47, [%rd2+56];
	ld.v2.u32 	{%r35, %r36}, [%rd2];
	mov.u32 	%r39, 4;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r36;
	.param .b32 param3;
	st.param.b32	[param3+0], %r35;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r39;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r40, [retval0+0];
	
	//{
	}// Callseq End 22
	mul.wide.s32 	%rd48, %r40, 8;
	add.s64 	%rd49, %rd47, %rd48;
	ld.f64 	%fd13, [%rd3];
	ld.f64 	%fd14, [%rd49];
	add.f64 	%fd15, %fd14, %fd13;
	st.f64 	[%rd3], %fd15;
	ld.u64 	%rd50, [%rd2+56];
	ld.v2.u32 	{%r41, %r42}, [%rd2];
	mov.u32 	%r45, 5;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r42;
	.param .b32 param3;
	st.param.b32	[param3+0], %r41;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r45;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r46, [retval0+0];
	
	//{
	}// Callseq End 23
	mul.wide.s32 	%rd51, %r46, 8;
	add.s64 	%rd52, %rd50, %rd51;
	ld.f64 	%fd16, [%rd3];
	ld.f64 	%fd17, [%rd52];
	add.f64 	%fd18, %fd17, %fd16;
	st.f64 	[%rd3], %fd18;
	ld.u64 	%rd53, [%rd2+56];
	ld.v2.u32 	{%r47, %r48}, [%rd2];
	mov.u32 	%r51, 6;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r48;
	.param .b32 param3;
	st.param.b32	[param3+0], %r47;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r51;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r52, [retval0+0];
	
	//{
	}// Callseq End 24
	mul.wide.s32 	%rd54, %r52, 8;
	add.s64 	%rd55, %rd53, %rd54;
	ld.f64 	%fd19, [%rd3];
	ld.f64 	%fd20, [%rd55];
	add.f64 	%fd21, %fd20, %fd19;
	st.f64 	[%rd3], %fd21;
	ld.u64 	%rd56, [%rd2+56];
	ld.v2.u32 	{%r53, %r54}, [%rd2];
	mov.u32 	%r57, 7;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r54;
	.param .b32 param3;
	st.param.b32	[param3+0], %r53;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r57;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r58, [retval0+0];
	
	//{
	}// Callseq End 25
	mul.wide.s32 	%rd57, %r58, 8;
	add.s64 	%rd58, %rd56, %rd57;
	ld.f64 	%fd22, [%rd3];
	ld.f64 	%fd23, [%rd58];
	add.f64 	%fd24, %fd23, %fd22;
	st.f64 	[%rd3], %fd24;
	ld.u64 	%rd59, [%rd2+56];
	ld.v2.u32 	{%r59, %r60}, [%rd2];
	mov.u32 	%r63, 8;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r60;
	.param .b32 param3;
	st.param.b32	[param3+0], %r59;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r63;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r64, [retval0+0];
	
	//{
	}// Callseq End 26
	mul.wide.s32 	%rd60, %r64, 8;
	add.s64 	%rd61, %rd59, %rd60;
	ld.f64 	%fd25, [%rd3];
	ld.f64 	%fd26, [%rd61];
	add.f64 	%fd27, %fd26, %fd25;
	st.f64 	[%rd3], %fd27;
	ld.u64 	%rd62, [%rd2+56];
	ld.v2.u32 	{%r65, %r66}, [%rd2];
	mov.u32 	%r69, 9;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r66;
	.param .b32 param3;
	st.param.b32	[param3+0], %r65;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r69;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r70, [retval0+0];
	
	//{
	}// Callseq End 27
	mul.wide.s32 	%rd63, %r70, 8;
	add.s64 	%rd64, %rd62, %rd63;
	ld.f64 	%fd28, [%rd3];
	ld.f64 	%fd29, [%rd64];
	add.f64 	%fd30, %fd29, %fd28;
	st.f64 	[%rd3], %fd30;
	ld.u64 	%rd65, [%rd2+56];
	ld.v2.u32 	{%r71, %r72}, [%rd2];
	mov.u32 	%r75, 10;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r72;
	.param .b32 param3;
	st.param.b32	[param3+0], %r71;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r75;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r76, [retval0+0];
	
	//{
	}// Callseq End 28
	mul.wide.s32 	%rd66, %r76, 8;
	add.s64 	%rd67, %rd65, %rd66;
	ld.f64 	%fd31, [%rd3];
	ld.f64 	%fd32, [%rd67];
	add.f64 	%fd33, %fd32, %fd31;
	st.f64 	[%rd3], %fd33;
	ld.u64 	%rd68, [%rd2+56];
	ld.v2.u32 	{%r77, %r78}, [%rd2];
	mov.u32 	%r81, 11;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r78;
	.param .b32 param3;
	st.param.b32	[param3+0], %r77;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r81;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r82, [retval0+0];
	
	//{
	}// Callseq End 29
	mul.wide.s32 	%rd69, %r82, 8;
	add.s64 	%rd70, %rd68, %rd69;
	ld.f64 	%fd34, [%rd3];
	ld.f64 	%fd35, [%rd70];
	add.f64 	%fd36, %fd35, %fd34;
	st.f64 	[%rd3], %fd36;
	ld.u64 	%rd71, [%rd2+56];
	ld.v2.u32 	{%r83, %r84}, [%rd2];
	mov.u32 	%r87, 12;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r84;
	.param .b32 param3;
	st.param.b32	[param3+0], %r83;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r87;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r88, [retval0+0];
	
	//{
	}// Callseq End 30
	mul.wide.s32 	%rd72, %r88, 8;
	add.s64 	%rd73, %rd71, %rd72;
	ld.f64 	%fd37, [%rd3];
	ld.f64 	%fd38, [%rd73];
	add.f64 	%fd39, %fd38, %fd37;
	st.f64 	[%rd3], %fd39;
	ld.u64 	%rd74, [%rd2+56];
	ld.v2.u32 	{%r89, %r90}, [%rd2];
	mov.u32 	%r93, 13;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r90;
	.param .b32 param3;
	st.param.b32	[param3+0], %r89;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r93;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r94, [retval0+0];
	
	//{
	}// Callseq End 31
	mul.wide.s32 	%rd75, %r94, 8;
	add.s64 	%rd76, %rd74, %rd75;
	ld.f64 	%fd40, [%rd3];
	ld.f64 	%fd41, [%rd76];
	add.f64 	%fd42, %fd41, %fd40;
	st.f64 	[%rd3], %fd42;
	ld.u64 	%rd77, [%rd2+56];
	ld.v2.u32 	{%r95, %r96}, [%rd2];
	mov.u32 	%r99, 14;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b32 param3;
	st.param.b32	[param3+0], %r95;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r99;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r100, [retval0+0];
	
	//{
	}// Callseq End 32
	mul.wide.s32 	%rd78, %r100, 8;
	add.s64 	%rd79, %rd77, %rd78;
	ld.f64 	%fd43, [%rd3];
	ld.f64 	%fd44, [%rd79];
	add.f64 	%fd45, %fd44, %fd43;
	st.f64 	[%rd3], %fd45;
	ld.u64 	%rd80, [%rd2+56];
	ld.v2.u32 	{%r101, %r102}, [%rd2];
	mov.u32 	%r105, 15;
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r102;
	.param .b32 param3;
	st.param.b32	[param3+0], %r101;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r105;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r106, [retval0+0];
	
	//{
	}// Callseq End 33
	mul.wide.s32 	%rd81, %r106, 8;
	add.s64 	%rd82, %rd80, %rd81;
	ld.f64 	%fd46, [%rd3];
	ld.f64 	%fd47, [%rd82];
	add.f64 	%fd48, %fd47, %fd46;
	st.f64 	[%rd3], %fd48;
	ld.u64 	%rd83, [%rd2+56];
	ld.v2.u32 	{%r107, %r108}, [%rd2];
	mov.u32 	%r111, 16;
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r108;
	.param .b32 param3;
	st.param.b32	[param3+0], %r107;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r111;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r112, [retval0+0];
	
	//{
	}// Callseq End 34
	mul.wide.s32 	%rd84, %r112, 8;
	add.s64 	%rd85, %rd83, %rd84;
	ld.f64 	%fd49, [%rd3];
	ld.f64 	%fd50, [%rd85];
	add.f64 	%fd51, %fd50, %fd49;
	st.f64 	[%rd3], %fd51;
	ld.u64 	%rd86, [%rd2+56];
	ld.v2.u32 	{%r113, %r114}, [%rd2];
	mov.u32 	%r117, 17;
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r114;
	.param .b32 param3;
	st.param.b32	[param3+0], %r113;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r117;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r118, [retval0+0];
	
	//{
	}// Callseq End 35
	mul.wide.s32 	%rd87, %r118, 8;
	add.s64 	%rd88, %rd86, %rd87;
	ld.f64 	%fd52, [%rd3];
	ld.f64 	%fd53, [%rd88];
	add.f64 	%fd54, %fd53, %fd52;
	st.f64 	[%rd3], %fd54;
	ld.u64 	%rd89, [%rd2+56];
	ld.v2.u32 	{%r119, %r120}, [%rd2];
	mov.u32 	%r123, 18;
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r120;
	.param .b32 param3;
	st.param.b32	[param3+0], %r119;
	.param .b32 param4;
	st.param.b32	[param4+0], %r14;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r2;
	.param .b32 param7;
	st.param.b32	[param7+0], %r123;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r124, [retval0+0];
	
	//{
	}// Callseq End 36
	mul.wide.s32 	%rd90, %r124, 8;
	add.s64 	%rd91, %rd89, %rd90;
	ld.f64 	%fd55, [%rd3];
	ld.f64 	%fd56, [%rd91];
	add.f64 	%fd57, %fd56, %fd55;
	st.f64 	[%rd3], %fd57;
	st.param.b32	[func_retval0+0], %r15;
	ret;
}

	// .globl	_Z10lb_f_indexP9lb_data_siiPd
.visible .func  (.param .b32 func_retval0) _Z10lb_f_indexP9lb_data_siiPd(
	.param .b64 _Z10lb_f_indexP9lb_data_siiPd_param_0,
	.param .b32 _Z10lb_f_indexP9lb_data_siiPd_param_1,
	.param .b32 _Z10lb_f_indexP9lb_data_siiPd_param_2,
	.param .b64 _Z10lb_f_indexP9lb_data_siiPd_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<124>;
	.reg .f64 	%fd<20>;
	.reg .b64 	%rd<84>;


	ld.param.u64 	%rd2, [_Z10lb_f_indexP9lb_data_siiPd_param_0];
	ld.param.u32 	%r4, [_Z10lb_f_indexP9lb_data_siiPd_param_1];
	ld.param.u32 	%r5, [_Z10lb_f_indexP9lb_data_siiPd_param_2];
	ld.param.u64 	%rd3, [_Z10lb_f_indexP9lb_data_siiPd_param_3];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB6_2;

	mov.u64 	%rd4, $str3;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_7;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r6, 1454;
	mov.u64 	%rd10, 1;
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 37

BB6_2:
	setp.lt.s32	%p2, %r5, 0;
	@%p2 bra 	BB6_4;

	ld.u32 	%r7, [%rd2];
	setp.gt.s32	%p3, %r7, %r5;
	@%p3 bra 	BB6_5;

BB6_4:
	mov.u64 	%rd11, $str7;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_7;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r8, 1455;
	mov.u64 	%rd17, 1;
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 38

BB6_5:
	setp.lt.s32	%p4, %r4, 0;
	@%p4 bra 	BB6_7;

	ld.u32 	%r123, [%rd2+4];
	setp.gt.s32	%p5, %r123, %r4;
	@%p5 bra 	BB6_8;

BB6_7:
	mov.u64 	%rd18, $str5;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_7;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r9, 1456;
	mov.u64 	%rd24, 1;
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r9;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 39
	ld.u32 	%r123, [%rd2+4];

BB6_8:
	ld.u64 	%rd25, [%rd2+56];
	ld.u32 	%r10, [%rd2];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r11, 1459;
	mov.u32 	%r12, 19;
	mov.u32 	%r13, 0;
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r123;
	.param .b32 param3;
	st.param.b32	[param3+0], %r10;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r13;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 40
	mul.wide.s32 	%rd28, %r14, 8;
	add.s64 	%rd29, %rd25, %rd28;
	ld.f64 	%fd1, [%rd29];
	st.f64 	[%rd3], %fd1;
	ld.u64 	%rd30, [%rd2+56];
	ld.v2.u32 	{%r15, %r16}, [%rd2];
	mov.u32 	%r19, 1;
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b32 param3;
	st.param.b32	[param3+0], %r15;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r19;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 41
	mul.wide.s32 	%rd31, %r20, 8;
	add.s64 	%rd32, %rd30, %rd31;
	ld.f64 	%fd2, [%rd32];
	st.f64 	[%rd3+8], %fd2;
	ld.u64 	%rd33, [%rd2+56];
	ld.v2.u32 	{%r21, %r22}, [%rd2];
	mov.u32 	%r25, 2;
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r21;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r26, [retval0+0];
	
	//{
	}// Callseq End 42
	mul.wide.s32 	%rd34, %r26, 8;
	add.s64 	%rd35, %rd33, %rd34;
	ld.f64 	%fd3, [%rd35];
	st.f64 	[%rd3+16], %fd3;
	ld.u64 	%rd36, [%rd2+56];
	ld.v2.u32 	{%r27, %r28}, [%rd2];
	mov.u32 	%r31, 3;
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r28;
	.param .b32 param3;
	st.param.b32	[param3+0], %r27;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r31;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 43
	mul.wide.s32 	%rd37, %r32, 8;
	add.s64 	%rd38, %rd36, %rd37;
	ld.f64 	%fd4, [%rd38];
	st.f64 	[%rd3+24], %fd4;
	ld.u64 	%rd39, [%rd2+56];
	ld.v2.u32 	{%r33, %r34}, [%rd2];
	mov.u32 	%r37, 4;
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b32 param3;
	st.param.b32	[param3+0], %r33;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r37;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r38, [retval0+0];
	
	//{
	}// Callseq End 44
	mul.wide.s32 	%rd40, %r38, 8;
	add.s64 	%rd41, %rd39, %rd40;
	ld.f64 	%fd5, [%rd41];
	st.f64 	[%rd3+32], %fd5;
	ld.u64 	%rd42, [%rd2+56];
	ld.v2.u32 	{%r39, %r40}, [%rd2];
	mov.u32 	%r43, 5;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b32 param3;
	st.param.b32	[param3+0], %r39;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r43;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r44, [retval0+0];
	
	//{
	}// Callseq End 45
	mul.wide.s32 	%rd43, %r44, 8;
	add.s64 	%rd44, %rd42, %rd43;
	ld.f64 	%fd6, [%rd44];
	st.f64 	[%rd3+40], %fd6;
	ld.u64 	%rd45, [%rd2+56];
	ld.v2.u32 	{%r45, %r46}, [%rd2];
	mov.u32 	%r49, 6;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r46;
	.param .b32 param3;
	st.param.b32	[param3+0], %r45;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r49;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 46
	mul.wide.s32 	%rd46, %r50, 8;
	add.s64 	%rd47, %rd45, %rd46;
	ld.f64 	%fd7, [%rd47];
	st.f64 	[%rd3+48], %fd7;
	ld.u64 	%rd48, [%rd2+56];
	ld.v2.u32 	{%r51, %r52}, [%rd2];
	mov.u32 	%r55, 7;
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b32 param3;
	st.param.b32	[param3+0], %r51;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r55;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r56, [retval0+0];
	
	//{
	}// Callseq End 47
	mul.wide.s32 	%rd49, %r56, 8;
	add.s64 	%rd50, %rd48, %rd49;
	ld.f64 	%fd8, [%rd50];
	st.f64 	[%rd3+56], %fd8;
	ld.u64 	%rd51, [%rd2+56];
	ld.v2.u32 	{%r57, %r58}, [%rd2];
	mov.u32 	%r61, 8;
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b32 param3;
	st.param.b32	[param3+0], %r57;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r61;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r62, [retval0+0];
	
	//{
	}// Callseq End 48
	mul.wide.s32 	%rd52, %r62, 8;
	add.s64 	%rd53, %rd51, %rd52;
	ld.f64 	%fd9, [%rd53];
	st.f64 	[%rd3+64], %fd9;
	ld.u64 	%rd54, [%rd2+56];
	ld.v2.u32 	{%r63, %r64}, [%rd2];
	mov.u32 	%r67, 9;
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r64;
	.param .b32 param3;
	st.param.b32	[param3+0], %r63;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r67;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r68, [retval0+0];
	
	//{
	}// Callseq End 49
	mul.wide.s32 	%rd55, %r68, 8;
	add.s64 	%rd56, %rd54, %rd55;
	ld.f64 	%fd10, [%rd56];
	st.f64 	[%rd3+72], %fd10;
	ld.u64 	%rd57, [%rd2+56];
	ld.v2.u32 	{%r69, %r70}, [%rd2];
	mov.u32 	%r73, 10;
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r70;
	.param .b32 param3;
	st.param.b32	[param3+0], %r69;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r73;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r74, [retval0+0];
	
	//{
	}// Callseq End 50
	mul.wide.s32 	%rd58, %r74, 8;
	add.s64 	%rd59, %rd57, %rd58;
	ld.f64 	%fd11, [%rd59];
	st.f64 	[%rd3+80], %fd11;
	ld.u64 	%rd60, [%rd2+56];
	ld.v2.u32 	{%r75, %r76}, [%rd2];
	mov.u32 	%r79, 11;
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r76;
	.param .b32 param3;
	st.param.b32	[param3+0], %r75;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r79;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r80, [retval0+0];
	
	//{
	}// Callseq End 51
	mul.wide.s32 	%rd61, %r80, 8;
	add.s64 	%rd62, %rd60, %rd61;
	ld.f64 	%fd12, [%rd62];
	st.f64 	[%rd3+88], %fd12;
	ld.u64 	%rd63, [%rd2+56];
	ld.v2.u32 	{%r81, %r82}, [%rd2];
	mov.u32 	%r85, 12;
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r82;
	.param .b32 param3;
	st.param.b32	[param3+0], %r81;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r85;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r86, [retval0+0];
	
	//{
	}// Callseq End 52
	mul.wide.s32 	%rd64, %r86, 8;
	add.s64 	%rd65, %rd63, %rd64;
	ld.f64 	%fd13, [%rd65];
	st.f64 	[%rd3+96], %fd13;
	ld.u64 	%rd66, [%rd2+56];
	ld.v2.u32 	{%r87, %r88}, [%rd2];
	mov.u32 	%r91, 13;
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b32 param3;
	st.param.b32	[param3+0], %r87;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r91;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r92, [retval0+0];
	
	//{
	}// Callseq End 53
	mul.wide.s32 	%rd67, %r92, 8;
	add.s64 	%rd68, %rd66, %rd67;
	ld.f64 	%fd14, [%rd68];
	st.f64 	[%rd3+104], %fd14;
	ld.u64 	%rd69, [%rd2+56];
	ld.v2.u32 	{%r93, %r94}, [%rd2];
	mov.u32 	%r97, 14;
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r94;
	.param .b32 param3;
	st.param.b32	[param3+0], %r93;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r97;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r98, [retval0+0];
	
	//{
	}// Callseq End 54
	mul.wide.s32 	%rd70, %r98, 8;
	add.s64 	%rd71, %rd69, %rd70;
	ld.f64 	%fd15, [%rd71];
	st.f64 	[%rd3+112], %fd15;
	ld.u64 	%rd72, [%rd2+56];
	ld.v2.u32 	{%r99, %r100}, [%rd2];
	mov.u32 	%r103, 15;
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r100;
	.param .b32 param3;
	st.param.b32	[param3+0], %r99;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r103;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r104, [retval0+0];
	
	//{
	}// Callseq End 55
	mul.wide.s32 	%rd73, %r104, 8;
	add.s64 	%rd74, %rd72, %rd73;
	ld.f64 	%fd16, [%rd74];
	st.f64 	[%rd3+120], %fd16;
	ld.u64 	%rd75, [%rd2+56];
	ld.v2.u32 	{%r105, %r106}, [%rd2];
	mov.u32 	%r109, 16;
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r106;
	.param .b32 param3;
	st.param.b32	[param3+0], %r105;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r109;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r110, [retval0+0];
	
	//{
	}// Callseq End 56
	mul.wide.s32 	%rd76, %r110, 8;
	add.s64 	%rd77, %rd75, %rd76;
	ld.f64 	%fd17, [%rd77];
	st.f64 	[%rd3+128], %fd17;
	ld.u64 	%rd78, [%rd2+56];
	ld.v2.u32 	{%r111, %r112}, [%rd2];
	mov.u32 	%r115, 17;
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r112;
	.param .b32 param3;
	st.param.b32	[param3+0], %r111;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r115;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r116, [retval0+0];
	
	//{
	}// Callseq End 57
	mul.wide.s32 	%rd79, %r116, 8;
	add.s64 	%rd80, %rd78, %rd79;
	ld.f64 	%fd18, [%rd80];
	st.f64 	[%rd3+136], %fd18;
	ld.u64 	%rd81, [%rd2+56];
	ld.v2.u32 	{%r117, %r118}, [%rd2];
	mov.u32 	%r121, 18;
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r118;
	.param .b32 param3;
	st.param.b32	[param3+0], %r117;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r121;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r122, [retval0+0];
	
	//{
	}// Callseq End 58
	mul.wide.s32 	%rd82, %r122, 8;
	add.s64 	%rd83, %rd81, %rd82;
	ld.f64 	%fd19, [%rd83];
	st.f64 	[%rd3+144], %fd19;
	st.param.b32	[func_retval0+0], %r13;
	ret;
}

	// .globl	_Z16lb_f_multi_indexP9lb_data_siiPA1_d
.visible .func  (.param .b32 func_retval0) _Z16lb_f_multi_indexP9lb_data_siiPA1_d(
	.param .b64 _Z16lb_f_multi_indexP9lb_data_siiPA1_d_param_0,
	.param .b32 _Z16lb_f_multi_indexP9lb_data_siiPA1_d_param_1,
	.param .b32 _Z16lb_f_multi_indexP9lb_data_siiPA1_d_param_2,
	.param .b64 _Z16lb_f_multi_indexP9lb_data_siiPA1_d_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<20>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<33>;


	ld.param.u64 	%rd4, [_Z16lb_f_multi_indexP9lb_data_siiPA1_d_param_0];
	ld.param.u32 	%r3, [_Z16lb_f_multi_indexP9lb_data_siiPA1_d_param_1];
	ld.param.u32 	%r4, [_Z16lb_f_multi_indexP9lb_data_siiPA1_d_param_2];
	ld.param.u64 	%rd32, [_Z16lb_f_multi_indexP9lb_data_siiPA1_d_param_3];
	setp.ne.s64	%p1, %rd4, 0;
	@%p1 bra 	BB7_2;

	mov.u64 	%rd6, $str3;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, __unnamed_8;
	cvta.global.u64 	%rd11, %rd10;
	mov.u32 	%r5, 1480;
	mov.u64 	%rd12, 1;
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 59

BB7_2:
	setp.lt.s32	%p2, %r4, 0;
	@%p2 bra 	BB7_4;

	ld.u32 	%r6, [%rd4];
	setp.gt.s32	%p3, %r6, %r4;
	@%p3 bra 	BB7_5;

BB7_4:
	mov.u64 	%rd13, $str7;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, __unnamed_8;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r7, 1481;
	mov.u64 	%rd19, 1;
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd18;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd19;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 60

BB7_5:
	setp.lt.s32	%p4, %r3, 0;
	@%p4 bra 	BB7_7;

	ld.u32 	%r8, [%rd4+4];
	setp.gt.s32	%p5, %r8, %r3;
	@%p5 bra 	BB7_8;

BB7_7:
	mov.u64 	%rd20, $str5;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, $str1;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, __unnamed_8;
	cvta.global.u64 	%rd25, %rd24;
	mov.u32 	%r9, 1482;
	mov.u64 	%rd26, 1;
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 param2;
	st.param.b32	[param2+0], %r9;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 61

BB7_8:
	mov.u32 	%r19, 0;

BB7_9:
	ld.u64 	%rd27, [%rd4+56];
	ld.v2.u32 	{%r11, %r12}, [%rd4];
	mov.u64 	%rd28, $str1;
	cvta.global.u64 	%rd29, %rd28;
	mov.u32 	%r15, 1486;
	mov.u32 	%r16, 19;
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b32 param3;
	st.param.b32	[param3+0], %r11;
	.param .b32 param4;
	st.param.b32	[param4+0], %r16;
	.param .b32 param5;
	st.param.b32	[param5+0], %r3;
	.param .b32 param6;
	st.param.b32	[param6+0], %r4;
	.param .b32 param7;
	st.param.b32	[param7+0], %r19;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 62
	mul.wide.s32 	%rd30, %r17, 8;
	add.s64 	%rd31, %rd27, %rd30;
	ld.f64 	%fd1, [%rd31];
	st.f64 	[%rd32], %fd1;
	add.s64 	%rd32, %rd32, 8;
	add.s32 	%r19, %r19, 1;
	setp.lt.s32	%p6, %r19, 19;
	@%p6 bra 	BB7_9;

	mov.u32 	%r18, 0;
	st.param.b32	[func_retval0+0], %r18;
	ret;
}

	// .globl	_Z21lb_f_multi_index_partP9lb_data_siiPA1_di
.visible .func  (.param .b32 func_retval0) _Z21lb_f_multi_index_partP9lb_data_siiPA1_di(
	.param .b64 _Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_0,
	.param .b32 _Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_1,
	.param .b32 _Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_2,
	.param .b64 _Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_3,
	.param .b32 _Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_4
)
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<83>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<78>;


	ld.param.u64 	%rd6, [_Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_0];
	ld.param.u32 	%r14, [_Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_1];
	ld.param.u32 	%r15, [_Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_2];
	ld.param.u64 	%rd7, [_Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_3];
	ld.param.u32 	%r16, [_Z21lb_f_multi_index_partP9lb_data_siiPA1_di_param_4];
	setp.ne.s64	%p1, %rd6, 0;
	@%p1 bra 	BB8_2;

	mov.u64 	%rd8, $str3;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, $str1;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, __unnamed_9;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r17, 1508;
	mov.u64 	%rd14, 1;
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 63

BB8_2:
	setp.lt.s32	%p2, %r15, 0;
	@%p2 bra 	BB8_4;

	ld.u32 	%r18, [%rd6];
	setp.gt.s32	%p3, %r18, %r15;
	@%p3 bra 	BB8_5;

BB8_4:
	mov.u64 	%rd15, $str7;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, __unnamed_9;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r19, 1509;
	mov.u64 	%rd21, 1;
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 64

BB8_5:
	setp.lt.s32	%p4, %r14, 0;
	@%p4 bra 	BB8_7;

	ld.u32 	%r20, [%rd6+4];
	setp.gt.s32	%p5, %r20, %r14;
	@%p5 bra 	BB8_8;

BB8_7:
	mov.u64 	%rd22, $str5;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, $str1;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, __unnamed_9;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r21, 1510;
	mov.u64 	%rd28, 1;
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd25;
	.param .b32 param2;
	st.param.b32	[param2+0], %r21;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd27;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd28;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 65

BB8_8:
	mov.u64 	%rd29, $str10;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, $str1;
	cvta.global.u64 	%rd32, %rd31;
	mov.u64 	%rd33, __unnamed_9;
	cvta.global.u64 	%rd34, %rd33;
	mov.u32 	%r23, 1511;
	mov.u64 	%rd35, 1;
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r23;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd34;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 66
	and.b32  	%r1, %r16, 3;
	mov.u32 	%r77, 0;

BB8_9:
	setp.lt.s32	%p6, %r16, 1;
	@%p6 bra 	BB8_19;

	setp.eq.s32	%p7, %r1, 0;
	mov.u32 	%r82, 0;
	@%p7 bra 	BB8_16;

	setp.eq.s32	%p8, %r1, 1;
	mov.u32 	%r79, 0;
	@%p8 bra 	BB8_15;

	setp.eq.s32	%p9, %r1, 2;
	mov.u32 	%r78, 0;
	@%p9 bra 	BB8_14;

	ld.u64 	%rd36, [%rd6+56];
	ld.v2.u32 	{%r28, %r29}, [%rd6];
	mov.u32 	%r32, 1515;
	mov.u32 	%r33, 19;
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r32;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r29;
	.param .b32 param3;
	st.param.b32	[param3+0], %r28;
	.param .b32 param4;
	st.param.b32	[param4+0], %r33;
	.param .b32 param5;
	st.param.b32	[param5+0], %r14;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r34, [retval0+0];
	
	//{
	}// Callseq End 67
	mul.wide.s32 	%rd39, %r34, 8;
	add.s64 	%rd40, %rd36, %rd39;
	ld.f64 	%fd1, [%rd40];
	mul.wide.s32 	%rd41, %r77, 8;
	add.s64 	%rd42, %rd7, %rd41;
	st.f64 	[%rd42], %fd1;
	mov.u32 	%r78, 1;

BB8_14:
	ld.u64 	%rd43, [%rd6+56];
	ld.v2.u32 	{%r35, %r36}, [%rd6];
	add.s32 	%r39, %r78, %r14;
	mov.u32 	%r40, 1515;
	mov.u32 	%r41, 19;
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r36;
	.param .b32 param3;
	st.param.b32	[param3+0], %r35;
	.param .b32 param4;
	st.param.b32	[param4+0], %r41;
	.param .b32 param5;
	st.param.b32	[param5+0], %r39;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r42, [retval0+0];
	
	//{
	}// Callseq End 68
	mul.wide.s32 	%rd46, %r42, 8;
	add.s64 	%rd47, %rd43, %rd46;
	ld.f64 	%fd2, [%rd47];
	mul.wide.s32 	%rd48, %r77, 8;
	add.s64 	%rd49, %rd7, %rd48;
	mul.wide.u32 	%rd50, %r78, 8;
	add.s64 	%rd51, %rd49, %rd50;
	st.f64 	[%rd51], %fd2;
	add.s32 	%r79, %r78, 1;

BB8_15:
	ld.u64 	%rd52, [%rd6+56];
	ld.v2.u32 	{%r43, %r44}, [%rd6];
	add.s32 	%r47, %r79, %r14;
	mov.u32 	%r48, 1515;
	mov.u32 	%r49, 19;
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r44;
	.param .b32 param3;
	st.param.b32	[param3+0], %r43;
	.param .b32 param4;
	st.param.b32	[param4+0], %r49;
	.param .b32 param5;
	st.param.b32	[param5+0], %r47;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 69
	mul.wide.s32 	%rd55, %r50, 8;
	add.s64 	%rd56, %rd52, %rd55;
	ld.f64 	%fd3, [%rd56];
	mul.wide.s32 	%rd57, %r77, 8;
	add.s64 	%rd58, %rd7, %rd57;
	mul.wide.s32 	%rd59, %r79, 8;
	add.s64 	%rd60, %rd58, %rd59;
	st.f64 	[%rd60], %fd3;
	add.s32 	%r82, %r79, 1;

BB8_16:
	setp.lt.u32	%p10, %r16, 4;
	@%p10 bra 	BB8_19;

	mul.wide.s32 	%rd61, %r77, 8;
	add.s64 	%rd77, %rd7, %rd61;
	mul.wide.s32 	%rd3, %r82, 8;
	add.s32 	%r81, %r14, %r82;

BB8_18:
	ld.u64 	%rd62, [%rd6+56];
	ld.v2.u32 	{%r51, %r52}, [%rd6];
	mov.u32 	%r55, 1515;
	mov.u32 	%r56, 19;
	// Callseq Start 70
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b32 param3;
	st.param.b32	[param3+0], %r51;
	.param .b32 param4;
	st.param.b32	[param4+0], %r56;
	.param .b32 param5;
	st.param.b32	[param5+0], %r81;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r57, [retval0+0];
	
	//{
	}// Callseq End 70
	mul.wide.s32 	%rd65, %r57, 8;
	add.s64 	%rd66, %rd62, %rd65;
	ld.f64 	%fd4, [%rd66];
	add.s64 	%rd67, %rd77, %rd3;
	st.f64 	[%rd67], %fd4;
	ld.u64 	%rd68, [%rd6+56];
	ld.v2.u32 	{%r58, %r59}, [%rd6];
	add.s32 	%r62, %r81, 1;
	// Callseq Start 71
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r59;
	.param .b32 param3;
	st.param.b32	[param3+0], %r58;
	.param .b32 param4;
	st.param.b32	[param4+0], %r56;
	.param .b32 param5;
	st.param.b32	[param5+0], %r62;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r63, [retval0+0];
	
	//{
	}// Callseq End 71
	mul.wide.s32 	%rd69, %r63, 8;
	add.s64 	%rd70, %rd68, %rd69;
	ld.f64 	%fd5, [%rd70];
	st.f64 	[%rd67+8], %fd5;
	ld.u64 	%rd71, [%rd6+56];
	ld.v2.u32 	{%r64, %r65}, [%rd6];
	add.s32 	%r68, %r81, 2;
	// Callseq Start 72
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r65;
	.param .b32 param3;
	st.param.b32	[param3+0], %r64;
	.param .b32 param4;
	st.param.b32	[param4+0], %r56;
	.param .b32 param5;
	st.param.b32	[param5+0], %r68;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r69, [retval0+0];
	
	//{
	}// Callseq End 72
	mul.wide.s32 	%rd72, %r69, 8;
	add.s64 	%rd73, %rd71, %rd72;
	ld.f64 	%fd6, [%rd73];
	st.f64 	[%rd67+16], %fd6;
	ld.u64 	%rd74, [%rd6+56];
	ld.v2.u32 	{%r70, %r71}, [%rd6];
	add.s32 	%r74, %r81, 3;
	// Callseq Start 73
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r71;
	.param .b32 param3;
	st.param.b32	[param3+0], %r70;
	.param .b32 param4;
	st.param.b32	[param4+0], %r56;
	.param .b32 param5;
	st.param.b32	[param5+0], %r74;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r75, [retval0+0];
	
	//{
	}// Callseq End 73
	mul.wide.s32 	%rd75, %r75, 8;
	add.s64 	%rd76, %rd74, %rd75;
	ld.f64 	%fd7, [%rd76];
	st.f64 	[%rd67+24], %fd7;
	add.s64 	%rd77, %rd77, 32;
	add.s32 	%r81, %r81, 4;
	add.s32 	%r82, %r82, 4;
	setp.lt.s32	%p11, %r82, %r16;
	@%p11 bra 	BB8_18;

BB8_19:
	add.s32 	%r77, %r77, 1;
	setp.lt.s32	%p12, %r77, 19;
	@%p12 bra 	BB8_9;

	mov.u32 	%r76, 0;
	st.param.b32	[func_retval0+0], %r76;
	ret;
}

	// .globl	_Z14lb_f_index_setP9lb_data_siiPd
.visible .func  (.param .b32 func_retval0) _Z14lb_f_index_setP9lb_data_siiPd(
	.param .b64 _Z14lb_f_index_setP9lb_data_siiPd_param_0,
	.param .b32 _Z14lb_f_index_setP9lb_data_siiPd_param_1,
	.param .b32 _Z14lb_f_index_setP9lb_data_siiPd_param_2,
	.param .b64 _Z14lb_f_index_setP9lb_data_siiPd_param_3
)
{
	.reg .pred 	%p<6>;
	.reg .b32 	%r<124>;
	.reg .f64 	%fd<20>;
	.reg .b64 	%rd<84>;


	ld.param.u64 	%rd2, [_Z14lb_f_index_setP9lb_data_siiPd_param_0];
	ld.param.u32 	%r4, [_Z14lb_f_index_setP9lb_data_siiPd_param_1];
	ld.param.u32 	%r5, [_Z14lb_f_index_setP9lb_data_siiPd_param_2];
	ld.param.u64 	%rd3, [_Z14lb_f_index_setP9lb_data_siiPd_param_3];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB9_2;

	mov.u64 	%rd4, $str3;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_10;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r6, 1536;
	mov.u64 	%rd10, 1;
	// Callseq Start 74
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 74

BB9_2:
	setp.lt.s32	%p2, %r5, 0;
	@%p2 bra 	BB9_4;

	ld.u32 	%r7, [%rd2];
	setp.gt.s32	%p3, %r7, %r5;
	@%p3 bra 	BB9_5;

BB9_4:
	mov.u64 	%rd11, $str7;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_10;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r8, 1537;
	mov.u64 	%rd17, 1;
	// Callseq Start 75
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 75

BB9_5:
	setp.lt.s32	%p4, %r4, 0;
	@%p4 bra 	BB9_7;

	ld.u32 	%r123, [%rd2+4];
	setp.gt.s32	%p5, %r123, %r4;
	@%p5 bra 	BB9_8;

BB9_7:
	mov.u64 	%rd18, $str5;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_10;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r9, 1538;
	mov.u64 	%rd24, 1;
	// Callseq Start 76
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r9;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 76
	ld.u32 	%r123, [%rd2+4];

BB9_8:
	ld.f64 	%fd1, [%rd3];
	ld.u64 	%rd25, [%rd2+56];
	ld.u32 	%r10, [%rd2];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r11, 1541;
	mov.u32 	%r12, 19;
	mov.u32 	%r13, 0;
	// Callseq Start 77
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r123;
	.param .b32 param3;
	st.param.b32	[param3+0], %r10;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r13;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 77
	mul.wide.s32 	%rd28, %r14, 8;
	add.s64 	%rd29, %rd25, %rd28;
	st.f64 	[%rd29], %fd1;
	ld.f64 	%fd2, [%rd3+8];
	ld.u64 	%rd30, [%rd2+56];
	ld.v2.u32 	{%r15, %r16}, [%rd2];
	mov.u32 	%r19, 1;
	// Callseq Start 78
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b32 param3;
	st.param.b32	[param3+0], %r15;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r19;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 78
	mul.wide.s32 	%rd31, %r20, 8;
	add.s64 	%rd32, %rd30, %rd31;
	st.f64 	[%rd32], %fd2;
	ld.f64 	%fd3, [%rd3+16];
	ld.u64 	%rd33, [%rd2+56];
	ld.v2.u32 	{%r21, %r22}, [%rd2];
	mov.u32 	%r25, 2;
	// Callseq Start 79
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r21;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r26, [retval0+0];
	
	//{
	}// Callseq End 79
	mul.wide.s32 	%rd34, %r26, 8;
	add.s64 	%rd35, %rd33, %rd34;
	st.f64 	[%rd35], %fd3;
	ld.f64 	%fd4, [%rd3+24];
	ld.u64 	%rd36, [%rd2+56];
	ld.v2.u32 	{%r27, %r28}, [%rd2];
	mov.u32 	%r31, 3;
	// Callseq Start 80
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r28;
	.param .b32 param3;
	st.param.b32	[param3+0], %r27;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r31;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 80
	mul.wide.s32 	%rd37, %r32, 8;
	add.s64 	%rd38, %rd36, %rd37;
	st.f64 	[%rd38], %fd4;
	ld.f64 	%fd5, [%rd3+32];
	ld.u64 	%rd39, [%rd2+56];
	ld.v2.u32 	{%r33, %r34}, [%rd2];
	mov.u32 	%r37, 4;
	// Callseq Start 81
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b32 param3;
	st.param.b32	[param3+0], %r33;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r37;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r38, [retval0+0];
	
	//{
	}// Callseq End 81
	mul.wide.s32 	%rd40, %r38, 8;
	add.s64 	%rd41, %rd39, %rd40;
	st.f64 	[%rd41], %fd5;
	ld.f64 	%fd6, [%rd3+40];
	ld.u64 	%rd42, [%rd2+56];
	ld.v2.u32 	{%r39, %r40}, [%rd2];
	mov.u32 	%r43, 5;
	// Callseq Start 82
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b32 param3;
	st.param.b32	[param3+0], %r39;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r43;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r44, [retval0+0];
	
	//{
	}// Callseq End 82
	mul.wide.s32 	%rd43, %r44, 8;
	add.s64 	%rd44, %rd42, %rd43;
	st.f64 	[%rd44], %fd6;
	ld.f64 	%fd7, [%rd3+48];
	ld.u64 	%rd45, [%rd2+56];
	ld.v2.u32 	{%r45, %r46}, [%rd2];
	mov.u32 	%r49, 6;
	// Callseq Start 83
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r46;
	.param .b32 param3;
	st.param.b32	[param3+0], %r45;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r49;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 83
	mul.wide.s32 	%rd46, %r50, 8;
	add.s64 	%rd47, %rd45, %rd46;
	st.f64 	[%rd47], %fd7;
	ld.f64 	%fd8, [%rd3+56];
	ld.u64 	%rd48, [%rd2+56];
	ld.v2.u32 	{%r51, %r52}, [%rd2];
	mov.u32 	%r55, 7;
	// Callseq Start 84
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b32 param3;
	st.param.b32	[param3+0], %r51;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r55;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r56, [retval0+0];
	
	//{
	}// Callseq End 84
	mul.wide.s32 	%rd49, %r56, 8;
	add.s64 	%rd50, %rd48, %rd49;
	st.f64 	[%rd50], %fd8;
	ld.f64 	%fd9, [%rd3+64];
	ld.u64 	%rd51, [%rd2+56];
	ld.v2.u32 	{%r57, %r58}, [%rd2];
	mov.u32 	%r61, 8;
	// Callseq Start 85
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b32 param3;
	st.param.b32	[param3+0], %r57;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r61;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r62, [retval0+0];
	
	//{
	}// Callseq End 85
	mul.wide.s32 	%rd52, %r62, 8;
	add.s64 	%rd53, %rd51, %rd52;
	st.f64 	[%rd53], %fd9;
	ld.f64 	%fd10, [%rd3+72];
	ld.u64 	%rd54, [%rd2+56];
	ld.v2.u32 	{%r63, %r64}, [%rd2];
	mov.u32 	%r67, 9;
	// Callseq Start 86
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r64;
	.param .b32 param3;
	st.param.b32	[param3+0], %r63;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r67;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r68, [retval0+0];
	
	//{
	}// Callseq End 86
	mul.wide.s32 	%rd55, %r68, 8;
	add.s64 	%rd56, %rd54, %rd55;
	st.f64 	[%rd56], %fd10;
	ld.f64 	%fd11, [%rd3+80];
	ld.u64 	%rd57, [%rd2+56];
	ld.v2.u32 	{%r69, %r70}, [%rd2];
	mov.u32 	%r73, 10;
	// Callseq Start 87
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r70;
	.param .b32 param3;
	st.param.b32	[param3+0], %r69;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r73;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r74, [retval0+0];
	
	//{
	}// Callseq End 87
	mul.wide.s32 	%rd58, %r74, 8;
	add.s64 	%rd59, %rd57, %rd58;
	st.f64 	[%rd59], %fd11;
	ld.f64 	%fd12, [%rd3+88];
	ld.u64 	%rd60, [%rd2+56];
	ld.v2.u32 	{%r75, %r76}, [%rd2];
	mov.u32 	%r79, 11;
	// Callseq Start 88
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r76;
	.param .b32 param3;
	st.param.b32	[param3+0], %r75;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r79;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r80, [retval0+0];
	
	//{
	}// Callseq End 88
	mul.wide.s32 	%rd61, %r80, 8;
	add.s64 	%rd62, %rd60, %rd61;
	st.f64 	[%rd62], %fd12;
	ld.f64 	%fd13, [%rd3+96];
	ld.u64 	%rd63, [%rd2+56];
	ld.v2.u32 	{%r81, %r82}, [%rd2];
	mov.u32 	%r85, 12;
	// Callseq Start 89
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r82;
	.param .b32 param3;
	st.param.b32	[param3+0], %r81;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r85;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r86, [retval0+0];
	
	//{
	}// Callseq End 89
	mul.wide.s32 	%rd64, %r86, 8;
	add.s64 	%rd65, %rd63, %rd64;
	st.f64 	[%rd65], %fd13;
	ld.f64 	%fd14, [%rd3+104];
	ld.u64 	%rd66, [%rd2+56];
	ld.v2.u32 	{%r87, %r88}, [%rd2];
	mov.u32 	%r91, 13;
	// Callseq Start 90
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r88;
	.param .b32 param3;
	st.param.b32	[param3+0], %r87;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r91;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r92, [retval0+0];
	
	//{
	}// Callseq End 90
	mul.wide.s32 	%rd67, %r92, 8;
	add.s64 	%rd68, %rd66, %rd67;
	st.f64 	[%rd68], %fd14;
	ld.f64 	%fd15, [%rd3+112];
	ld.u64 	%rd69, [%rd2+56];
	ld.v2.u32 	{%r93, %r94}, [%rd2];
	mov.u32 	%r97, 14;
	// Callseq Start 91
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r94;
	.param .b32 param3;
	st.param.b32	[param3+0], %r93;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r97;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r98, [retval0+0];
	
	//{
	}// Callseq End 91
	mul.wide.s32 	%rd70, %r98, 8;
	add.s64 	%rd71, %rd69, %rd70;
	st.f64 	[%rd71], %fd15;
	ld.f64 	%fd16, [%rd3+120];
	ld.u64 	%rd72, [%rd2+56];
	ld.v2.u32 	{%r99, %r100}, [%rd2];
	mov.u32 	%r103, 15;
	// Callseq Start 92
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r100;
	.param .b32 param3;
	st.param.b32	[param3+0], %r99;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r103;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r104, [retval0+0];
	
	//{
	}// Callseq End 92
	mul.wide.s32 	%rd73, %r104, 8;
	add.s64 	%rd74, %rd72, %rd73;
	st.f64 	[%rd74], %fd16;
	ld.f64 	%fd17, [%rd3+128];
	ld.u64 	%rd75, [%rd2+56];
	ld.v2.u32 	{%r105, %r106}, [%rd2];
	mov.u32 	%r109, 16;
	// Callseq Start 93
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r106;
	.param .b32 param3;
	st.param.b32	[param3+0], %r105;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r109;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r110, [retval0+0];
	
	//{
	}// Callseq End 93
	mul.wide.s32 	%rd76, %r110, 8;
	add.s64 	%rd77, %rd75, %rd76;
	st.f64 	[%rd77], %fd17;
	ld.f64 	%fd18, [%rd3+136];
	ld.u64 	%rd78, [%rd2+56];
	ld.v2.u32 	{%r111, %r112}, [%rd2];
	mov.u32 	%r115, 17;
	// Callseq Start 94
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r112;
	.param .b32 param3;
	st.param.b32	[param3+0], %r111;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r115;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r116, [retval0+0];
	
	//{
	}// Callseq End 94
	mul.wide.s32 	%rd79, %r116, 8;
	add.s64 	%rd80, %rd78, %rd79;
	st.f64 	[%rd80], %fd18;
	ld.f64 	%fd19, [%rd3+144];
	ld.u64 	%rd81, [%rd2+56];
	ld.v2.u32 	{%r117, %r118}, [%rd2];
	mov.u32 	%r121, 18;
	// Callseq Start 95
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r118;
	.param .b32 param3;
	st.param.b32	[param3+0], %r117;
	.param .b32 param4;
	st.param.b32	[param4+0], %r12;
	.param .b32 param5;
	st.param.b32	[param5+0], %r4;
	.param .b32 param6;
	st.param.b32	[param6+0], %r5;
	.param .b32 param7;
	st.param.b32	[param7+0], %r121;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r122, [retval0+0];
	
	//{
	}// Callseq End 95
	mul.wide.s32 	%rd82, %r122, 8;
	add.s64 	%rd83, %rd81, %rd82;
	st.f64 	[%rd83], %fd19;
	st.param.b32	[func_retval0+0], %r13;
	ret;
}

	// .globl	_Z20lb_f_multi_index_setP9lb_data_siiPA1_d
.visible .func  (.param .b32 func_retval0) _Z20lb_f_multi_index_setP9lb_data_siiPA1_d(
	.param .b64 _Z20lb_f_multi_index_setP9lb_data_siiPA1_d_param_0,
	.param .b32 _Z20lb_f_multi_index_setP9lb_data_siiPA1_d_param_1,
	.param .b32 _Z20lb_f_multi_index_setP9lb_data_siiPA1_d_param_2,
	.param .b64 _Z20lb_f_multi_index_setP9lb_data_siiPA1_d_param_3
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<21>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<40>;


	ld.param.u64 	%rd4, [_Z20lb_f_multi_index_setP9lb_data_siiPA1_d_param_0];
	ld.param.u32 	%r3, [_Z20lb_f_multi_index_setP9lb_data_siiPA1_d_param_1];
	ld.param.u32 	%r4, [_Z20lb_f_multi_index_setP9lb_data_siiPA1_d_param_2];
	ld.param.u64 	%rd39, [_Z20lb_f_multi_index_setP9lb_data_siiPA1_d_param_3];
	setp.ne.s64	%p1, %rd4, 0;
	@%p1 bra 	BB10_2;

	mov.u64 	%rd6, $str3;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, __unnamed_11;
	cvta.global.u64 	%rd11, %rd10;
	mov.u32 	%r5, 1562;
	mov.u64 	%rd12, 1;
	// Callseq Start 96
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 96

BB10_2:
	setp.lt.s32	%p2, %r4, 0;
	@%p2 bra 	BB10_4;

	ld.u32 	%r6, [%rd4];
	setp.gt.s32	%p3, %r6, %r4;
	@%p3 bra 	BB10_5;

BB10_4:
	mov.u64 	%rd13, $str7;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, __unnamed_11;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r7, 1563;
	mov.u64 	%rd19, 1;
	// Callseq Start 97
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd18;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd19;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 97

BB10_5:
	setp.lt.s32	%p4, %r3, 0;
	@%p4 bra 	BB10_7;

	ld.u32 	%r8, [%rd4+4];
	setp.gt.s32	%p5, %r8, %r3;
	@%p5 bra 	BB10_8;

BB10_7:
	mov.u64 	%rd20, $str5;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, $str1;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, __unnamed_11;
	cvta.global.u64 	%rd25, %rd24;
	mov.u32 	%r9, 1564;
	mov.u64 	%rd26, 1;
	// Callseq Start 98
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 param2;
	st.param.b32	[param2+0], %r9;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 98

BB10_8:
	mov.u64 	%rd27, $str10;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, __unnamed_11;
	cvta.global.u64 	%rd32, %rd31;
	mov.u32 	%r11, 1565;
	mov.u64 	%rd33, 1;
	// Callseq Start 99
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd32;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd33;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 99
	mov.u32 	%r20, 0;

BB10_9:
	ld.f64 	%fd1, [%rd39];
	ld.u64 	%rd34, [%rd4+56];
	ld.v2.u32 	{%r12, %r13}, [%rd4];
	mov.u32 	%r16, 1568;
	mov.u32 	%r17, 19;
	// Callseq Start 100
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r13;
	.param .b32 param3;
	st.param.b32	[param3+0], %r12;
	.param .b32 param4;
	st.param.b32	[param4+0], %r17;
	.param .b32 param5;
	st.param.b32	[param5+0], %r3;
	.param .b32 param6;
	st.param.b32	[param6+0], %r4;
	.param .b32 param7;
	st.param.b32	[param7+0], %r20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 100
	mul.wide.s32 	%rd37, %r18, 8;
	add.s64 	%rd38, %rd34, %rd37;
	st.f64 	[%rd38], %fd1;
	add.s64 	%rd39, %rd39, 8;
	add.s32 	%r20, %r20, 1;
	setp.lt.s32	%p6, %r20, 19;
	@%p6 bra 	BB10_9;

	mov.u32 	%r19, 0;
	st.param.b32	[func_retval0+0], %r19;
	ret;
}

	// .globl	_Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di
.visible .func  (.param .b32 func_retval0) _Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di(
	.param .b64 _Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_0,
	.param .b32 _Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_1,
	.param .b32 _Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_2,
	.param .b64 _Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_3,
	.param .b32 _Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_4
)
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<83>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<78>;


	ld.param.u64 	%rd6, [_Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_0];
	ld.param.u32 	%r14, [_Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_1];
	ld.param.u32 	%r15, [_Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_2];
	ld.param.u64 	%rd7, [_Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_3];
	ld.param.u32 	%r16, [_Z25lb_f_multi_index_set_partP9lb_data_siiPA1_di_param_4];
	setp.ne.s64	%p1, %rd6, 0;
	@%p1 bra 	BB11_2;

	mov.u64 	%rd8, $str3;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, $str1;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, __unnamed_12;
	cvta.global.u64 	%rd13, %rd12;
	mov.u32 	%r17, 1589;
	mov.u64 	%rd14, 1;
	// Callseq Start 101
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd13;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd14;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 101

BB11_2:
	setp.lt.s32	%p2, %r15, 0;
	@%p2 bra 	BB11_4;

	ld.u32 	%r18, [%rd6];
	setp.gt.s32	%p3, %r18, %r15;
	@%p3 bra 	BB11_5;

BB11_4:
	mov.u64 	%rd15, $str7;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, __unnamed_12;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r19, 1590;
	mov.u64 	%rd21, 1;
	// Callseq Start 102
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 102

BB11_5:
	setp.lt.s32	%p4, %r14, 0;
	@%p4 bra 	BB11_7;

	ld.u32 	%r20, [%rd6+4];
	setp.gt.s32	%p5, %r20, %r14;
	@%p5 bra 	BB11_8;

BB11_7:
	mov.u64 	%rd22, $str5;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, $str1;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, __unnamed_12;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r21, 1591;
	mov.u64 	%rd28, 1;
	// Callseq Start 103
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd25;
	.param .b32 param2;
	st.param.b32	[param2+0], %r21;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd27;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd28;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 103

BB11_8:
	mov.u64 	%rd29, $str10;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, $str1;
	cvta.global.u64 	%rd32, %rd31;
	mov.u64 	%rd33, __unnamed_12;
	cvta.global.u64 	%rd34, %rd33;
	mov.u32 	%r23, 1592;
	mov.u64 	%rd35, 1;
	// Callseq Start 104
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r23;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd34;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 104
	and.b32  	%r1, %r16, 3;
	mov.u32 	%r77, 0;

BB11_9:
	setp.lt.s32	%p6, %r16, 1;
	@%p6 bra 	BB11_19;

	setp.eq.s32	%p7, %r1, 0;
	mov.u32 	%r82, 0;
	@%p7 bra 	BB11_16;

	setp.eq.s32	%p8, %r1, 1;
	mov.u32 	%r79, 0;
	@%p8 bra 	BB11_15;

	setp.eq.s32	%p9, %r1, 2;
	mov.u32 	%r78, 0;
	@%p9 bra 	BB11_14;

	mul.wide.s32 	%rd36, %r77, 8;
	add.s64 	%rd37, %rd7, %rd36;
	ld.f64 	%fd1, [%rd37];
	ld.u64 	%rd38, [%rd6+56];
	ld.v2.u32 	{%r28, %r29}, [%rd6];
	mov.u32 	%r32, 1595;
	mov.u32 	%r33, 19;
	// Callseq Start 105
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r32;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r29;
	.param .b32 param3;
	st.param.b32	[param3+0], %r28;
	.param .b32 param4;
	st.param.b32	[param4+0], %r33;
	.param .b32 param5;
	st.param.b32	[param5+0], %r14;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r34, [retval0+0];
	
	//{
	}// Callseq End 105
	mul.wide.s32 	%rd41, %r34, 8;
	add.s64 	%rd42, %rd38, %rd41;
	st.f64 	[%rd42], %fd1;
	mov.u32 	%r78, 1;

BB11_14:
	mul.wide.s32 	%rd43, %r77, 8;
	add.s64 	%rd44, %rd7, %rd43;
	mul.wide.u32 	%rd45, %r78, 8;
	add.s64 	%rd46, %rd44, %rd45;
	ld.f64 	%fd2, [%rd46];
	ld.u64 	%rd47, [%rd6+56];
	ld.v2.u32 	{%r35, %r36}, [%rd6];
	add.s32 	%r39, %r78, %r14;
	mov.u32 	%r40, 1595;
	mov.u32 	%r41, 19;
	// Callseq Start 106
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r36;
	.param .b32 param3;
	st.param.b32	[param3+0], %r35;
	.param .b32 param4;
	st.param.b32	[param4+0], %r41;
	.param .b32 param5;
	st.param.b32	[param5+0], %r39;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r42, [retval0+0];
	
	//{
	}// Callseq End 106
	mul.wide.s32 	%rd50, %r42, 8;
	add.s64 	%rd51, %rd47, %rd50;
	st.f64 	[%rd51], %fd2;
	add.s32 	%r79, %r78, 1;

BB11_15:
	mul.wide.s32 	%rd52, %r77, 8;
	add.s64 	%rd53, %rd7, %rd52;
	mul.wide.s32 	%rd54, %r79, 8;
	add.s64 	%rd55, %rd53, %rd54;
	ld.f64 	%fd3, [%rd55];
	ld.u64 	%rd56, [%rd6+56];
	ld.v2.u32 	{%r43, %r44}, [%rd6];
	add.s32 	%r47, %r79, %r14;
	mov.u32 	%r48, 1595;
	mov.u32 	%r49, 19;
	// Callseq Start 107
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r44;
	.param .b32 param3;
	st.param.b32	[param3+0], %r43;
	.param .b32 param4;
	st.param.b32	[param4+0], %r49;
	.param .b32 param5;
	st.param.b32	[param5+0], %r47;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 107
	mul.wide.s32 	%rd59, %r50, 8;
	add.s64 	%rd60, %rd56, %rd59;
	st.f64 	[%rd60], %fd3;
	add.s32 	%r82, %r79, 1;

BB11_16:
	setp.lt.u32	%p10, %r16, 4;
	@%p10 bra 	BB11_19;

	add.s32 	%r81, %r14, %r82;
	mul.wide.s32 	%rd61, %r77, 8;
	add.s64 	%rd77, %rd7, %rd61;
	mul.wide.s32 	%rd3, %r82, 8;

BB11_18:
	add.s64 	%rd62, %rd77, %rd3;
	ld.f64 	%fd4, [%rd62];
	ld.u64 	%rd63, [%rd6+56];
	ld.v2.u32 	{%r51, %r52}, [%rd6];
	mov.u32 	%r55, 1595;
	mov.u32 	%r56, 19;
	// Callseq Start 108
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b32 param3;
	st.param.b32	[param3+0], %r51;
	.param .b32 param4;
	st.param.b32	[param4+0], %r56;
	.param .b32 param5;
	st.param.b32	[param5+0], %r81;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r57, [retval0+0];
	
	//{
	}// Callseq End 108
	mul.wide.s32 	%rd66, %r57, 8;
	add.s64 	%rd67, %rd63, %rd66;
	st.f64 	[%rd67], %fd4;
	ld.f64 	%fd5, [%rd62+8];
	ld.u64 	%rd68, [%rd6+56];
	ld.v2.u32 	{%r58, %r59}, [%rd6];
	add.s32 	%r62, %r81, 1;
	// Callseq Start 109
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r59;
	.param .b32 param3;
	st.param.b32	[param3+0], %r58;
	.param .b32 param4;
	st.param.b32	[param4+0], %r56;
	.param .b32 param5;
	st.param.b32	[param5+0], %r62;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r63, [retval0+0];
	
	//{
	}// Callseq End 109
	mul.wide.s32 	%rd69, %r63, 8;
	add.s64 	%rd70, %rd68, %rd69;
	st.f64 	[%rd70], %fd5;
	ld.f64 	%fd6, [%rd62+16];
	ld.u64 	%rd71, [%rd6+56];
	ld.v2.u32 	{%r64, %r65}, [%rd6];
	add.s32 	%r68, %r81, 2;
	// Callseq Start 110
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r65;
	.param .b32 param3;
	st.param.b32	[param3+0], %r64;
	.param .b32 param4;
	st.param.b32	[param4+0], %r56;
	.param .b32 param5;
	st.param.b32	[param5+0], %r68;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r69, [retval0+0];
	
	//{
	}// Callseq End 110
	mul.wide.s32 	%rd72, %r69, 8;
	add.s64 	%rd73, %rd71, %rd72;
	st.f64 	[%rd73], %fd6;
	ld.f64 	%fd7, [%rd62+24];
	ld.u64 	%rd74, [%rd6+56];
	ld.v2.u32 	{%r70, %r71}, [%rd6];
	add.s32 	%r74, %r81, 3;
	// Callseq Start 111
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r71;
	.param .b32 param3;
	st.param.b32	[param3+0], %r70;
	.param .b32 param4;
	st.param.b32	[param4+0], %r56;
	.param .b32 param5;
	st.param.b32	[param5+0], %r74;
	.param .b32 param6;
	st.param.b32	[param6+0], %r15;
	.param .b32 param7;
	st.param.b32	[param7+0], %r77;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r75, [retval0+0];
	
	//{
	}// Callseq End 111
	mul.wide.s32 	%rd75, %r75, 8;
	add.s64 	%rd76, %rd74, %rd75;
	st.f64 	[%rd76], %fd7;
	add.s32 	%r81, %r81, 4;
	add.s64 	%rd77, %rd77, 32;
	add.s32 	%r82, %r82, 4;
	setp.lt.s32	%p11, %r82, %r16;
	@%p11 bra 	BB11_18;

BB11_19:
	add.s32 	%r77, %r77, 1;
	setp.lt.s32	%p12, %r77, 19;
	@%p12 bra 	BB11_9;

	mov.u32 	%r76, 0;
	st.param.b32	[func_retval0+0], %r76;
	ret;
}


