typedef char __nv_bool;
# 246 "/usr/include/libio.h" 3
struct _IO_FILE;
# 58 ".././mpi_s/mpi.h"
enum elementary_datatypes {
# 58 ".././mpi_s/mpi.h"
MPI_CHAR,
# 59 ".././mpi_s/mpi.h"
MPI_SHORT,
# 60 ".././mpi_s/mpi.h"
MPI_INT,
# 61 ".././mpi_s/mpi.h"
MPI_LONG,
# 62 ".././mpi_s/mpi.h"
MPI_UNSIGNED_CHAR,
# 63 ".././mpi_s/mpi.h"
MPI_UNSIGNED_SHORT,
# 64 ".././mpi_s/mpi.h"
MPI_UNSIGNED,
# 65 ".././mpi_s/mpi.h"
MPI_UNSIGNED_LONG,
# 66 ".././mpi_s/mpi.h"
MPI_FLOAT,
# 67 ".././mpi_s/mpi.h"
MPI_DOUBLE,
# 68 ".././mpi_s/mpi.h"
MPI_LONG_DOUBLE,
# 69 ".././mpi_s/mpi.h"
MPI_BYTE,
# 70 ".././mpi_s/mpi.h"
MPI_PACKED};
# 72 ".././mpi_s/mpi.h"
enum collective_operations {
# 72 ".././mpi_s/mpi.h"
MPI_MAX,
# 73 ".././mpi_s/mpi.h"
MPI_MIN,
# 74 ".././mpi_s/mpi.h"
MPI_SUM,
# 75 ".././mpi_s/mpi.h"
MPI_PROD,
# 76 ".././mpi_s/mpi.h"
MPI_MAXLOC,
# 77 ".././mpi_s/mpi.h"
MPI_MINLOC,
# 78 ".././mpi_s/mpi.h"
MPI_BAND,
# 79 ".././mpi_s/mpi.h"
MPI_BOR,
# 80 ".././mpi_s/mpi.h"
MPI_BXOR,
# 81 ".././mpi_s/mpi.h"
MPI_LAND,
# 82 ".././mpi_s/mpi.h"
MPI_LOR,
# 83 ".././mpi_s/mpi.h"
MPI_LXOR};
# 22 "pe.h"
struct pe_s;
# 22 "coords.h"
struct coords_s;
# 26 "coords.h"
enum cartesian_directions {
# 26 "coords.h"
X,
# 26 "coords.h"
Y,
# 26 "coords.h"
Z};
# 28 "io_harness.h"
enum io_format_enum {
# 28 "io_harness.h"
IO_FORMAT_NULL,
# 29 "io_harness.h"
IO_FORMAT_ASCII,
# 30 "io_harness.h"
IO_FORMAT_BINARY,
# 31 "io_harness.h"
IO_FORMAT_ASCII_SERIAL,
# 32 "io_harness.h"
IO_FORMAT_BINARY_SERIAL,
# 33 "io_harness.h"
IO_FORMAT_DEFAULT};
# 44 "io_harness.h"
struct io_info_arg_s;
# 73 "io_harness.h"
struct io_info_s;
# 24 "map.h"
enum map_status {
# 24 "map.h"
MAP_FLUID,
# 24 "map.h"
MAP_BOUNDARY,
# 24 "map.h"
MAP_COLLOID,
# 24 "map.h"
MAP_STATUS_MAX};
# 22 "map_s.h"
struct map_s;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 48 "/usr/include/stdio.h" 3
typedef struct _IO_FILE FILE;
# 25 ".././mpi_s/mpi.h"
typedef int MPI_Handle;
# 26 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Comm;
# 28 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Datatype;
# 30 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Op;
# 28 ".././target/target_cuda.h"
typedef enum cudaMemcpyKind tdpMemcpyKind;
# 47 ".././target/target_cuda.h"
typedef enum cudaError tdpError_t;
# 22 "pe.h"
typedef struct pe_s pe_t;
# 22 "coords.h"
typedef struct coords_s cs_t;
# 33 "io_harness.h"
typedef enum io_format_enum io_format_enum_t;
# 36 "io_harness.h"
typedef struct io_info_s io_info_t;
# 39 "io_harness.h"
typedef int (*io_rw_cb_ft)(FILE *, int, void *);
# 42 "io_harness.h"
typedef struct io_info_arg_s io_info_arg_t;
# 44 "io_harness.h"
struct io_info_arg_s {
# 45 "io_harness.h"
int grid[3];};
# 26 "map.h"
typedef struct map_s map_t;
# 22 "map_s.h"
struct map_s {
# 23 "map_s.h"
int nsite;
# 24 "map_s.h"
int is_porous_media;
# 25 "map_s.h"
int ndata;
# 26 "map_s.h"
char *status;
# 27 "map_s.h"
double *data;
# 29 "map_s.h"
pe_t *pe;
# 30 "map_s.h"
cs_t *cs;
# 31 "map_s.h"
MPI_Datatype halostatus[3];
# 32 "map_s.h"
MPI_Datatype halodata[3];
# 33 "map_s.h"
io_info_t *info;
# 35 "map_s.h"
map_t *target;};
# 150 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) void free(void *);
# 189 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__noreturn__)) void __assert_fail(const char *, const char *, unsigned, const char *);
# 46 ".././target/target.h"
___device__(extern  __no_sc__) tdpError_t _Z17tdpGetDeviceCountPi(int *);
# 79 ".././target/target.h"
___device__(extern  __no_sc__) tdpError_t _Z7tdpFreePv(void *);
# 80 ".././target/target.h"
___device__(extern  __no_sc__) tdpError_t _Z9tdpMallocPPvm(void **, size_t);
# 117 ".././target/target.h"
___device__(extern  __no_sc__) void _Z15tdpErrorHandler9cudaErrorPKcii(tdpError_t, const char *, int, int);
# 59 "coords.h"
___device__(extern  __no_sc__) int _Z9cs_nlocalP8coords_sPi(cs_t *, int *);
# 61 "coords.h"
___device__(extern  __no_sc__) int _Z8cs_nhaloP8coords_sPi(cs_t *, int *);
# 62 "coords.h"
___device__(extern  __no_sc__) int _Z8cs_indexP8coords_siii(cs_t *, int, int, int);
# 64 "coords.h"
___device__(extern  __no_sc__) int _Z9cs_nsitesP8coords_sPi(cs_t *, int *);
# 200 "memory.h"
___device__(extern  __no_sc__) int _Z25reverse_addr_rank0_assertiPKcii(int, const char *, int, int);
# 203 "memory.h"
___device__(extern  __no_sc__) int _Z25reverse_addr_rank1_assertiPKciiii(int, const char *, int, int, int, int);
# 297 "map.c"
___device__(extern  __no_sc__) int _Z10map_statusP5map_siPi(map_t *, int, int *);
# 314 "map.c"
___device__(extern  __no_sc__) int _Z14map_status_setP5map_sii(map_t *, int, int);
# 332 "map.c"
___device__(extern  __no_sc__) int _Z9map_ndataP5map_sPi(map_t *, int *);
# 349 "map.c"
___device__(extern  __no_sc__) int _Z8map_dataP5map_siPd(map_t *, int, double *);
# 370 "map.c"
___device__(extern  __no_sc__) int _Z12map_data_setP5map_siPd(map_t *, int, double *);
static  __device__  __var_used__ const char __T6[36];
static  __device__  __var_used__ const char __T7[38];
static  __device__  __var_used__ const char __T8[30];
static  __device__  __var_used__ const char __T9[37];
static  __device__  __var_used__ const char __T10[41];
#include "common_functions.h"
static  __device__  __var_used__ const char __T6[36] = "int map_status(map_s *, int, int *)";
static  __device__  __var_used__ const char __T7[38] = "int map_status_set(map_s *, int, int)";
static  __device__  __var_used__ const char __T8[30] = "int map_ndata(map_s *, int *)";
static  __device__  __var_used__ const char __T9[37] = "int map_data(map_s *, int, double *)";
static  __device__  __var_used__ const char __T10[41] = "int map_data_set(map_s *, int, double *)";
# 297 "map.c"
___device__( __no_sc__) int _Z10map_statusP5map_siPi(
# 297 "map.c"
map_t *obj, 
# 297 "map.c"
int index, 
# 297 "map.c"
int *status){
# 297 "map.c"
{
# 299 "map.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"map.c"), 299U, __T6));
# 300 "map.c"
(status) ? ((void)0) : (__assert_fail(((const char *)"status"), ((const char *)"map.c"), 300U, __T6));
# 302 "map.c"
(*status) = ((int)((obj->status)[(_Z25reverse_addr_rank0_assertiPKcii(302, ((const char *)"map.c"), (obj->nsite), index))]));
# 304 "map.c"
return 0;
# 305 "map.c"
}}
# 314 "map.c"
___device__( __no_sc__) int _Z14map_status_setP5map_sii(
# 314 "map.c"
map_t *obj, 
# 314 "map.c"
int index, 
# 314 "map.c"
int status){
# 314 "map.c"
{
# 316 "map.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"map.c"), 316U, __T7));
# 317 "map.c"
(status >= 0) ? ((void)0) : (__assert_fail(((const char *)"status >= 0"), ((const char *)"map.c"), 317U, __T7));
# 318 "map.c"
(status < 3) ? ((void)0) : (__assert_fail(((const char *)"status < MAP_STATUS_MAX"), ((const char *)"map.c"), 318U, __T7));
# 320 "map.c"
((obj->status)[(_Z25reverse_addr_rank0_assertiPKcii(320, ((const char *)"map.c"), (obj->nsite), index))]) = ((char)status);
# 322 "map.c"
return 0;
# 323 "map.c"
}}
# 332 "map.c"
___device__( __no_sc__) int _Z9map_ndataP5map_sPi(
# 332 "map.c"
map_t *obj, 
# 332 "map.c"
int *ndata){
# 332 "map.c"
{
# 334 "map.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"map.c"), 334U, __T8));
# 335 "map.c"
(ndata) ? ((void)0) : (__assert_fail(((const char *)"ndata"), ((const char *)"map.c"), 335U, __T8));
# 337 "map.c"
(*ndata) = (obj->ndata);
# 339 "map.c"
return 0;
# 340 "map.c"
}}
# 349 "map.c"
___device__( __no_sc__) int _Z8map_dataP5map_siPd(
# 349 "map.c"
map_t *obj, 
# 349 "map.c"
int index, 
# 349 "map.c"
double *data){
# 349 "map.c"
{
# 351 "map.c"
 int __cuda_local_var_15799_7_non_const_n;
# 353 "map.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"map.c"), 353U, __T9));
# 354 "map.c"
(data) ? ((void)0) : (__assert_fail(((const char *)"data"), ((const char *)"map.c"), 354U, __T9));
# 356 "map.c"
for (__cuda_local_var_15799_7_non_const_n = 0; (__cuda_local_var_15799_7_non_const_n < (obj->ndata)); __cuda_local_var_15799_7_non_const_n++)
# 356 "map.c"
{
# 357 "map.c"
(data[__cuda_local_var_15799_7_non_const_n]) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(357, ((const char *)"map.c"), (obj->nsite), (obj->ndata), index, __cuda_local_var_15799_7_non_const_n))]);
# 358 "map.c"
}
# 360 "map.c"
return 0;
# 361 "map.c"
}}
# 370 "map.c"
___device__( __no_sc__) int _Z12map_data_setP5map_siPd(
# 370 "map.c"
map_t *obj, 
# 370 "map.c"
int index, 
# 370 "map.c"
double *data){
# 370 "map.c"
{
# 372 "map.c"
 int __cuda_local_var_15820_7_non_const_n;
# 374 "map.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"map.c"), 374U, __T10));
# 375 "map.c"
(data) ? ((void)0) : (__assert_fail(((const char *)"data"), ((const char *)"map.c"), 375U, __T10));
# 377 "map.c"
for (__cuda_local_var_15820_7_non_const_n = 0; (__cuda_local_var_15820_7_non_const_n < (obj->ndata)); __cuda_local_var_15820_7_non_const_n++)
# 377 "map.c"
{
# 378 "map.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(378, ((const char *)"map.c"), (obj->nsite), (obj->ndata), index, __cuda_local_var_15820_7_non_const_n))]) = (data[__cuda_local_var_15820_7_non_const_n]);
# 379 "map.c"
}
# 381 "map.c"
return 0;
# 382 "map.c"
}}
