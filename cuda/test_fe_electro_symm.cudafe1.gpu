typedef char __nv_bool;
# 92 "../.././mpi_s/mpi.h"
enum reserved_communicators {
# 92 "../.././mpi_s/mpi.h"
MPI_COMM_WORLD,
# 92 "../.././mpi_s/mpi.h"
MPI_COMM_SELF};
# 22 "../.././src/pe.h"
struct pe_s;
# 24 "../.././src/pe.h"
enum pe_enum_t {
# 24 "../.././src/pe.h"
PE_QUIET,
# 24 "../.././src/pe.h"
PE_VERBOSE,
# 24 "../.././src/pe.h"
PE_OPTION_MAX};
# 22 "../.././src/coords.h"
struct coords_s;
# 22 "../.././src/leesedwards.h"
struct lees_edw_s;
# 28 "../.././src/field.h"
struct field_s;
# 21 "../.././src/field_grad.h"
struct field_grad_s;
# 28 "../.././src/symmetric.h"
struct fe_symm_s;
# 37 "../.././src/psi.h"
struct psi_s;
# 24 "../.././src/fe_electro.h"
struct fe_electro_s;
# 26 "../.././src/fe_electro_symmetric.h"
struct fe_electro_symmetric_s;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 25 "../.././mpi_s/mpi.h"
typedef int MPI_Handle;
# 26 "../.././mpi_s/mpi.h"
typedef MPI_Handle MPI_Comm;
# 47 "../.././target/target_cuda.h"
typedef enum cudaError tdpError_t;
# 22 "../.././src/pe.h"
typedef struct pe_s pe_t;
# 24 "../.././src/pe.h"
typedef enum pe_enum_t pe_enum_t;
# 22 "../.././src/coords.h"
typedef struct coords_s cs_t;
# 22 "../.././src/leesedwards.h"
typedef struct lees_edw_s lees_edw_t;
# 28 "../.././src/field.h"
typedef struct field_s field_t;
# 21 "../.././src/field_grad.h"
typedef struct field_grad_s field_grad_t;
# 24 "../.././src/symmetric.h"
typedef struct fe_symm_s fe_symm_t;
# 37 "../.././src/psi.h"
typedef struct psi_s psi_t;
# 24 "../.././src/fe_electro.h"
typedef struct fe_electro_s fe_electro_t;
# 26 "../.././src/fe_electro_symmetric.h"
typedef struct fe_electro_symmetric_s fe_es_t;
# 189 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__noreturn__)) void __assert_fail(const char *, const char *, unsigned, const char *);
#if !defined(__CUDABE__)
# 244 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__const__)) double fabs(double);
#endif
# 46 "../.././target/target.h"
___device__(extern  __no_sc__) tdpError_t _Z17tdpGetDeviceCountPi(int *);
# 47 "../.././src/field.h"
___device__(extern  __no_sc__) int _Z16field_scalar_setP7field_sid(field_t *, int, double);
# 18 "tests.h"
___device__(extern  __no_sc__) void _Z16test_assert_infoiiPKc(const int, int, const char *);
#include "common_functions.h"
#if !defined(__CUDABE__)
#endif
