//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	_Z22do_test_coords_kernel1P8coords_s
.extern .func  (.param .b32 func_retval0) _Z8cs_nhaloP8coords_sPi
(
	.param .b64 _Z8cs_nhaloP8coords_sPi_param_0,
	.param .b64 _Z8cs_nhaloP8coords_sPi_param_1
)
;
.extern .func _Z16test_assert_infoiiPKc
(
	.param .b32 _Z16test_assert_infoiiPKc_param_0,
	.param .b32 _Z16test_assert_infoiiPKc_param_1,
	.param .b64 _Z16test_assert_infoiiPKc_param_2
)
;
.extern .func  (.param .b32 func_retval0) _Z9cs_ntotalP8coords_sPi
(
	.param .b64 _Z9cs_ntotalP8coords_sPi_param_0,
	.param .b64 _Z9cs_ntotalP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z9cs_nlocalP8coords_sPi
(
	.param .b64 _Z9cs_nlocalP8coords_sPi_param_0,
	.param .b64 _Z9cs_nlocalP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z9cs_cartszP8coords_sPi
(
	.param .b64 _Z9cs_cartszP8coords_sPi_param_0,
	.param .b64 _Z9cs_cartszP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z9cs_nsitesP8coords_sPi
(
	.param .b64 _Z9cs_nsitesP8coords_sPi_param_0,
	.param .b64 _Z9cs_nsitesP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z14cs_cart_coordsP8coords_sPi
(
	.param .b64 _Z14cs_cart_coordsP8coords_sPi_param_0,
	.param .b64 _Z14cs_cart_coordsP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z16cs_nlocal_offsetP8coords_sPi
(
	.param .b64 _Z16cs_nlocal_offsetP8coords_sPi_param_0,
	.param .b64 _Z16cs_nlocal_offsetP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z7cs_lminP8coords_sPd
(
	.param .b64 _Z7cs_lminP8coords_sPd_param_0,
	.param .b64 _Z7cs_lminP8coords_sPd_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z7cs_ltotP8coords_sPd
(
	.param .b64 _Z7cs_ltotP8coords_sPd_param_0,
	.param .b64 _Z7cs_ltotP8coords_sPd_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .align 1 .b8 __unnamed_1[40] = {118, 111, 105, 100, 32, 100, 111, 95, 116, 101, 115, 116, 95, 99, 111, 111, 114, 100, 115, 95, 107, 101, 114, 110, 101, 108, 49, 40, 99, 111, 111, 114, 100, 115, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 $str[3] = {99, 115, 0};
.global .align 1 .b8 $str1[14] = {116, 101, 115, 116, 95, 99, 111, 111, 114, 100, 115, 46, 99, 0};

.visible .entry _Z22do_test_coords_kernel1P8coords_s(
	.param .u64 _Z22do_test_coords_kernel1P8coords_s_param_0
)
{
	.local .align 8 .b8 	__local_depot0[120];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<19>;
	.reg .b32 	%r<87>;
	.reg .f64 	%fd<22>;
	.reg .b64 	%rd<29>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [_Z22do_test_coords_kernel1P8coords_s_param_0];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 603;
	mov.u64 	%rd8, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	add.u64 	%rd9, %SP, 0;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z8cs_nhaloP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 1
	add.u64 	%rd10, %SPL, 0;
	ld.local.u32 	%r3, [%rd10];
	setp.eq.s32	%p2, %r3, 1;
	selp.u32	%r4, 1, 0, %p2;
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r5, 606;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b32 param1;
	st.param.b32	[param1+0], %r5;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 2
	add.u64 	%rd13, %SP, 32;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z9cs_ntotalP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 3
	add.u64 	%rd14, %SPL, 32;
	ld.local.u32 	%r7, [%rd14];
	setp.eq.s32	%p3, %r7, 64;
	selp.u32	%r8, 1, 0, %p3;
	mov.u32 	%r9, 609;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r8;
	.param .b32 param1;
	st.param.b32	[param1+0], %r9;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 4
	ld.local.u32 	%r10, [%rd14+4];
	setp.eq.s32	%p4, %r10, 64;
	selp.u32	%r11, 1, 0, %p4;
	mov.u32 	%r12, 610;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b32 param1;
	st.param.b32	[param1+0], %r12;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 5
	ld.local.u32 	%r13, [%rd14+8];
	setp.eq.s32	%p5, %r13, 64;
	selp.u32	%r14, 1, 0, %p5;
	mov.u32 	%r15, 611;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r14;
	.param .b32 param1;
	st.param.b32	[param1+0], %r15;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 6
	add.u64 	%rd15, %SP, 44;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z9cs_nlocalP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 7
	add.u64 	%rd16, %SP, 8;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z9cs_cartszP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 8
	add.u64 	%rd17, %SPL, 8;
	ld.local.u32 	%r18, [%rd17];
	ld.local.u32 	%r19, [%rd14];
	div.s32 	%r20, %r19, %r18;
	add.u64 	%rd18, %SPL, 44;
	ld.local.u32 	%r21, [%rd18];
	setp.eq.s32	%p6, %r21, %r20;
	selp.u32	%r22, 1, 0, %p6;
	mov.u32 	%r23, 616;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r22;
	.param .b32 param1;
	st.param.b32	[param1+0], %r23;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 9
	ld.local.u32 	%r24, [%rd17+4];
	ld.local.u32 	%r25, [%rd14+4];
	div.s32 	%r26, %r25, %r24;
	ld.local.u32 	%r27, [%rd18+4];
	setp.eq.s32	%p7, %r27, %r26;
	selp.u32	%r28, 1, 0, %p7;
	mov.u32 	%r29, 617;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r28;
	.param .b32 param1;
	st.param.b32	[param1+0], %r29;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 10
	ld.local.u32 	%r30, [%rd17+8];
	ld.local.u32 	%r31, [%rd14+8];
	div.s32 	%r32, %r31, %r30;
	ld.local.u32 	%r33, [%rd18+8];
	setp.eq.s32	%p8, %r33, %r32;
	selp.u32	%r34, 1, 0, %p8;
	mov.u32 	%r35, 618;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r34;
	.param .b32 param1;
	st.param.b32	[param1+0], %r35;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 11
	add.u64 	%rd19, %SP, 4;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd19;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z9cs_nsitesP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r36, [retval0+0];
	
	//{
	}// Callseq End 12
	ld.local.u32 	%r37, [%rd10];
	shl.b32 	%r38, %r37, 1;
	ld.local.u32 	%r39, [%rd18];
	add.s32 	%r40, %r38, %r39;
	ld.local.u32 	%r41, [%rd18+4];
	add.s32 	%r42, %r41, %r38;
	mul.lo.s32 	%r43, %r40, %r42;
	ld.local.u32 	%r44, [%rd18+8];
	add.s32 	%r45, %r38, %r44;
	mul.lo.s32 	%r46, %r43, %r45;
	add.u64 	%rd20, %SPL, 4;
	ld.local.u32 	%r47, [%rd20];
	setp.eq.s32	%p9, %r47, %r46;
	selp.u32	%r48, 1, 0, %p9;
	mov.u32 	%r49, 622;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r48;
	.param .b32 param1;
	st.param.b32	[param1+0], %r49;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 13
	add.u64 	%rd21, %SP, 20;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 14
	add.u64 	%rd22, %SP, 56;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r51, [retval0+0];
	
	//{
	}// Callseq End 15
	ld.local.u32 	%r52, [%rd18];
	add.u64 	%rd23, %SPL, 20;
	ld.local.u32 	%r53, [%rd23];
	mul.lo.s32 	%r54, %r52, %r53;
	add.u64 	%rd24, %SPL, 56;
	ld.local.u32 	%r55, [%rd24];
	setp.eq.s32	%p10, %r55, %r54;
	selp.u32	%r56, 1, 0, %p10;
	mov.u32 	%r57, 627;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r56;
	.param .b32 param1;
	st.param.b32	[param1+0], %r57;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 16
	ld.local.u32 	%r58, [%rd18+4];
	ld.local.u32 	%r59, [%rd23+4];
	mul.lo.s32 	%r60, %r58, %r59;
	ld.local.u32 	%r61, [%rd24+4];
	setp.eq.s32	%p11, %r61, %r60;
	selp.u32	%r62, 1, 0, %p11;
	mov.u32 	%r63, 628;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r62;
	.param .b32 param1;
	st.param.b32	[param1+0], %r63;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 17
	ld.local.u32 	%r64, [%rd18+8];
	ld.local.u32 	%r65, [%rd23+8];
	mul.lo.s32 	%r66, %r64, %r65;
	ld.local.u32 	%r67, [%rd24+8];
	setp.eq.s32	%p12, %r67, %r66;
	selp.u32	%r68, 1, 0, %p12;
	mov.u32 	%r69, 629;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r68;
	.param .b32 param1;
	st.param.b32	[param1+0], %r69;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 18
	add.u64 	%rd25, %SP, 72;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z7cs_lminP8coords_sPd, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r70, [retval0+0];
	
	//{
	}// Callseq End 19
	add.u64 	%rd26, %SP, 96;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd1;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd26;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z7cs_ltotP8coords_sPd, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r71, [retval0+0];
	
	//{
	}// Callseq End 20
	add.u64 	%rd27, %SPL, 72;
	ld.local.f64 	%fd1, [%rd27];
	add.f64 	%fd2, %fd1, 0dBFE0000000000000;
	abs.f64 	%fd3, %fd2;
	setp.lt.f64	%p13, %fd3, 0d3CB0000000000000;
	selp.u32	%r72, 1, 0, %p13;
	mov.u32 	%r73, 634;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r72;
	.param .b32 param1;
	st.param.b32	[param1+0], %r73;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 21
	ld.local.f64 	%fd4, [%rd27+8];
	add.f64 	%fd5, %fd4, 0dBFE0000000000000;
	abs.f64 	%fd6, %fd5;
	setp.lt.f64	%p14, %fd6, 0d3CB0000000000000;
	selp.u32	%r74, 1, 0, %p14;
	mov.u32 	%r75, 635;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r74;
	.param .b32 param1;
	st.param.b32	[param1+0], %r75;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 22
	ld.local.f64 	%fd7, [%rd27+16];
	add.f64 	%fd8, %fd7, 0dBFE0000000000000;
	abs.f64 	%fd9, %fd8;
	setp.lt.f64	%p15, %fd9, 0d3CB0000000000000;
	selp.u32	%r76, 1, 0, %p15;
	mov.u32 	%r77, 636;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r76;
	.param .b32 param1;
	st.param.b32	[param1+0], %r77;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 23
	ld.local.u32 	%r78, [%rd14];
	cvt.rn.f64.s32	%fd10, %r78;
	add.u64 	%rd28, %SPL, 96;
	ld.local.f64 	%fd11, [%rd28];
	sub.f64 	%fd12, %fd11, %fd10;
	abs.f64 	%fd13, %fd12;
	setp.lt.f64	%p16, %fd13, 0d3CB0000000000000;
	selp.u32	%r79, 1, 0, %p16;
	mov.u32 	%r80, 638;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r79;
	.param .b32 param1;
	st.param.b32	[param1+0], %r80;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 24
	ld.local.u32 	%r81, [%rd14+4];
	cvt.rn.f64.s32	%fd14, %r81;
	ld.local.f64 	%fd15, [%rd28+8];
	sub.f64 	%fd16, %fd15, %fd14;
	abs.f64 	%fd17, %fd16;
	setp.lt.f64	%p17, %fd17, 0d3CB0000000000000;
	selp.u32	%r82, 1, 0, %p17;
	mov.u32 	%r83, 639;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r82;
	.param .b32 param1;
	st.param.b32	[param1+0], %r83;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 25
	ld.local.u32 	%r84, [%rd14+8];
	cvt.rn.f64.s32	%fd18, %r84;
	ld.local.f64 	%fd19, [%rd28+16];
	sub.f64 	%fd20, %fd19, %fd18;
	abs.f64 	%fd21, %fd20;
	setp.lt.f64	%p18, %fd21, 0d3CB0000000000000;
	selp.u32	%r85, 1, 0, %p18;
	mov.u32 	%r86, 640;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r85;
	.param .b32 param1;
	st.param.b32	[param1+0], %r86;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	call.uni 
	_Z16test_assert_infoiiPKc, 
	(
	param0, 
	param1, 
	param2
	);
	
	//{
	}// Callseq End 26
	ret;
}


