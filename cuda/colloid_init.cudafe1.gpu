typedef char __nv_bool;
# 246 "/usr/include/libio.h" 3
struct _IO_FILE;
# 44 "../src/colloid.h"
struct colloid_state_type;
# 92 ".././mpi_s/mpi.h"
enum reserved_communicators {
# 92 ".././mpi_s/mpi.h"
MPI_COMM_WORLD,
# 92 ".././mpi_s/mpi.h"
MPI_COMM_SELF};
# 22 "../src/pe.h"
struct pe_s;
# 24 "../src/pe.h"
enum pe_enum_t {
# 24 "../src/pe.h"
PE_QUIET,
# 24 "../src/pe.h"
PE_VERBOSE,
# 24 "../src/pe.h"
PE_OPTION_MAX};
# 22 "../src/coords.h"
struct coords_s;
# 26 "../src/coords.h"
enum cartesian_directions {
# 26 "../src/coords.h"
X,
# 26 "../src/coords.h"
Y,
# 26 "../src/coords.h"
Z};
# 39 "colloid_init.c"
enum format {
# 39 "colloid_init.c"
ASCII,
# 39 "colloid_init.c"
BINARY};
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 48 "/usr/include/stdio.h" 3
typedef struct _IO_FILE FILE;
# 42 "../src/colloid.h"
typedef struct colloid_state_type colloid_state_t;
# 44 "../src/colloid.h"
struct colloid_state_type {
# 46 "../src/colloid.h"
int index;
# 47 "../src/colloid.h"
int rebuild;
# 48 "../src/colloid.h"
int nbonds;
# 49 "../src/colloid.h"
int nangles;
# 51 "../src/colloid.h"
int isfixedr;
# 52 "../src/colloid.h"
int isfixedv;
# 53 "../src/colloid.h"
int isfixedw;
# 54 "../src/colloid.h"
int isfixeds;
# 56 "../src/colloid.h"
int type;
# 57 "../src/colloid.h"
int bond[2];
# 59 "../src/colloid.h"
int rng;
# 61 "../src/colloid.h"
int isfixedrxyz[3];
# 62 "../src/colloid.h"
int isfixedvxyz[3];
# 67 "../src/colloid.h"
int intpad[14];
# 71 "../src/colloid.h"
double a0;
# 72 "../src/colloid.h"
double ah;
# 73 "../src/colloid.h"
double r[3];
# 74 "../src/colloid.h"
double v[3];
# 75 "../src/colloid.h"
double w[3];
# 76 "../src/colloid.h"
double s[3];
# 77 "../src/colloid.h"
double m[3];
# 78 "../src/colloid.h"
double b1;
# 79 "../src/colloid.h"
double b2;
# 80 "../src/colloid.h"
double c;
# 81 "../src/colloid.h"
double h;
# 82 "../src/colloid.h"
double dr[3];
# 83 "../src/colloid.h"
double deltaphi;
# 92 "../src/colloid.h"
double q0;
# 93 "../src/colloid.h"
double q1;
# 94 "../src/colloid.h"
double epsilon;
# 96 "../src/colloid.h"
double deltaq0;
# 97 "../src/colloid.h"
double deltaq1;
# 98 "../src/colloid.h"
double sa;
# 99 "../src/colloid.h"
double saf;
# 101 "../src/colloid.h"
double dpad[16];};
# 25 ".././mpi_s/mpi.h"
typedef int MPI_Handle;
# 26 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Comm;
# 22 "../src/pe.h"
typedef struct pe_s pe_t;
# 24 "../src/pe.h"
typedef enum pe_enum_t pe_enum_t;
# 22 "../src/coords.h"
typedef struct coords_s cs_t;
#if !defined(__CUDABE__)
# 145 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) int printf(const char *__restrict__, ...);
#endif
# 150 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) void free(void *);
# 189 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__noreturn__)) void __assert_fail(const char *, const char *, unsigned, const char *);
#if !defined(__CUDABE__)
# 612 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) double sqrt(double);
#endif
#if !defined(__CUDABE__)
# 1447 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__const__)) double floor(double);
#endif
#if !defined(__CUDABE__)
# 1486 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) double exp(double);
#endif
# 56 "../src/coords.h"
___device__(extern  __no_sc__) int _Z7cs_lminP8coords_sPd(cs_t *, double *);
# 58 "../src/coords.h"
___device__(extern  __no_sc__) int _Z11cs_periodicP8coords_sPi(cs_t *, int *);
# 63 "../src/coords.h"
___device__(extern  __no_sc__) int _Z9cs_ntotalP8coords_sPi(cs_t *, int *);
# 65 "../src/coords.h"
___device__(extern  __no_sc__) int _Z19cs_minimum_distanceP8coords_sPKdS2_Pd(cs_t *, const double *, const double *, double *);
# 44 "../src/util.h"
___device__(extern  __no_sc__) double _Z7modulusPKd(const double *);
#include "common_functions.h"
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
