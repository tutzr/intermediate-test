typedef char __nv_bool;
# 92 "../.././mpi_s/mpi.h"
enum reserved_communicators {
# 92 "../.././mpi_s/mpi.h"
MPI_COMM_WORLD,
# 92 "../.././mpi_s/mpi.h"
MPI_COMM_SELF};
# 22 "../.././src/pe.h"
struct pe_s;
# 24 "../.././src/pe.h"
enum pe_enum_t {
# 24 "../.././src/pe.h"
PE_QUIET,
# 24 "../.././src/pe.h"
PE_VERBOSE,
# 24 "../.././src/pe.h"
PE_OPTION_MAX};
# 22 "../.././src/coords.h"
struct coords_s;
# 26 "../.././src/coords.h"
enum cartesian_directions {
# 26 "../.././src/coords.h"
X,
# 26 "../.././src/coords.h"
Y,
# 26 "../.././src/coords.h"
Z};
# 18 "../.././src/physics.h"
struct physics_s;
# 73 "../.././src/io_harness.h"
struct io_info_s;
# 39 "../.././src/psi_s.h"
struct psi_s;
# 26 "../.././src/fe_electro_symmetric.h"
struct fe_electro_symmetric_s;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 25 "../.././mpi_s/mpi.h"
typedef int MPI_Handle;
# 26 "../.././mpi_s/mpi.h"
typedef MPI_Handle MPI_Comm;
# 28 "../.././mpi_s/mpi.h"
typedef MPI_Handle MPI_Datatype;
# 22 "../.././src/pe.h"
typedef struct pe_s pe_t;
# 24 "../.././src/pe.h"
typedef enum pe_enum_t pe_enum_t;
# 22 "../.././src/coords.h"
typedef struct coords_s cs_t;
# 18 "../.././src/physics.h"
typedef struct physics_s physics_t;
# 36 "../.././src/io_harness.h"
typedef struct io_info_s io_info_t;
# 37 "../.././src/psi.h"
typedef struct psi_s psi_t;
# 41 "../.././src/psi.h"
typedef int (*f_vare_t)(void *, int, double *);
# 39 "../.././src/psi_s.h"
struct psi_s {
# 40 "../.././src/psi_s.h"
pe_t *pe;
# 41 "../.././src/psi_s.h"
cs_t *cs;
# 43 "../.././src/psi_s.h"
int nk;
# 44 "../.././src/psi_s.h"
int nsites;
# 45 "../.././src/psi_s.h"
double *psi;
# 46 "../.././src/psi_s.h"
double *rho;
# 47 "../.././src/psi_s.h"
double *diffusivity;
# 48 "../.././src/psi_s.h"
int *valency;
# 49 "../.././src/psi_s.h"
double e;
# 50 "../.././src/psi_s.h"
double epsilon;
# 51 "../.././src/psi_s.h"
double epsilon2;
# 52 "../.././src/psi_s.h"
double beta;
# 53 "../.././src/psi_s.h"
double reltol;
# 54 "../.././src/psi_s.h"
double abstol;
# 55 "../.././src/psi_s.h"
int method;
# 56 "../.././src/psi_s.h"
int maxits;
# 57 "../.././src/psi_s.h"
int multisteps;
# 58 "../.././src/psi_s.h"
int skipsteps;
# 59 "../.././src/psi_s.h"
int nfreq_io;
# 60 "../.././src/psi_s.h"
int nfreq;
# 61 "../.././src/psi_s.h"
double diffacc;
# 62 "../.././src/psi_s.h"
MPI_Datatype psihalo[3];
# 63 "../.././src/psi_s.h"
MPI_Datatype rhohalo[3];
# 64 "../.././src/psi_s.h"
io_info_t *info;};
# 26 "../.././src/fe_electro_symmetric.h"
typedef struct fe_electro_symmetric_s fe_es_t;
# 150 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) void free(void *);
# 189 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__noreturn__)) void __assert_fail(const char *, const char *, unsigned, const char *);
#if !defined(__CUDABE__)
# 244 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__const__)) double fabs(double);
#endif
# 54 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z9cs_cartszP8coords_sPi(cs_t *, int *);
# 55 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z14cs_cart_coordsP8coords_sPi(cs_t *, int *);
# 57 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z7cs_ltotP8coords_sPd(cs_t *, double *);
# 59 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z9cs_nlocalP8coords_sPi(cs_t *, int *);
# 62 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z8cs_indexP8coords_siii(cs_t *, int, int, int);
# 40 "../.././src/physics.h"
___device__(extern  __no_sc__) int _Z11physics_refPP9physics_s(physics_t **);
# 18 "tests.h"
___device__(extern  __no_sc__) void _Z16test_assert_infoiiPKc(const int, int, const char *);
#include "common_functions.h"
#if !defined(__CUDABE__)
#endif
