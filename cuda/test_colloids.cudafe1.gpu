typedef char __nv_bool;
# 92 "../.././mpi_s/mpi.h"
enum reserved_communicators {
# 92 "../.././mpi_s/mpi.h"
MPI_COMM_WORLD,
# 92 "../.././mpi_s/mpi.h"
MPI_COMM_SELF};
# 22 "../.././src/pe.h"
struct pe_s;
# 24 "../.././src/pe.h"
enum pe_enum_t {
# 24 "../.././src/pe.h"
PE_QUIET,
# 24 "../.././src/pe.h"
PE_VERBOSE,
# 24 "../.././src/pe.h"
PE_OPTION_MAX};
# 22 "../.././src/coords.h"
struct coords_s;
# 26 "../.././src/coords.h"
enum cartesian_directions {
# 26 "../.././src/coords.h"
X,
# 26 "../.././src/coords.h"
Y,
# 26 "../.././src/coords.h"
Z};
# 26 "../.././src/colloids.h"
struct colloid;
# 24 "../.././src/colloids_s.h"
struct colloids_info_s;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 25 "../.././mpi_s/mpi.h"
typedef int MPI_Handle;
# 26 "../.././mpi_s/mpi.h"
typedef MPI_Handle MPI_Comm;
# 22 "../.././src/pe.h"
typedef struct pe_s pe_t;
# 24 "../.././src/pe.h"
typedef enum pe_enum_t pe_enum_t;
# 22 "../.././src/coords.h"
typedef struct coords_s cs_t;
# 24 "../.././src/colloids.h"
typedef struct colloid colloid_t;
# 65 "../.././src/colloids.h"
typedef struct colloids_info_s colloids_info_t;
# 24 "../.././src/colloids_s.h"
struct colloids_info_s {
# 26 "../.././src/colloids_s.h"
int nhalo;
# 27 "../.././src/colloids_s.h"
int ntotal;
# 28 "../.././src/colloids_s.h"
int nallocated;
# 29 "../.././src/colloids_s.h"
int ncell[3];
# 30 "../.././src/colloids_s.h"
int str[3];
# 31 "../.././src/colloids_s.h"
int nsites;
# 32 "../.././src/colloids_s.h"
int ncells;
# 34 "../.././src/colloids_s.h"
int rebuild_freq;
# 36 "../.././src/colloids_s.h"
double rho0;
# 37 "../.././src/colloids_s.h"
double drmax;
# 39 "../.././src/colloids_s.h"
colloid_t **clist;
# 40 "../.././src/colloids_s.h"
colloid_t **map_old;
# 41 "../.././src/colloids_s.h"
colloid_t **map_new;
# 42 "../.././src/colloids_s.h"
colloid_t *headall;
# 43 "../.././src/colloids_s.h"
colloid_t *headlocal;
# 45 "../.././src/colloids_s.h"
pe_t *pe;
# 46 "../.././src/colloids_s.h"
cs_t *cs;
# 47 "../.././src/colloids_s.h"
colloids_info_t *target;};
# 189 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__noreturn__)) void __assert_fail(const char *, const char *, unsigned, const char *);
#if !defined(__CUDABE__)
# 244 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/math_functions.h"
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__const__)) double fabs(double);
#endif
# 54 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z9cs_cartszP8coords_sPi(cs_t *, int *);
# 56 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z7cs_lminP8coords_sPd(cs_t *, double *);
# 57 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z7cs_ltotP8coords_sPd(cs_t *, double *);
# 59 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z9cs_nlocalP8coords_sPi(cs_t *, int *);
# 60 "../.././src/coords.h"
___device__(extern  __no_sc__) int _Z16cs_nlocal_offsetP8coords_sPi(cs_t *, int *);
# 18 "tests.h"
___device__(extern  __no_sc__) void _Z16test_assert_infoiiPKc(const int, int, const char *);
#include "common_functions.h"
#if !defined(__CUDABE__)
#endif
