//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	_Z11physics_refPP9physics_s
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 __nv_static_28__15_physics_cpp1_ii_93368647_const_phys[232];
.global .align 1 .b8 __unnamed_1[30] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 114, 101, 102, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 42, 41, 0};
.global .align 1 .b8 __unnamed_2[45] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 101, 116, 97, 95, 115, 104, 101, 97, 114, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[44] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 101, 116, 97, 95, 98, 117, 108, 107, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_4[40] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 114, 104, 111, 48, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_5[38] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 107, 116, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_6[40] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 112, 104, 105, 48, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_7[38] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 98, 48, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_8[38] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 101, 48, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_9[33] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 101, 48, 95, 102, 108, 97, 103, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_10[48] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 101, 48, 95, 102, 114, 101, 113, 117, 101, 110, 99, 121, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_11[41] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 102, 98, 111, 100, 121, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_12[42] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 102, 112, 117, 108, 115, 101, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_13[52] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 102, 112, 117, 108, 115, 101, 95, 102, 114, 101, 113, 117, 101, 110, 99, 121, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_14[44] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 109, 111, 98, 105, 108, 105, 116, 121, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_15[41] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 102, 103, 114, 97, 118, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_16[43] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 103, 114, 97, 100, 95, 109, 117, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_17[42] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 99, 111, 110, 116, 114, 111, 108, 95, 116, 105, 109, 101, 115, 116, 101, 112, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_18[48] = {105, 110, 116, 32, 112, 104, 121, 115, 105, 99, 115, 95, 99, 111, 110, 116, 114, 111, 108, 95, 116, 105, 109, 101, 40, 112, 104, 121, 115, 105, 99, 115, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 $str[4] = {114, 101, 102, 0};
.global .align 1 .b8 $str1[10] = {112, 104, 121, 115, 105, 99, 115, 46, 99, 0};
.global .align 1 .b8 $str2[5] = {112, 104, 121, 115, 0};
.global .align 1 .b8 $str3[4] = {101, 116, 97, 0};
.global .align 1 .b8 $str4[5] = {114, 104, 111, 48, 0};
.global .align 1 .b8 $str5[3] = {107, 116, 0};
.global .align 1 .b8 $str6[5] = {112, 104, 105, 48, 0};
.global .align 1 .b8 $str7[9] = {109, 111, 98, 105, 108, 105, 116, 121, 0};
.global .align 1 .b8 $str8[2] = {116, 0};

.visible .func  (.param .b32 func_retval0) _Z11physics_refPP9physics_s(
	.param .b64 _Z11physics_refPP9physics_s_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z11physics_refPP9physics_s_param_0];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 73;
	mov.u64 	%rd8, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	mov.u64 	%rd9, __nv_static_28__15_physics_cpp1_ii_93368647_const_phys;
	cvta.const.u64 	%rd10, %rd9;
	st.u64 	[%rd1], %rd10;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z17physics_eta_shearP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z17physics_eta_shearP9physics_sPd(
	.param .b64 _Z17physics_eta_shearP9physics_sPd_param_0,
	.param .b64 _Z17physics_eta_shearP9physics_sPd_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [_Z17physics_eta_shearP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z17physics_eta_shearP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_2;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 164;
	mov.u64 	%rd9, 1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_2:
	setp.ne.s64	%p2, %rd2, 0;
	@%p2 bra 	BB1_4;

	mov.u64 	%rd10, $str3;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_2;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r2, 165;
	mov.u64 	%rd16, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB1_4:
	ld.f64 	%fd1, [%rd1];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z16physics_eta_bulkP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z16physics_eta_bulkP9physics_sPd(
	.param .b64 _Z16physics_eta_bulkP9physics_sPd_param_0,
	.param .b64 _Z16physics_eta_bulkP9physics_sPd_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [_Z16physics_eta_bulkP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z16physics_eta_bulkP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_3;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 195;
	mov.u64 	%rd9, 1;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB2_2:
	setp.ne.s64	%p2, %rd2, 0;
	@%p2 bra 	BB2_4;

	mov.u64 	%rd10, $str3;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_3;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r2, 196;
	mov.u64 	%rd16, 1;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_4:
	ld.f64 	%fd1, [%rd1+8];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z12physics_rho0P9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z12physics_rho0P9physics_sPd(
	.param .b64 _Z12physics_rho0P9physics_sPd_param_0,
	.param .b64 _Z12physics_rho0P9physics_sPd_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [_Z12physics_rho0P9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z12physics_rho0P9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_4;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 226;
	mov.u64 	%rd9, 1;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB3_2:
	setp.ne.s64	%p2, %rd2, 0;
	@%p2 bra 	BB3_4;

	mov.u64 	%rd10, $str4;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_4;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r2, 227;
	mov.u64 	%rd16, 1;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB3_4:
	ld.f64 	%fd1, [%rd1+24];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z10physics_ktP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z10physics_ktP9physics_sPd(
	.param .b64 _Z10physics_ktP9physics_sPd_param_0,
	.param .b64 _Z10physics_ktP9physics_sPd_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [_Z10physics_ktP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z10physics_ktP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_5;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 257;
	mov.u64 	%rd9, 1;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB4_2:
	setp.ne.s64	%p2, %rd2, 0;
	@%p2 bra 	BB4_4;

	mov.u64 	%rd10, $str5;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_5;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r2, 258;
	mov.u64 	%rd16, 1;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB4_4:
	ld.f64 	%fd1, [%rd1+16];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z12physics_phi0P9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z12physics_phi0P9physics_sPd(
	.param .b64 _Z12physics_phi0P9physics_sPd_param_0,
	.param .b64 _Z12physics_phi0P9physics_sPd_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [_Z12physics_phi0P9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z12physics_phi0P9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB5_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_6;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 288;
	mov.u64 	%rd9, 1;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB5_2:
	setp.ne.s64	%p2, %rd2, 0;
	@%p2 bra 	BB5_4;

	mov.u64 	%rd10, $str6;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_6;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r2, 289;
	mov.u64 	%rd16, 1;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB5_4:
	ld.f64 	%fd1, [%rd1+32];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z10physics_b0P9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z10physics_b0P9physics_sPd(
	.param .b64 _Z10physics_b0P9physics_sPd_param_0,
	.param .b64 _Z10physics_b0P9physics_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z10physics_b0P9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z10physics_b0P9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB6_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_7;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 319;
	mov.u64 	%rd9, 1;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB6_2:
	ld.f64 	%fd1, [%rd1+104];
	st.f64 	[%rd2], %fd1;
	ld.f64 	%fd2, [%rd1+112];
	st.f64 	[%rd2+8], %fd2;
	ld.f64 	%fd3, [%rd1+120];
	st.f64 	[%rd2+16], %fd3;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z10physics_e0P9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z10physics_e0P9physics_sPd(
	.param .b64 _Z10physics_e0P9physics_sPd_param_0,
	.param .b64 _Z10physics_e0P9physics_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z10physics_e0P9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z10physics_e0P9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB7_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_8;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 353;
	mov.u64 	%rd9, 1;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB7_2:
	ld.f64 	%fd1, [%rd1+72];
	st.f64 	[%rd2], %fd1;
	ld.f64 	%fd2, [%rd1+80];
	st.f64 	[%rd2+8], %fd2;
	ld.f64 	%fd3, [%rd1+88];
	st.f64 	[%rd2+16], %fd3;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z15physics_e0_flagP9physics_s
.visible .func  (.param .b32 func_retval0) _Z15physics_e0_flagP9physics_s(
	.param .b64 _Z15physics_e0_flagP9physics_s_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z15physics_e0_flagP9physics_s_param_0];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB8_2;

	mov.u64 	%rd2, $str2;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_9;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 393;
	mov.u64 	%rd8, 1;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB8_2:
	ld.u32 	%r2, [%rd1+172];
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z20physics_e0_frequencyP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z20physics_e0_frequencyP9physics_sPd(
	.param .b64 _Z20physics_e0_frequencyP9physics_sPd_param_0,
	.param .b64 _Z20physics_e0_frequencyP9physics_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z20physics_e0_frequencyP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z20physics_e0_frequencyP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB9_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_10;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 407;
	mov.u64 	%rd9, 1;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB9_2:
	ld.f64 	%fd1, [%rd1+96];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z13physics_fbodyP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z13physics_fbodyP9physics_sPd(
	.param .b64 _Z13physics_fbodyP9physics_sPd_param_0,
	.param .b64 _Z13physics_fbodyP9physics_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z13physics_fbodyP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z13physics_fbodyP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB10_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_11;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 437;
	mov.u64 	%rd9, 1;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB10_2:
	ld.f64 	%fd1, [%rd1+48];
	st.f64 	[%rd2], %fd1;
	ld.f64 	%fd2, [%rd1+56];
	st.f64 	[%rd2+8], %fd2;
	ld.f64 	%fd3, [%rd1+64];
	st.f64 	[%rd2+16], %fd3;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z14physics_fpulseP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z14physics_fpulseP9physics_sPd(
	.param .b64 _Z14physics_fpulseP9physics_sPd_param_0,
	.param .b64 _Z14physics_fpulseP9physics_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z14physics_fpulseP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z14physics_fpulseP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB11_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_12;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 471;
	mov.u64 	%rd9, 1;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB11_2:
	ld.f64 	%fd1, [%rd1+184];
	st.f64 	[%rd2], %fd1;
	ld.f64 	%fd2, [%rd1+192];
	st.f64 	[%rd2+8], %fd2;
	ld.f64 	%fd3, [%rd1+200];
	st.f64 	[%rd2+16], %fd3;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z24physics_fpulse_frequencyP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z24physics_fpulse_frequencyP9physics_sPd(
	.param .b64 _Z24physics_fpulse_frequencyP9physics_sPd_param_0,
	.param .b64 _Z24physics_fpulse_frequencyP9physics_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z24physics_fpulse_frequencyP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z24physics_fpulse_frequencyP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB12_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_13;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 506;
	mov.u64 	%rd9, 1;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB12_2:
	ld.f64 	%fd1, [%rd1+176];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z16physics_mobilityP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z16physics_mobilityP9physics_sPd(
	.param .b64 _Z16physics_mobilityP9physics_sPd_param_0,
	.param .b64 _Z16physics_mobilityP9physics_sPd_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<4>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [_Z16physics_mobilityP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z16physics_mobilityP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB13_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_14;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 536;
	mov.u64 	%rd9, 1;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB13_2:
	setp.ne.s64	%p2, %rd2, 0;
	@%p2 bra 	BB13_4;

	mov.u64 	%rd10, $str7;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_14;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r2, 537;
	mov.u64 	%rd16, 1;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB13_4:
	ld.f64 	%fd1, [%rd1+152];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z13physics_fgravP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z13physics_fgravP9physics_sPd(
	.param .b64 _Z13physics_fgravP9physics_sPd_param_0,
	.param .b64 _Z13physics_fgravP9physics_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z13physics_fgravP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z13physics_fgravP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB14_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_15;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 567;
	mov.u64 	%rd9, 1;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB14_2:
	ld.f64 	%fd1, [%rd1+128];
	st.f64 	[%rd2], %fd1;
	ld.f64 	%fd2, [%rd1+136];
	st.f64 	[%rd2+8], %fd2;
	ld.f64 	%fd3, [%rd1+144];
	st.f64 	[%rd2+16], %fd3;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z15physics_grad_muP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z15physics_grad_muP9physics_sPd(
	.param .b64 _Z15physics_grad_muP9physics_sPd_param_0,
	.param .b64 _Z15physics_grad_muP9physics_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z15physics_grad_muP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z15physics_grad_muP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB15_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_16;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 601;
	mov.u64 	%rd9, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB15_2:
	ld.f64 	%fd1, [%rd1+208];
	st.f64 	[%rd2], %fd1;
	ld.f64 	%fd2, [%rd1+216];
	st.f64 	[%rd2+8], %fd2;
	ld.f64 	%fd3, [%rd1+224];
	st.f64 	[%rd2+16], %fd3;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z24physics_control_timestepP9physics_s
.visible .func  (.param .b32 func_retval0) _Z24physics_control_timestepP9physics_s(
	.param .b64 _Z24physics_control_timestepP9physics_s_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<9>;


	ld.param.u64 	%rd1, [_Z24physics_control_timestepP9physics_s_param_0];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB16_2;

	mov.u64 	%rd2, $str2;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_17;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 637;
	mov.u64 	%rd8, 1;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22

BB16_2:
	ld.u32 	%r2, [%rd1+168];
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z20physics_control_timeP9physics_sPd
.visible .func  (.param .b32 func_retval0) _Z20physics_control_timeP9physics_sPd(
	.param .b64 _Z20physics_control_timeP9physics_sPd_param_0,
	.param .b64 _Z20physics_control_timeP9physics_sPd_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<9>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [_Z20physics_control_timeP9physics_sPd_param_0];
	ld.param.u64 	%rd2, [_Z20physics_control_timeP9physics_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB17_2;

	mov.u64 	%rd3, $str2;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_18;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 653;
	mov.u64 	%rd9, 1;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 23

BB17_2:
	setp.ne.s64	%p2, %rd2, 0;
	@%p2 bra 	BB17_4;

	mov.u64 	%rd10, $str8;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_18;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r2, 654;
	mov.u64 	%rd16, 1;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 24

BB17_4:
	ld.v2.u32 	{%r3, %r4}, [%rd1+160];
	mov.u32 	%r6, 0;
	ld.u32 	%r7, [%rd1+168];
	add.s32 	%r8, %r7, %r3;
	cvt.rn.f64.s32	%fd1, %r8;
	add.f64 	%fd2, %fd1, 0dBFF0000000000000;
	st.f64 	[%rd2], %fd2;
	st.param.b32	[func_retval0+0], %r6;
	ret;
}


