//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	_Z11fe_symm_fedP9fe_symm_siPd
.visible .func  (.param .b32 func_retval0) _Z11fe_symm_fedP9fe_symm_siPd
(
	.param .b64 _Z11fe_symm_fedP9fe_symm_siPd_param_0,
	.param .b32 _Z11fe_symm_fedP9fe_symm_siPd_param_1,
	.param .b64 _Z11fe_symm_fedP9fe_symm_siPd_param_2
)
;
.visible .func  (.param .b32 func_retval0) _Z10fe_symm_muP9fe_symm_siPd
(
	.param .b64 _Z10fe_symm_muP9fe_symm_siPd_param_0,
	.param .b32 _Z10fe_symm_muP9fe_symm_siPd_param_1,
	.param .b64 _Z10fe_symm_muP9fe_symm_siPd_param_2
)
;
.visible .func  (.param .b32 func_retval0) _Z11fe_symm_strP9fe_symm_siPA3_d
(
	.param .b64 _Z11fe_symm_strP9fe_symm_siPA3_d_param_0,
	.param .b32 _Z11fe_symm_strP9fe_symm_siPA3_d_param_1,
	.param .b64 _Z11fe_symm_strP9fe_symm_siPA3_d_param_2
)
;
.visible .func _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d
(
	.param .b64 _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_0,
	.param .b32 _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_1,
	.param .b64 _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_2
)
;
.extern .func  (.param .b32 func_retval0) _Z12field_scalarP7field_siPd
(
	.param .b64 _Z12field_scalarP7field_siPd_param_0,
	.param .b32 _Z12field_scalarP7field_siPd_param_1,
	.param .b64 _Z12field_scalarP7field_siPd_param_2
)
;
.extern .func  (.param .b32 func_retval0) _Z22field_grad_scalar_gradP12field_grad_siPd
(
	.param .b64 _Z22field_grad_scalar_gradP12field_grad_siPd_param_0,
	.param .b32 _Z22field_grad_scalar_gradP12field_grad_siPd_param_1,
	.param .b64 _Z22field_grad_scalar_gradP12field_grad_siPd_param_2
)
;
.extern .func  (.param .b64 func_retval0) _Z11dot_productPKdS0_
(
	.param .b64 _Z11dot_productPKdS0__param_0,
	.param .b64 _Z11dot_productPKdS0__param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank0_assertiPKcii
(
	.param .b32 _Z25reverse_addr_rank0_assertiPKcii_param_0,
	.param .b64 _Z25reverse_addr_rank0_assertiPKcii_param_1,
	.param .b32 _Z25reverse_addr_rank0_assertiPKcii_param_2,
	.param .b32 _Z25reverse_addr_rank0_assertiPKcii_param_3
)
;
.extern .func  (.param .b32 func_retval0) _Z23field_grad_scalar_delsqP12field_grad_siPd
(
	.param .b64 _Z23field_grad_scalar_delsqP12field_grad_siPd_param_0,
	.param .b32 _Z23field_grad_scalar_delsqP12field_grad_siPd_param_1,
	.param .b64 _Z23field_grad_scalar_delsqP12field_grad_siPd_param_2
)
;
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank2_assertiPKciiiiii
(
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_0,
	.param .b64 _Z25reverse_addr_rank2_assertiPKciiiiii_param_1,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_2,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_3,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_4,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_5,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_6,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_7
)
;
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank1_assertiPKciiii
(
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_0,
	.param .b64 _Z25reverse_addr_rank1_assertiPKciiii_param_1,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_2,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_3,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_4,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_5
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 __nv_static_30__17_symmetric_cpp1_ii_26b9708b_const_param[24];
.const .align 8 .u64 __nv_static_30__17_symmetric_cpp1_ii_26b9708b_fe_symm_dvt[14] = {0, 0, _Z11fe_symm_fedP9fe_symm_siPd, _Z10fe_symm_muP9fe_symm_siPd, 0, _Z11fe_symm_strP9fe_symm_siPA3_d, _Z11fe_symm_strP9fe_symm_siPA3_d, 0, 0, 0, 0, _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d, _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d, 0};
.global .align 1 .b8 __unnamed_1[50] = {105, 110, 116, 32, 102, 101, 95, 115, 121, 109, 109, 95, 112, 97, 114, 97, 109, 40, 102, 101, 95, 115, 121, 109, 109, 95, 115, 32, 42, 44, 32, 102, 101, 95, 115, 121, 109, 109, 95, 112, 97, 114, 97, 109, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_2[55] = {105, 110, 116, 32, 102, 101, 95, 115, 121, 109, 109, 95, 105, 110, 116, 101, 114, 102, 97, 99, 105, 97, 108, 95, 116, 101, 110, 115, 105, 111, 110, 40, 102, 101, 95, 115, 121, 109, 109, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[53] = {105, 110, 116, 32, 102, 101, 95, 115, 121, 109, 109, 95, 105, 110, 116, 101, 114, 102, 97, 99, 105, 97, 108, 95, 119, 105, 100, 116, 104, 40, 102, 101, 95, 115, 121, 109, 109, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_4[44] = {105, 110, 116, 32, 102, 101, 95, 115, 121, 109, 109, 95, 102, 101, 100, 40, 102, 101, 95, 115, 121, 109, 109, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_5[49] = {105, 110, 116, 32, 102, 101, 95, 115, 121, 109, 109, 95, 115, 116, 114, 40, 102, 101, 95, 115, 121, 109, 109, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 51, 93, 41, 0};
.global .align 1 .b8 __unnamed_6[55] = {118, 111, 105, 100, 32, 102, 101, 95, 115, 121, 109, 109, 95, 115, 116, 114, 95, 118, 40, 102, 101, 95, 115, 121, 109, 109, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 51, 93, 91, 49, 93, 41, 0};
.global .align 1 .b8 $str[3] = {102, 101, 0};
.global .align 1 .b8 $str1[12] = {115, 121, 109, 109, 101, 116, 114, 105, 99, 46, 99, 0};
.global .align 1 .b8 $str2[8] = {102, 101, 45, 62, 112, 104, 105, 0};
.global .align 1 .b8 $str3[9] = {102, 101, 45, 62, 100, 112, 104, 105, 0};
.global .align 1 .b8 $str4[10] = {102, 101, 45, 62, 112, 97, 114, 97, 109, 0};

.visible .func  (.param .b32 func_retval0) _Z11fe_symm_fedP9fe_symm_siPd(
	.param .b64 _Z11fe_symm_fedP9fe_symm_siPd_param_0,
	.param .b32 _Z11fe_symm_fedP9fe_symm_siPd_param_1,
	.param .b64 _Z11fe_symm_fedP9fe_symm_siPd_param_2
)
{
	.local .align 8 .b8 	__local_depot0[32];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<14>;
	.reg .b64 	%rd<16>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [_Z11fe_symm_fedP9fe_symm_siPd_param_0];
	ld.param.u32 	%r1, [_Z11fe_symm_fedP9fe_symm_siPd_param_1];
	ld.param.u64 	%rd2, [_Z11fe_symm_fedP9fe_symm_siPd_param_2];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_4;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r2, 290;
	mov.u64 	%rd9, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	ld.u64 	%rd10, [%rd1+40];
	add.u64 	%rd11, %SP, 0;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z12field_scalarP7field_siPd, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 1
	ld.u64 	%rd12, [%rd1+48];
	add.u64 	%rd13, %SP, 8;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd13;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z22field_grad_scalar_gradP12field_grad_siPd, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 2
	ld.u64 	%rd14, [%rd1+32];
	ld.f64 	%fd1, [%rd14];
	ld.f64 	%fd2, [%rd14+8];
	mul.f64 	%fd3, %fd2, 0d3FD0000000000000;
	add.u64 	%rd15, %SPL, 0;
	ld.local.f64 	%fd4, [%rd15];
	mul.f64 	%fd5, %fd3, %fd4;
	mul.f64 	%fd6, %fd4, %fd5;
	fma.rn.f64 	%fd7, %fd1, 0d3FE0000000000000, %fd6;
	mul.f64 	%fd8, %fd4, %fd7;
	mul.f64 	%fd9, %fd4, %fd8;
	ld.f64 	%fd10, [%rd14+16];
	mul.f64 	%fd11, %fd10, 0d3FE0000000000000;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z11dot_productPKdS0_, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd12, [retval0+0];
	
	//{
	}// Callseq End 3
	fma.rn.f64 	%fd13, %fd11, %fd12, %fd9;
	st.f64 	[%rd2], %fd13;
	mov.u32 	%r5, 0;
	st.param.b32	[func_retval0+0], %r5;
	ret;
}

	// .globl	_Z10fe_symm_muP9fe_symm_siPd
.visible .func  (.param .b32 func_retval0) _Z10fe_symm_muP9fe_symm_siPd(
	.param .b64 _Z10fe_symm_muP9fe_symm_siPd_param_0,
	.param .b32 _Z10fe_symm_muP9fe_symm_siPd_param_1,
	.param .b64 _Z10fe_symm_muP9fe_symm_siPd_param_2
)
{
	.reg .b32 	%r<9>;
	.reg .f64 	%fd<12>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [_Z10fe_symm_muP9fe_symm_siPd_param_0];
	ld.param.u32 	%r1, [_Z10fe_symm_muP9fe_symm_siPd_param_1];
	ld.param.u64 	%rd2, [_Z10fe_symm_muP9fe_symm_siPd_param_2];
	ld.u64 	%rd3, [%rd1+40];
	ld.u64 	%rd4, [%rd3+16];
	ld.u32 	%r2, [%rd3+8];
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u32 	%r3, 313;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b32 param3;
	st.param.b32	[param3+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank0_assertiPKcii, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 4
	mul.wide.s32 	%rd7, %r4, 8;
	add.s64 	%rd8, %rd4, %rd7;
	ld.f64 	%fd1, [%rd8];
	ld.u64 	%rd9, [%rd1+48];
	ld.u64 	%rd10, [%rd9+40];
	ld.u64 	%rd11, [%rd1+40];
	ld.u32 	%r5, [%rd11+8];
	mov.u32 	%r6, 314;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b32 param3;
	st.param.b32	[param3+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank0_assertiPKcii, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 5
	mul.wide.s32 	%rd12, %r7, 8;
	add.s64 	%rd13, %rd10, %rd12;
	ld.f64 	%fd2, [%rd13];
	ld.u64 	%rd14, [%rd1+32];
	ld.f64 	%fd3, [%rd14];
	ld.f64 	%fd4, [%rd14+8];
	mul.f64 	%fd5, %fd1, %fd4;
	mul.f64 	%fd6, %fd1, %fd5;
	mul.f64 	%fd7, %fd1, %fd6;
	fma.rn.f64 	%fd8, %fd1, %fd3, %fd7;
	ld.f64 	%fd9, [%rd14+16];
	mul.f64 	%fd10, %fd2, %fd9;
	sub.f64 	%fd11, %fd8, %fd10;
	st.f64 	[%rd2], %fd11;
	mov.u32 	%r8, 0;
	st.param.b32	[func_retval0+0], %r8;
	ret;
}

	// .globl	_Z11fe_symm_strP9fe_symm_siPA3_d
.visible .func  (.param .b32 func_retval0) _Z11fe_symm_strP9fe_symm_siPA3_d(
	.param .b64 _Z11fe_symm_strP9fe_symm_siPA3_d_param_0,
	.param .b32 _Z11fe_symm_strP9fe_symm_siPA3_d_param_1,
	.param .b64 _Z11fe_symm_strP9fe_symm_siPA3_d_param_2
)
{
	.local .align 8 .b8 	__local_depot2[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b32 	%r<7>;
	.reg .f64 	%fd<36>;
	.reg .b64 	%rd<21>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [_Z11fe_symm_strP9fe_symm_siPA3_d_param_0];
	ld.param.u32 	%r1, [_Z11fe_symm_strP9fe_symm_siPA3_d_param_1];
	ld.param.u64 	%rd2, [_Z11fe_symm_strP9fe_symm_siPA3_d_param_2];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_5;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r2, 344;
	mov.u64 	%rd9, 1;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB2_2:
	ld.u64 	%rd10, [%rd1+32];
	ld.f64 	%fd1, [%rd10+16];
	ld.u64 	%rd11, [%rd1+40];
	add.u64 	%rd12, %SP, 0;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z12field_scalarP7field_siPd, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 7
	ld.u64 	%rd13, [%rd1+48];
	add.u64 	%rd14, %SP, 16;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z22field_grad_scalar_gradP12field_grad_siPd, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 8
	ld.u64 	%rd15, [%rd1+48];
	add.u64 	%rd16, %SP, 8;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd16;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z23field_grad_scalar_delsqP12field_grad_siPd, 
	(
	param0, 
	param1, 
	param2
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 9
	ld.u64 	%rd17, [%rd1+32];
	ld.f64 	%fd2, [%rd17];
	mul.f64 	%fd3, %fd2, 0d3FE0000000000000;
	add.u64 	%rd18, %SPL, 0;
	ld.local.f64 	%fd4, [%rd18];
	mul.f64 	%fd5, %fd3, %fd4;
	ld.f64 	%fd6, [%rd17+8];
	mul.f64 	%fd7, %fd6, 0d3FE8000000000000;
	mul.f64 	%fd8, %fd7, %fd4;
	mul.f64 	%fd9, %fd4, %fd8;
	mul.f64 	%fd10, %fd4, %fd9;
	mul.f64 	%fd11, %fd4, %fd10;
	fma.rn.f64 	%fd12, %fd4, %fd5, %fd11;
	mul.f64 	%fd13, %fd1, %fd4;
	add.u64 	%rd19, %SPL, 8;
	ld.local.f64 	%fd14, [%rd19];
	mul.f64 	%fd15, %fd13, %fd14;
	sub.f64 	%fd16, %fd12, %fd15;
	mul.f64 	%fd17, %fd1, 0d3FE0000000000000;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b64 retval0;
	call.uni (retval0), 
	_Z11dot_productPKdS0_, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd18, [retval0+0];
	
	//{
	}// Callseq End 10
	mul.f64 	%fd19, %fd17, %fd18;
	sub.f64 	%fd20, %fd16, %fd19;
	add.u64 	%rd20, %SPL, 16;
	ld.local.f64 	%fd21, [%rd20];
	mul.f64 	%fd22, %fd1, %fd21;
	fma.rn.f64 	%fd23, %fd22, %fd21, %fd20;
	ld.local.f64 	%fd24, [%rd20+8];
	ld.local.f64 	%fd25, [%rd20+16];
	st.f64 	[%rd2], %fd23;
	fma.rn.f64 	%fd26, %fd22, %fd24, 0d0000000000000000;
	st.f64 	[%rd2+8], %fd26;
	fma.rn.f64 	%fd27, %fd22, %fd25, 0d0000000000000000;
	st.f64 	[%rd2+16], %fd27;
	mul.f64 	%fd28, %fd1, %fd24;
	fma.rn.f64 	%fd29, %fd28, %fd21, 0d0000000000000000;
	st.f64 	[%rd2+24], %fd29;
	fma.rn.f64 	%fd30, %fd28, %fd24, %fd20;
	st.f64 	[%rd2+32], %fd30;
	fma.rn.f64 	%fd31, %fd28, %fd25, 0d0000000000000000;
	st.f64 	[%rd2+40], %fd31;
	mul.f64 	%fd32, %fd1, %fd25;
	fma.rn.f64 	%fd33, %fd32, %fd21, 0d0000000000000000;
	st.f64 	[%rd2+48], %fd33;
	fma.rn.f64 	%fd34, %fd32, %fd24, 0d0000000000000000;
	st.f64 	[%rd2+56], %fd34;
	fma.rn.f64 	%fd35, %fd32, %fd25, %fd20;
	st.f64 	[%rd2+64], %fd35;
	mov.u32 	%r6, 0;
	st.param.b32	[func_retval0+0], %r6;
	ret;
}

	// .globl	_Z13fe_symm_str_vP9fe_symm_siPA3_A1_d
.visible .func _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d(
	.param .b64 _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_0,
	.param .b32 _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_1,
	.param .b64 _Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_2
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<23>;
	.reg .f64 	%fd<39>;
	.reg .b64 	%rd<60>;


	ld.param.u64 	%rd5, [_Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_0];
	ld.param.u32 	%r1, [_Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_1];
	ld.param.u64 	%rd6, [_Z13fe_symm_str_vP9fe_symm_siPA3_A1_d_param_2];
	setp.ne.s64	%p1, %rd5, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd7, $str;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str1;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, __unnamed_6;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r2, 385;
	mov.u64 	%rd13, 1;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd12;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd13;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB3_2:
	add.s64 	%rd1, %rd5, 40;
	ld.u64 	%rd14, [%rd5+40];
	setp.ne.s64	%p2, %rd14, 0;
	@%p2 bra 	BB3_4;

	mov.u64 	%rd15, $str2;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, __unnamed_6;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r3, 386;
	mov.u64 	%rd21, 1;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB3_4:
	ld.u64 	%rd22, [%rd1+8];
	setp.ne.s64	%p3, %rd22, 0;
	@%p3 bra 	BB3_6;

	mov.u64 	%rd23, $str3;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, $str1;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, __unnamed_6;
	cvta.global.u64 	%rd28, %rd27;
	mov.u32 	%r4, 387;
	mov.u64 	%rd29, 1;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd26;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd28;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd29;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB3_6:
	ld.u64 	%rd59, [%rd1+-8];
	setp.ne.s64	%p4, %rd59, 0;
	@%p4 bra 	BB3_8;

	mov.u64 	%rd30, $str4;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, $str1;
	cvta.global.u64 	%rd33, %rd32;
	mov.u64 	%rd34, __unnamed_6;
	cvta.global.u64 	%rd35, %rd34;
	mov.u32 	%r5, 388;
	mov.u64 	%rd36, 1;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd31;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd33;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd35;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd36;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14
	ld.u64 	%rd59, [%rd1+-8];

BB3_8:
	ld.f64 	%fd1, [%rd59];
	ld.f64 	%fd2, [%rd59+8];
	ld.f64 	%fd3, [%rd59+16];
	ld.u64 	%rd37, [%rd1+8];
	ld.u64 	%rd38, [%rd37+32];
	ld.u32 	%r6, [%rd37+24];
	mov.u64 	%rd39, $str1;
	cvta.global.u64 	%rd40, %rd39;
	mov.u32 	%r7, 396;
	mov.u32 	%r8, 1;
	mov.u32 	%r9, 3;
	mov.u32 	%r10, 0;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 15
	mul.wide.s32 	%rd41, %r11, 8;
	add.s64 	%rd42, %rd38, %rd41;
	ld.f64 	%fd4, [%rd42];
	ld.u64 	%rd43, [%rd1+8];
	ld.u64 	%rd44, [%rd43+32];
	ld.u32 	%r12, [%rd43+24];
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r8;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 16
	mul.wide.s32 	%rd45, %r13, 8;
	add.s64 	%rd46, %rd44, %rd45;
	ld.f64 	%fd5, [%rd46];
	ld.u64 	%rd47, [%rd1+8];
	ld.u64 	%rd48, [%rd47+32];
	ld.u32 	%r14, [%rd47+24];
	mov.u32 	%r15, 2;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r15;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 17
	mul.wide.s32 	%rd49, %r16, 8;
	add.s64 	%rd50, %rd48, %rd49;
	ld.f64 	%fd6, [%rd50];
	mul.f64 	%fd7, %fd3, 0d3FE0000000000000;
	mul.f64 	%fd8, %fd2, 0d3FE8000000000000;
	mul.f64 	%fd9, %fd1, 0d3FE0000000000000;
	ld.u64 	%rd51, [%rd1];
	ld.u64 	%rd52, [%rd51+16];
	ld.u32 	%r17, [%rd51+8];
	mov.u32 	%r18, 401;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 18
	mul.wide.s32 	%rd53, %r19, 8;
	add.s64 	%rd54, %rd52, %rd53;
	ld.f64 	%fd10, [%rd54];
	ld.u64 	%rd55, [%rd1+8];
	ld.u64 	%rd56, [%rd55+40];
	ld.u32 	%r20, [%rd55+24];
	mov.u32 	%r21, 402;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 19
	mul.wide.s32 	%rd57, %r22, 8;
	add.s64 	%rd58, %rd56, %rd57;
	mul.f64 	%fd11, %fd9, %fd10;
	mul.f64 	%fd12, %fd8, %fd10;
	mul.f64 	%fd13, %fd10, %fd12;
	mul.f64 	%fd14, %fd10, %fd13;
	mul.f64 	%fd15, %fd10, %fd14;
	fma.rn.f64 	%fd16, %fd10, %fd11, %fd15;
	mul.f64 	%fd17, %fd3, %fd10;
	ld.f64 	%fd18, [%rd58];
	mul.f64 	%fd19, %fd17, %fd18;
	sub.f64 	%fd20, %fd16, %fd19;
	mul.f64 	%fd21, %fd5, %fd5;
	fma.rn.f64 	%fd22, %fd4, %fd4, %fd21;
	fma.rn.f64 	%fd23, %fd6, %fd6, %fd22;
	mul.f64 	%fd24, %fd7, %fd23;
	sub.f64 	%fd25, %fd20, %fd24;
	mul.f64 	%fd26, %fd3, %fd4;
	fma.rn.f64 	%fd27, %fd26, %fd4, %fd25;
	st.f64 	[%rd6], %fd27;
	mul.f64 	%fd28, %fd25, 0d0000000000000000;
	fma.rn.f64 	%fd29, %fd26, %fd5, %fd28;
	st.f64 	[%rd6+8], %fd29;
	fma.rn.f64 	%fd30, %fd26, %fd6, %fd28;
	st.f64 	[%rd6+16], %fd30;
	mul.f64 	%fd31, %fd3, %fd5;
	fma.rn.f64 	%fd32, %fd31, %fd4, %fd28;
	st.f64 	[%rd6+24], %fd32;
	fma.rn.f64 	%fd33, %fd31, %fd5, %fd25;
	st.f64 	[%rd6+32], %fd33;
	fma.rn.f64 	%fd34, %fd31, %fd6, %fd28;
	st.f64 	[%rd6+40], %fd34;
	mul.f64 	%fd35, %fd3, %fd6;
	fma.rn.f64 	%fd36, %fd35, %fd4, %fd28;
	st.f64 	[%rd6+48], %fd36;
	fma.rn.f64 	%fd37, %fd35, %fd5, %fd28;
	st.f64 	[%rd6+56], %fd37;
	fma.rn.f64 	%fd38, %fd35, %fd6, %fd25;
	st.f64 	[%rd6+64], %fd38;
	ret;
}

	// .globl	_Z13fe_symm_paramP9fe_symm_sP15fe_symm_param_s
.visible .func  (.param .b32 func_retval0) _Z13fe_symm_paramP9fe_symm_sP15fe_symm_param_s(
	.param .b64 _Z13fe_symm_paramP9fe_symm_sP15fe_symm_param_s_param_0,
	.param .b64 _Z13fe_symm_paramP9fe_symm_sP15fe_symm_param_s_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z13fe_symm_paramP9fe_symm_sP15fe_symm_param_s_param_0];
	ld.param.u64 	%rd2, [_Z13fe_symm_paramP9fe_symm_sP15fe_symm_param_s_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 229;
	mov.u64 	%rd9, 1;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB4_2:
	ld.u64 	%rd10, [%rd1+32];
	ld.f64 	%fd1, [%rd10];
	ld.f64 	%fd2, [%rd10+8];
	ld.f64 	%fd3, [%rd10+16];
	st.f64 	[%rd2], %fd1;
	st.f64 	[%rd2+8], %fd2;
	st.f64 	[%rd2+16], %fd3;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z27fe_symm_interfacial_tensionP9fe_symm_sPd
.visible .func  (.param .b32 func_retval0) _Z27fe_symm_interfacial_tensionP9fe_symm_sPd(
	.param .b64 _Z27fe_symm_interfacial_tensionP9fe_symm_sPd_param_0,
	.param .b64 _Z27fe_symm_interfacial_tensionP9fe_symm_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<12>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z27fe_symm_interfacial_tensionP9fe_symm_sPd_param_0];
	ld.param.u64 	%rd2, [_Z27fe_symm_interfacial_tensionP9fe_symm_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB5_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_2;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 249;
	mov.u64 	%rd9, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB5_2:
	ld.u64 	%rd10, [%rd1+32];
	ld.f64 	%fd1, [%rd10+16];
	mul.f64 	%fd2, %fd1, 0dC020000000000000;
	ld.f64 	%fd3, [%rd10];
	mul.f64 	%fd4, %fd3, %fd2;
	mul.f64 	%fd5, %fd3, %fd4;
	mul.f64 	%fd6, %fd3, %fd5;
	ld.f64 	%fd7, [%rd10+8];
	mul.f64 	%fd8, %fd7, 0d4022000000000000;
	mul.f64 	%fd9, %fd7, %fd8;
	div.rn.f64 	%fd10, %fd6, %fd9;
	sqrt.rn.f64 	%fd11, %fd10;
	st.f64 	[%rd2], %fd11;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z25fe_symm_interfacial_widthP9fe_symm_sPd
.visible .func  (.param .b32 func_retval0) _Z25fe_symm_interfacial_widthP9fe_symm_sPd(
	.param .b64 _Z25fe_symm_interfacial_widthP9fe_symm_sPd_param_0,
	.param .b64 _Z25fe_symm_interfacial_widthP9fe_symm_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z25fe_symm_interfacial_widthP9fe_symm_sPd_param_0];
	ld.param.u64 	%rd2, [_Z25fe_symm_interfacial_widthP9fe_symm_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB6_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_3;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 269;
	mov.u64 	%rd9, 1;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22

BB6_2:
	ld.u64 	%rd10, [%rd1+32];
	ld.f64 	%fd1, [%rd10+16];
	mul.f64 	%fd2, %fd1, 0dC000000000000000;
	ld.f64 	%fd3, [%rd10];
	div.rn.f64 	%fd4, %fd2, %fd3;
	sqrt.rn.f64 	%fd5, %fd4;
	st.f64 	[%rd2], %fd5;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}


