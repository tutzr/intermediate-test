typedef char __nv_bool;
# 58 ".././mpi_s/mpi.h"
enum elementary_datatypes {
# 58 ".././mpi_s/mpi.h"
MPI_CHAR,
# 59 ".././mpi_s/mpi.h"
MPI_SHORT,
# 60 ".././mpi_s/mpi.h"
MPI_INT,
# 61 ".././mpi_s/mpi.h"
MPI_LONG,
# 62 ".././mpi_s/mpi.h"
MPI_UNSIGNED_CHAR,
# 63 ".././mpi_s/mpi.h"
MPI_UNSIGNED_SHORT,
# 64 ".././mpi_s/mpi.h"
MPI_UNSIGNED,
# 65 ".././mpi_s/mpi.h"
MPI_UNSIGNED_LONG,
# 66 ".././mpi_s/mpi.h"
MPI_FLOAT,
# 67 ".././mpi_s/mpi.h"
MPI_DOUBLE,
# 68 ".././mpi_s/mpi.h"
MPI_LONG_DOUBLE,
# 69 ".././mpi_s/mpi.h"
MPI_BYTE,
# 70 ".././mpi_s/mpi.h"
MPI_PACKED};
# 72 ".././mpi_s/mpi.h"
enum collective_operations {
# 72 ".././mpi_s/mpi.h"
MPI_MAX,
# 73 ".././mpi_s/mpi.h"
MPI_MIN,
# 74 ".././mpi_s/mpi.h"
MPI_SUM,
# 75 ".././mpi_s/mpi.h"
MPI_PROD,
# 76 ".././mpi_s/mpi.h"
MPI_MAXLOC,
# 77 ".././mpi_s/mpi.h"
MPI_MINLOC,
# 78 ".././mpi_s/mpi.h"
MPI_BAND,
# 79 ".././mpi_s/mpi.h"
MPI_BOR,
# 80 ".././mpi_s/mpi.h"
MPI_BXOR,
# 81 ".././mpi_s/mpi.h"
MPI_LAND,
# 82 ".././mpi_s/mpi.h"
MPI_LOR,
# 83 ".././mpi_s/mpi.h"
MPI_LXOR};
# 22 "pe.h"
struct pe_s;
# 18 "physics.h"
struct physics_s;
# 22 "coords.h"
struct coords_s;
# 26 "coords.h"
enum cartesian_directions {
# 26 "coords.h"
X,
# 26 "coords.h"
Y,
# 26 "coords.h"
Z};
# 24 "map.h"
enum map_status {
# 24 "map.h"
MAP_FLUID,
# 24 "map.h"
MAP_BOUNDARY,
# 24 "map.h"
MAP_COLLOID,
# 24 "map.h"
MAP_STATUS_MAX};
# 26 "map.h"
struct map_s;
# 25 "wall.h"
struct wall_s;
# 48 "free_energy.h"
struct fe_vt_s;
# 66 "free_energy.h"
struct fe_s;
# 65 "colloids.h"
struct colloids_info_s;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 25 ".././mpi_s/mpi.h"
typedef int MPI_Handle;
# 26 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Comm;
# 28 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Datatype;
# 30 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Op;
# 22 "pe.h"
typedef struct pe_s pe_t;
# 18 "physics.h"
typedef struct physics_s physics_t;
# 22 "coords.h"
typedef struct coords_s cs_t;
# 26 "map.h"
typedef struct map_s map_t;
# 25 "wall.h"
typedef struct wall_s wall_t;
# 32 "free_energy.h"
typedef struct fe_s fe_t;
# 33 "free_energy.h"
typedef struct fe_vt_s fe_vt_t;
# 35 "free_energy.h"
typedef int (*fe_free_ft)(fe_t *);
# 37 "free_energy.h"
typedef int (*fe_target_ft)(fe_t *, fe_t **);
# 38 "free_energy.h"
typedef int (*fe_fed_ft)(fe_t *, int, double *);
# 39 "free_energy.h"
typedef int (*fe_mu_ft)(fe_t *, int, double *);
# 40 "free_energy.h"
typedef int (*fe_str_ft)(fe_t *, int, double (*)[3]);
# 41 "free_energy.h"
typedef int (*fe_mu_solv_ft)(fe_t *, int, int, double *);
# 42 "free_energy.h"
typedef int (*fe_hvector_ft)(fe_t *, int, double *);
# 43 "free_energy.h"
typedef int (*fe_htensor_ft)(fe_t *, int, double (*)[3]);
# 45 "free_energy.h"
typedef void (*fe_htensor_v_ft)(fe_t *, int, double (*)[3][1]);
# 46 "free_energy.h"
typedef void (*fe_stress_v_ft)(fe_t *, int, double (*)[3][1]);
# 48 "free_energy.h"
struct fe_vt_s {
# 50 "free_energy.h"
fe_free_ft free;
# 51 "free_energy.h"
fe_target_ft target;
# 52 "free_energy.h"
fe_fed_ft fed;
# 53 "free_energy.h"
fe_mu_ft mu;
# 54 "free_energy.h"
fe_mu_solv_ft mu_solv;
# 55 "free_energy.h"
fe_str_ft stress;
# 56 "free_energy.h"
fe_str_ft str_symm;
# 57 "free_energy.h"
fe_str_ft str_anti;
# 58 "free_energy.h"
fe_hvector_ft hvector;
# 59 "free_energy.h"
fe_htensor_ft htensor;
# 60 "free_energy.h"
fe_htensor_v_ft htensor_v;
# 61 "free_energy.h"
fe_stress_v_ft stress_v;
# 62 "free_energy.h"
fe_stress_v_ft str_symm_v;
# 63 "free_energy.h"
fe_stress_v_ft str_anti_v;};
# 66 "free_energy.h"
struct fe_s {
# 67 "free_energy.h"
fe_vt_t *func;
# 68 "free_energy.h"
int id;
# 69 "free_energy.h"
int use_stress_relaxation;};
# 65 "colloids.h"
typedef struct colloids_info_s colloids_info_t;
# 189 "/usr/local/cuda-10.1/bin/../targets/x86_64-linux/include/crt/common_functions.h"
___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__noreturn__)) void __assert_fail(const char *, const char *, unsigned, const char *);
# 40 "physics.h"
___device__(extern  __no_sc__) int _Z11physics_refPP9physics_s(physics_t **);
# 53 "physics.h"
___device__(extern  __no_sc__) int _Z24physics_control_timestepP9physics_s(physics_t *);
# 57 "coords.h"
___device__(extern  __no_sc__) int _Z7cs_ltotP8coords_sPd(cs_t *, double *);
# 59 "coords.h"
___device__(extern  __no_sc__) int _Z9cs_nlocalP8coords_sPi(cs_t *, int *);
# 62 "coords.h"
___device__(extern  __no_sc__) int _Z8cs_indexP8coords_siii(cs_t *, int, int, int);
# 40 "map.h"
___device__(extern  __no_sc__) int _Z10map_statusP5map_siPi(map_t *, int, int *);
# 57 "wall.h"
___device__(extern  __no_sc__) int _Z12wall_presentP6wall_s(wall_t *);
#include "common_functions.h"
