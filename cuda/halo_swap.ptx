//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	_Z16halo_swap_coordsP11halo_swap_siiPiS1_S1_
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank1_assertiPKciiii
(
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_0,
	.param .b64 _Z25reverse_addr_rank1_assertiPKciiii_param_1,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_2,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_3,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_4,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_5
)
;
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank2_assertiPKciiiiii
(
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_0,
	.param .b64 _Z25reverse_addr_rank2_assertiPKciiiiii_param_1,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_2,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_3,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_4,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_5,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_6,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_7
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 4 .b8 __nv_static_30__17_halo_swap_cpp1_ii_0e562ad4_const_param[100];
.global .align 1 .b8 __unnamed_1[56] = {118, 111, 105, 100, 32, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 112, 97, 99, 107, 95, 114, 97, 110, 107, 49, 40, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_2[58] = {118, 111, 105, 100, 32, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 117, 110, 112, 97, 99, 107, 95, 114, 97, 110, 107, 49, 40, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[68] = {118, 111, 105, 100, 32, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 99, 111, 111, 114, 100, 115, 40, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_4[50] = {105, 110, 116, 32, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 105, 110, 100, 101, 120, 40, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_5[58] = {105, 110, 116, 32, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 98, 117, 102, 105, 110, 100, 101, 120, 40, 104, 97, 108, 111, 95, 115, 119, 97, 112, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 $str[5] = {104, 97, 108, 111, 0};
.global .align 1 .b8 $str1[12] = {104, 97, 108, 111, 95, 115, 119, 97, 112, 46, 99, 0};
.global .align 1 .b8 $str2[30] = {105, 100, 32, 61, 61, 32, 88, 32, 124, 124, 32, 105, 100, 32, 61, 61, 32, 89, 32, 124, 124, 32, 105, 100, 32, 61, 61, 32, 90, 0};
.global .align 1 .b8 $str3[5] = {100, 97, 116, 97, 0};

.visible .func _Z16halo_swap_coordsP11halo_swap_siiPiS1_S1_(
	.param .b64 _Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_0,
	.param .b32 _Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_1,
	.param .b32 _Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_2,
	.param .b64 _Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_3,
	.param .b64 _Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_4,
	.param .b64 _Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_5
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<16>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd1, [_Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_0];
	ld.param.u32 	%r1, [_Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_1];
	ld.param.u32 	%r2, [_Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_2];
	ld.param.u64 	%rd2, [_Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_3];
	ld.param.u64 	%rd3, [_Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_4];
	ld.param.u64 	%rd4, [_Z16halo_swap_coordsP11halo_swap_siiPiS1_S1__param_5];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd5, $str;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, __unnamed_3;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r3, 1283;
	mov.u64 	%rd11, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	ld.u64 	%rd12, [%rd1+16];
	mul.wide.s32 	%rd13, %r1, 12;
	add.s64 	%rd14, %rd12, %rd13;
	ld.u32 	%r4, [%rd14+56];
	ld.u32 	%r5, [%rd14+60];
	mul.lo.s32 	%r6, %r4, %r5;
	div.s32 	%r7, %r2, %r6;
	st.u32 	[%rd2], %r7;
	mul.lo.s32 	%r8, %r7, %r6;
	sub.s32 	%r9, %r2, %r8;
	div.s32 	%r10, %r9, %r5;
	st.u32 	[%rd3], %r10;
	ld.u32 	%r11, [%rd2];
	mul.lo.s32 	%r12, %r11, %r6;
	mul.lo.s32 	%r13, %r10, %r5;
	sub.s32 	%r14, %r2, %r13;
	sub.s32 	%r15, %r14, %r12;
	st.u32 	[%rd4], %r15;
	ret;
}

	// .globl	_Z15halo_swap_indexP11halo_swap_siii
.visible .func  (.param .b32 func_retval0) _Z15halo_swap_indexP11halo_swap_siii(
	.param .b64 _Z15halo_swap_indexP11halo_swap_siii_param_0,
	.param .b32 _Z15halo_swap_indexP11halo_swap_siii_param_1,
	.param .b32 _Z15halo_swap_indexP11halo_swap_siii_param_2,
	.param .b32 _Z15halo_swap_indexP11halo_swap_siii_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z15halo_swap_indexP11halo_swap_siii_param_0];
	ld.param.u32 	%r1, [_Z15halo_swap_indexP11halo_swap_siii_param_1];
	ld.param.u32 	%r2, [_Z15halo_swap_indexP11halo_swap_siii_param_2];
	ld.param.u32 	%r3, [_Z15halo_swap_indexP11halo_swap_siii_param_3];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_4;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r4, 1309;
	mov.u64 	%rd8, 1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_2:
	ld.u64 	%rd9, [%rd1+16];
	ld.u32 	%r5, [%rd9+44];
	mad.lo.s32 	%r6, %r5, %r1, %r2;
	ld.u32 	%r7, [%rd9+48];
	mad.lo.s32 	%r8, %r6, %r7, %r3;
	st.param.b32	[func_retval0+0], %r8;
	ret;
}

	// .globl	_Z18halo_swap_bufindexP11halo_swap_siiii
.visible .func  (.param .b32 func_retval0) _Z18halo_swap_bufindexP11halo_swap_siiii(
	.param .b64 _Z18halo_swap_bufindexP11halo_swap_siiii_param_0,
	.param .b32 _Z18halo_swap_bufindexP11halo_swap_siiii_param_1,
	.param .b32 _Z18halo_swap_bufindexP11halo_swap_siiii_param_2,
	.param .b32 _Z18halo_swap_bufindexP11halo_swap_siiii_param_3,
	.param .b32 _Z18halo_swap_bufindexP11halo_swap_siiii_param_4
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<10>;
	.reg .b64 	%rd<12>;


	ld.param.u64 	%rd1, [_Z18halo_swap_bufindexP11halo_swap_siiii_param_0];
	ld.param.u32 	%r1, [_Z18halo_swap_bufindexP11halo_swap_siiii_param_1];
	ld.param.u32 	%r2, [_Z18halo_swap_bufindexP11halo_swap_siiii_param_2];
	ld.param.u32 	%r3, [_Z18halo_swap_bufindexP11halo_swap_siiii_param_3];
	ld.param.u32 	%r4, [_Z18halo_swap_bufindexP11halo_swap_siiii_param_4];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_5;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r5, 1331;
	mov.u64 	%rd8, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB2_2:
	ld.u64 	%rd9, [%rd1+16];
	mul.wide.s32 	%rd10, %r1, 12;
	add.s64 	%rd11, %rd9, %rd10;
	ld.u32 	%r6, [%rd11+56];
	mad.lo.s32 	%r7, %r6, %r2, %r3;
	ld.u32 	%r8, [%rd11+60];
	mad.lo.s32 	%r9, %r7, %r8, %r4;
	st.param.b32	[func_retval0+0], %r9;
	ret;
}

	// .globl	_Z20halo_swap_pack_rank1P11halo_swap_siPd
.visible .entry _Z20halo_swap_pack_rank1P11halo_swap_siPd(
	.param .u64 _Z20halo_swap_pack_rank1P11halo_swap_siPd_param_0,
	.param .u32 _Z20halo_swap_pack_rank1P11halo_swap_siPd_param_1,
	.param .u64 _Z20halo_swap_pack_rank1P11halo_swap_siPd_param_2
)
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<190>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<154>;


	ld.param.u64 	%rd35, [_Z20halo_swap_pack_rank1P11halo_swap_siPd_param_0];
	ld.param.u32 	%r94, [_Z20halo_swap_pack_rank1P11halo_swap_siPd_param_1];
	ld.param.u64 	%rd36, [_Z20halo_swap_pack_rank1P11halo_swap_siPd_param_2];
	cvta.to.global.u64 	%rd1, %rd36;
	setp.ne.s64	%p1, %rd35, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd37, $str;
	cvta.global.u64 	%rd38, %rd37;
	mov.u64 	%rd39, $str1;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, __unnamed_1;
	cvta.global.u64 	%rd42, %rd41;
	mov.u32 	%r95, 1071;
	mov.u64 	%rd43, 1;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r95;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd42;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd43;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB3_2:
	setp.lt.u32	%p2, %r94, 3;
	@%p2 bra 	BB3_4;

	mov.u64 	%rd44, $str2;
	cvta.global.u64 	%rd45, %rd44;
	mov.u64 	%rd46, $str1;
	cvta.global.u64 	%rd47, %rd46;
	mov.u64 	%rd48, __unnamed_1;
	cvta.global.u64 	%rd49, %rd48;
	mov.u32 	%r96, 1072;
	mov.u64 	%rd50, 1;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd47;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB3_4:
	setp.ne.s64	%p3, %rd36, 0;
	@%p3 bra 	BB3_6;

	mov.u64 	%rd51, $str3;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, $str1;
	cvta.global.u64 	%rd54, %rd53;
	mov.u64 	%rd55, __unnamed_1;
	cvta.global.u64 	%rd56, %rd55;
	mov.u32 	%r97, 1073;
	mov.u64 	%rd57, 1;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd52;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd54;
	.param .b32 param2;
	st.param.b32	[param2+0], %r97;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd56;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd57;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB3_6:
	cvta.to.global.u64 	%rd58, %rd35;
	mov.u32 	%r98, %ctaid.x;
	mov.u32 	%r99, %ntid.x;
	mov.u32 	%r100, %tid.x;
	mad.lo.s32 	%r1, %r99, %r98, %r100;
	cvt.s64.s32	%rd2, %r94;
	add.s64 	%rd3, %rd58, 16;
	ld.global.u64 	%rd4, [%rd58+16];
	mul.wide.s32 	%rd59, %r94, 4;
	add.s64 	%rd60, %rd4, %rd59;
	ld.u32 	%r2, [%rd60+88];
	setp.ge.s32	%p4, %r1, %r2;
	@%p4 bra 	BB3_45;

	ld.u32 	%r3, [%rd4];
	mov.u64 	%rd140, %rd4;
	@%p1 bra 	BB3_9;

	mov.u64 	%rd61, $str;
	cvta.global.u64 	%rd62, %rd61;
	mov.u64 	%rd63, $str1;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, __unnamed_3;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r101, 1283;
	mov.u64 	%rd67, 1;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 param2;
	st.param.b32	[param2+0], %r101;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd66;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd67;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6
	ld.global.u64 	%rd140, [%rd3];

BB3_9:
	mul.lo.s64 	%rd70, %rd2, 12;
	add.s64 	%rd71, %rd140, %rd70;
	ld.u32 	%r104, [%rd71+56];
	ld.u32 	%r105, [%rd71+60];
	mul.lo.s32 	%r106, %r104, %r105;
	div.s32 	%r4, %r1, %r106;
	mul.lo.s32 	%r107, %r4, %r106;
	sub.s32 	%r108, %r1, %r107;
	div.s32 	%r5, %r108, %r105;
	mul.lo.s32 	%r109, %r5, %r105;
	sub.s32 	%r6, %r108, %r109;
	mov.u64 	%rd33, 0;
	mov.u32 	%r47, 0;
	setp.ne.s32	%p6, %r94, 0;
	@%p6 bra 	BB3_10;
	bra.uni 	BB3_11;

BB3_10:
	mov.u32 	%r163, %r47;
	mov.u64 	%rd148, %rd33;
	bra.uni 	BB3_16;

BB3_11:
	ld.u32 	%r7, [%rd4+28];
	ld.u32 	%r8, [%rd4+4];
	ld.u32 	%r9, [%rd4];
	@%p1 bra 	BB3_13;

	mov.u64 	%rd72, $str;
	cvta.global.u64 	%rd73, %rd72;
	mov.u64 	%rd74, $str1;
	cvta.global.u64 	%rd75, %rd74;
	mov.u64 	%rd76, __unnamed_4;
	cvta.global.u64 	%rd77, %rd76;
	mov.u32 	%r110, 1309;
	mov.u64 	%rd78, 1;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd75;
	.param .b32 param2;
	st.param.b32	[param2+0], %r110;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd77;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd78;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7
	ld.global.u64 	%rd140, [%rd3];

BB3_13:
	ld.u32 	%r156, [%rd140+44];
	add.s32 	%r111, %r9, %r4;
	mad.lo.s32 	%r112, %r156, %r111, %r5;
	ld.u32 	%r157, [%rd140+48];
	mul.lo.s32 	%r12, %r112, %r157;
	add.s32 	%r113, %r4, %r3;
	add.s32 	%r114, %r113, %r7;
	sub.s32 	%r13, %r114, %r8;
	@%p1 bra 	BB3_15;

	mov.u64 	%rd79, $str;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	mov.u64 	%rd83, __unnamed_4;
	cvta.global.u64 	%rd84, %rd83;
	mov.u32 	%r115, 1309;
	mov.u64 	%rd85, 1;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r115;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd84;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd85;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8
	ld.global.u64 	%rd140, [%rd3];
	ld.u32 	%r157, [%rd140+48];
	ld.u32 	%r156, [%rd140+44];

BB3_15:
	mad.lo.s32 	%r116, %r156, %r13, %r5;
	mad.lo.s32 	%r163, %r116, %r157, %r6;
	ld.global.u64 	%rd33, [%rd3+8];
	ld.global.u64 	%rd148, [%rd3+16];
	add.s32 	%r47, %r12, %r6;

BB3_16:
	ld.param.u32 	%r154, [_Z20halo_swap_pack_rank1P11halo_swap_siPd_param_1];
	setp.ne.s32	%p9, %r154, 1;
	@%p9 bra 	BB3_22;

	ld.u32 	%r22, [%rd4+32];
	ld.u32 	%r23, [%rd4+4];
	@%p1 bra 	BB3_19;

	mov.u64 	%rd86, $str;
	cvta.global.u64 	%rd87, %rd86;
	mov.u64 	%rd88, $str1;
	cvta.global.u64 	%rd89, %rd88;
	mov.u64 	%rd90, __unnamed_4;
	cvta.global.u64 	%rd91, %rd90;
	mov.u32 	%r117, 1309;
	mov.u64 	%rd92, 1;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd87;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd89;
	.param .b32 param2;
	st.param.b32	[param2+0], %r117;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd91;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd92;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9
	ld.global.u64 	%rd140, [%rd3];

BB3_19:
	add.s32 	%r118, %r5, %r3;
	ld.u32 	%r160, [%rd140+44];
	mad.lo.s32 	%r119, %r160, %r4, %r118;
	ld.u32 	%r161, [%rd140+48];
	mad.lo.s32 	%r47, %r119, %r161, %r6;
	add.s32 	%r120, %r118, %r22;
	sub.s32 	%r27, %r120, %r23;
	@%p1 bra 	BB3_21;

	mov.u64 	%rd93, $str;
	cvta.global.u64 	%rd94, %rd93;
	mov.u64 	%rd95, $str1;
	cvta.global.u64 	%rd96, %rd95;
	mov.u64 	%rd97, __unnamed_4;
	cvta.global.u64 	%rd98, %rd97;
	mov.u32 	%r121, 1309;
	mov.u64 	%rd99, 1;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd94;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd96;
	.param .b32 param2;
	st.param.b32	[param2+0], %r121;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd98;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd99;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10
	ld.global.u64 	%rd140, [%rd3];
	ld.u32 	%r161, [%rd140+48];
	ld.u32 	%r160, [%rd140+44];

BB3_21:
	mad.lo.s32 	%r122, %r160, %r4, %r27;
	mad.lo.s32 	%r163, %r122, %r161, %r6;
	ld.global.u64 	%rd33, [%rd3+24];
	ld.global.u64 	%rd148, [%rd3+32];

BB3_22:
	ld.param.u32 	%r155, [_Z20halo_swap_pack_rank1P11halo_swap_siPd_param_1];
	setp.ne.s32	%p12, %r155, 2;
	@%p12 bra 	BB3_28;

	ld.u32 	%r35, [%rd4+36];
	ld.u32 	%r36, [%rd4+4];
	@%p1 bra 	BB3_25;

	mov.u64 	%rd100, $str;
	cvta.global.u64 	%rd101, %rd100;
	mov.u64 	%rd102, $str1;
	cvta.global.u64 	%rd103, %rd102;
	mov.u64 	%rd104, __unnamed_4;
	cvta.global.u64 	%rd105, %rd104;
	mov.u32 	%r123, 1309;
	mov.u64 	%rd106, 1;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd101;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd103;
	.param .b32 param2;
	st.param.b32	[param2+0], %r123;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd105;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd106;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11
	ld.global.u64 	%rd140, [%rd3];

BB3_25:
	ld.u32 	%r164, [%rd140+44];
	mad.lo.s32 	%r124, %r164, %r4, %r5;
	ld.u32 	%r165, [%rd140+48];
	mul.lo.s32 	%r39, %r124, %r165;
	add.s32 	%r40, %r6, %r3;
	@%p1 bra 	BB3_27;

	mov.u64 	%rd107, $str;
	cvta.global.u64 	%rd108, %rd107;
	mov.u64 	%rd109, $str1;
	cvta.global.u64 	%rd110, %rd109;
	mov.u64 	%rd111, __unnamed_4;
	cvta.global.u64 	%rd112, %rd111;
	mov.u32 	%r125, 1309;
	mov.u64 	%rd113, 1;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd108;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd110;
	.param .b32 param2;
	st.param.b32	[param2+0], %r125;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd112;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd113;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12
	ld.global.u64 	%rd140, [%rd3];
	ld.u32 	%r165, [%rd140+48];
	ld.u32 	%r164, [%rd140+44];

BB3_27:
	mad.lo.s32 	%r126, %r164, %r4, %r5;
	add.s32 	%r127, %r40, %r35;
	sub.s32 	%r128, %r127, %r36;
	mad.lo.s32 	%r163, %r126, %r165, %r128;
	ld.global.u64 	%rd33, [%rd3+40];
	ld.global.u64 	%rd148, [%rd3+48];
	add.s32 	%r47, %r40, %r39;

BB3_28:
	ld.u32 	%r129, [%rd140+16];
	setp.eq.s32	%p15, %r129, 1;
	ld.u32 	%r173, [%rd4+12];
	@%p15 bra 	BB3_39;
	bra.uni 	BB3_29;

BB3_39:
	setp.lt.s32	%p24, %r173, 1;
	@%p24 bra 	BB3_42;

	mov.u32 	%r186, 0;

BB3_41:
	ld.u32 	%r145, [%rd4+20];
	mov.u64 	%rd126, $str1;
	cvta.global.u64 	%rd127, %rd126;
	mov.u32 	%r146, 1126;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r146;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd127;
	.param .b32 param2;
	st.param.b32	[param2+0], %r145;
	.param .b32 param3;
	st.param.b32	[param3+0], %r173;
	.param .b32 param4;
	st.param.b32	[param4+0], %r47;
	.param .b32 param5;
	st.param.b32	[param5+0], %r186;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r147, [retval0+0];
	
	//{
	}// Callseq End 15
	mul.wide.s32 	%rd128, %r147, 8;
	add.s64 	%rd129, %rd1, %rd128;
	ld.global.f64 	%fd3, [%rd129];
	mad.lo.s32 	%r148, %r186, %r2, %r1;
	mul.wide.s32 	%rd130, %r148, 8;
	add.s64 	%rd131, %rd33, %rd130;
	st.f64 	[%rd131], %fd3;
	ld.u32 	%r173, [%rd4+12];
	add.s32 	%r186, %r186, 1;
	setp.lt.s32	%p25, %r186, %r173;
	@%p25 bra 	BB3_41;

BB3_42:
	setp.lt.s32	%p26, %r173, 1;
	@%p26 bra 	BB3_45;

	mov.u32 	%r189, 0;

BB3_44:
	ld.u32 	%r150, [%rd4+20];
	mov.u64 	%rd132, $str1;
	cvta.global.u64 	%rd133, %rd132;
	mov.u32 	%r151, 1130;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r151;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd133;
	.param .b32 param2;
	st.param.b32	[param2+0], %r150;
	.param .b32 param3;
	st.param.b32	[param3+0], %r173;
	.param .b32 param4;
	st.param.b32	[param4+0], %r163;
	.param .b32 param5;
	st.param.b32	[param5+0], %r189;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r152, [retval0+0];
	
	//{
	}// Callseq End 16
	mul.wide.s32 	%rd134, %r152, 8;
	add.s64 	%rd135, %rd1, %rd134;
	ld.global.f64 	%fd4, [%rd135];
	mad.lo.s32 	%r153, %r189, %r2, %r1;
	mul.wide.s32 	%rd136, %r153, 8;
	add.s64 	%rd137, %rd148, %rd136;
	st.f64 	[%rd137], %fd4;
	ld.u32 	%r173, [%rd4+12];
	add.s32 	%r189, %r189, 1;
	setp.lt.s32	%p27, %r189, %r173;
	@%p27 bra 	BB3_44;
	bra.uni 	BB3_45;

BB3_29:
	setp.lt.s32	%p16, %r173, 1;
	@%p16 bra 	BB3_34;

	ld.u32 	%r172, [%rd4+16];
	mov.u32 	%r131, 0;
	mov.u32 	%r174, %r131;
	mov.u32 	%r171, %r131;

BB3_31:
	setp.lt.s32	%p17, %r172, 1;
	mov.u32 	%r175, %r131;
	@%p17 bra 	BB3_33;

BB3_32:
	ld.u32 	%r133, [%rd4+20];
	mov.u64 	%rd114, $str1;
	cvta.global.u64 	%rd115, %rd114;
	mov.u32 	%r134, 1140;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r134;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd115;
	.param .b32 param2;
	st.param.b32	[param2+0], %r133;
	.param .b32 param3;
	st.param.b32	[param3+0], %r173;
	.param .b32 param4;
	st.param.b32	[param4+0], %r172;
	.param .b32 param5;
	st.param.b32	[param5+0], %r47;
	.param .b32 param6;
	st.param.b32	[param6+0], %r171;
	.param .b32 param7;
	st.param.b32	[param7+0], %r175;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r135, [retval0+0];
	
	//{
	}// Callseq End 13
	mul.wide.s32 	%rd116, %r135, 8;
	add.s64 	%rd117, %rd1, %rd116;
	ld.global.f64 	%fd1, [%rd117];
	mad.lo.s32 	%r136, %r174, %r2, %r1;
	mul.wide.s32 	%rd118, %r136, 8;
	add.s64 	%rd119, %rd33, %rd118;
	st.f64 	[%rd119], %fd1;
	add.s32 	%r174, %r174, 1;
	ld.u32 	%r172, [%rd4+16];
	add.s32 	%r175, %r175, 1;
	setp.lt.s32	%p18, %r175, %r172;
	ld.u32 	%r173, [%rd4+12];
	@%p18 bra 	BB3_32;

BB3_33:
	add.s32 	%r171, %r171, 1;
	setp.lt.s32	%p19, %r171, %r173;
	@%p19 bra 	BB3_31;

BB3_34:
	setp.lt.s32	%p20, %r173, 1;
	@%p20 bra 	BB3_45;

	ld.u32 	%r181, [%rd4+16];
	mov.u32 	%r138, 0;
	mov.u32 	%r183, %r138;
	mov.u32 	%r180, %r138;

BB3_36:
	setp.lt.s32	%p21, %r181, 1;
	mov.u32 	%r184, %r138;
	@%p21 bra 	BB3_38;

BB3_37:
	ld.u32 	%r140, [%rd4+20];
	mov.u64 	%rd120, $str1;
	cvta.global.u64 	%rd121, %rd120;
	mov.u32 	%r141, 1149;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r141;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd121;
	.param .b32 param2;
	st.param.b32	[param2+0], %r140;
	.param .b32 param3;
	st.param.b32	[param3+0], %r173;
	.param .b32 param4;
	st.param.b32	[param4+0], %r181;
	.param .b32 param5;
	st.param.b32	[param5+0], %r163;
	.param .b32 param6;
	st.param.b32	[param6+0], %r180;
	.param .b32 param7;
	st.param.b32	[param7+0], %r184;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r142, [retval0+0];
	
	//{
	}// Callseq End 14
	mul.wide.s32 	%rd122, %r142, 8;
	add.s64 	%rd123, %rd1, %rd122;
	ld.global.f64 	%fd2, [%rd123];
	mad.lo.s32 	%r143, %r183, %r2, %r1;
	mul.wide.s32 	%rd124, %r143, 8;
	add.s64 	%rd125, %rd148, %rd124;
	st.f64 	[%rd125], %fd2;
	add.s32 	%r183, %r183, 1;
	ld.u32 	%r181, [%rd4+16];
	add.s32 	%r184, %r184, 1;
	setp.lt.s32	%p22, %r184, %r181;
	ld.u32 	%r173, [%rd4+12];
	@%p22 bra 	BB3_37;

BB3_38:
	add.s32 	%r180, %r180, 1;
	setp.lt.s32	%p23, %r180, %r173;
	@%p23 bra 	BB3_36;

BB3_45:
	ret;
}

	// .globl	_Z22halo_swap_unpack_rank1P11halo_swap_siPd
.visible .entry _Z22halo_swap_unpack_rank1P11halo_swap_siPd(
	.param .u64 _Z22halo_swap_unpack_rank1P11halo_swap_siPd_param_0,
	.param .u32 _Z22halo_swap_unpack_rank1P11halo_swap_siPd_param_1,
	.param .u64 _Z22halo_swap_unpack_rank1P11halo_swap_siPd_param_2
)
{
	.reg .pred 	%p<28>;
	.reg .b32 	%r<186>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<154>;


	ld.param.u64 	%rd35, [_Z22halo_swap_unpack_rank1P11halo_swap_siPd_param_0];
	ld.param.u32 	%r91, [_Z22halo_swap_unpack_rank1P11halo_swap_siPd_param_1];
	ld.param.u64 	%rd36, [_Z22halo_swap_unpack_rank1P11halo_swap_siPd_param_2];
	cvta.to.global.u64 	%rd1, %rd36;
	setp.ne.s64	%p1, %rd35, 0;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd37, $str;
	cvta.global.u64 	%rd38, %rd37;
	mov.u64 	%rd39, $str1;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, __unnamed_2;
	cvta.global.u64 	%rd42, %rd41;
	mov.u32 	%r92, 1173;
	mov.u64 	%rd43, 1;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd38;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r92;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd42;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd43;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB4_2:
	setp.lt.u32	%p2, %r91, 3;
	@%p2 bra 	BB4_4;

	mov.u64 	%rd44, $str2;
	cvta.global.u64 	%rd45, %rd44;
	mov.u64 	%rd46, $str1;
	cvta.global.u64 	%rd47, %rd46;
	mov.u64 	%rd48, __unnamed_2;
	cvta.global.u64 	%rd49, %rd48;
	mov.u32 	%r93, 1174;
	mov.u64 	%rd50, 1;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd47;
	.param .b32 param2;
	st.param.b32	[param2+0], %r93;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB4_4:
	setp.ne.s64	%p3, %rd36, 0;
	@%p3 bra 	BB4_6;

	mov.u64 	%rd51, $str3;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, $str1;
	cvta.global.u64 	%rd54, %rd53;
	mov.u64 	%rd55, __unnamed_2;
	cvta.global.u64 	%rd56, %rd55;
	mov.u32 	%r94, 1175;
	mov.u64 	%rd57, 1;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd52;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd54;
	.param .b32 param2;
	st.param.b32	[param2+0], %r94;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd56;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd57;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB4_6:
	cvta.to.global.u64 	%rd58, %rd35;
	mov.u32 	%r95, %ctaid.x;
	mov.u32 	%r96, %ntid.x;
	mov.u32 	%r97, %tid.x;
	mad.lo.s32 	%r1, %r96, %r95, %r97;
	cvt.s64.s32	%rd2, %r91;
	add.s64 	%rd3, %rd58, 16;
	ld.global.u64 	%rd4, [%rd58+16];
	mul.wide.s32 	%rd59, %r91, 4;
	add.s64 	%rd60, %rd4, %rd59;
	ld.u32 	%r2, [%rd60+88];
	setp.ge.s32	%p4, %r1, %r2;
	@%p4 bra 	BB4_45;

	ld.u32 	%r3, [%rd4];
	mov.u64 	%rd140, %rd4;
	@%p1 bra 	BB4_9;

	mov.u64 	%rd61, $str;
	cvta.global.u64 	%rd62, %rd61;
	mov.u64 	%rd63, $str1;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, __unnamed_3;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r98, 1283;
	mov.u64 	%rd67, 1;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 param2;
	st.param.b32	[param2+0], %r98;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd66;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd67;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20
	ld.global.u64 	%rd140, [%rd3];

BB4_9:
	mul.lo.s64 	%rd70, %rd2, 12;
	add.s64 	%rd71, %rd140, %rd70;
	ld.u32 	%r101, [%rd71+56];
	ld.u32 	%r102, [%rd71+60];
	mul.lo.s32 	%r103, %r101, %r102;
	div.s32 	%r4, %r1, %r103;
	mul.lo.s32 	%r104, %r4, %r103;
	sub.s32 	%r105, %r1, %r104;
	div.s32 	%r5, %r105, %r102;
	mul.lo.s32 	%r106, %r5, %r102;
	sub.s32 	%r6, %r105, %r106;
	mov.u64 	%rd33, 0;
	mov.u32 	%r44, 0;
	setp.ne.s32	%p6, %r91, 0;
	@%p6 bra 	BB4_10;
	bra.uni 	BB4_11;

BB4_10:
	mov.u32 	%r159, %r44;
	mov.u64 	%rd148, %rd33;
	bra.uni 	BB4_16;

BB4_11:
	ld.u32 	%r7, [%rd4+28];
	ld.u32 	%r8, [%rd4+4];
	@%p1 bra 	BB4_13;

	mov.u64 	%rd72, $str;
	cvta.global.u64 	%rd73, %rd72;
	mov.u64 	%rd74, $str1;
	cvta.global.u64 	%rd75, %rd74;
	mov.u64 	%rd76, __unnamed_4;
	cvta.global.u64 	%rd77, %rd76;
	mov.u32 	%r107, 1309;
	mov.u64 	%rd78, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd73;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd75;
	.param .b32 param2;
	st.param.b32	[param2+0], %r107;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd77;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd78;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21
	ld.global.u64 	%rd140, [%rd3];

BB4_13:
	add.s32 	%r108, %r4, %r3;
	ld.u32 	%r152, [%rd140+44];
	sub.s32 	%r109, %r108, %r8;
	mad.lo.s32 	%r110, %r152, %r109, %r5;
	ld.u32 	%r153, [%rd140+48];
	mad.lo.s32 	%r44, %r110, %r153, %r6;
	add.s32 	%r12, %r108, %r7;
	@%p1 bra 	BB4_15;

	mov.u64 	%rd79, $str;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	mov.u64 	%rd83, __unnamed_4;
	cvta.global.u64 	%rd84, %rd83;
	mov.u32 	%r111, 1309;
	mov.u64 	%rd85, 1;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r111;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd84;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd85;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22
	ld.global.u64 	%rd140, [%rd3];
	ld.u32 	%r153, [%rd140+48];
	ld.u32 	%r152, [%rd140+44];

BB4_15:
	mad.lo.s32 	%r112, %r152, %r12, %r5;
	mad.lo.s32 	%r159, %r112, %r153, %r6;
	ld.global.u64 	%rd33, [%rd3+56];
	ld.global.u64 	%rd148, [%rd3+64];

BB4_16:
	ld.param.u32 	%r150, [_Z22halo_swap_unpack_rank1P11halo_swap_siPd_param_1];
	setp.ne.s32	%p9, %r150, 1;
	@%p9 bra 	BB4_22;

	ld.u32 	%r20, [%rd4+32];
	ld.u32 	%r21, [%rd4+4];
	@%p1 bra 	BB4_19;

	mov.u64 	%rd86, $str;
	cvta.global.u64 	%rd87, %rd86;
	mov.u64 	%rd88, $str1;
	cvta.global.u64 	%rd89, %rd88;
	mov.u64 	%rd90, __unnamed_4;
	cvta.global.u64 	%rd91, %rd90;
	mov.u32 	%r113, 1309;
	mov.u64 	%rd92, 1;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd87;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd89;
	.param .b32 param2;
	st.param.b32	[param2+0], %r113;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd91;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd92;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 23
	ld.global.u64 	%rd140, [%rd3];

BB4_19:
	add.s32 	%r114, %r5, %r3;
	ld.u32 	%r156, [%rd140+44];
	sub.s32 	%r115, %r114, %r21;
	mad.lo.s32 	%r116, %r156, %r4, %r115;
	ld.u32 	%r157, [%rd140+48];
	mad.lo.s32 	%r44, %r116, %r157, %r6;
	add.s32 	%r25, %r114, %r20;
	@%p1 bra 	BB4_21;

	mov.u64 	%rd93, $str;
	cvta.global.u64 	%rd94, %rd93;
	mov.u64 	%rd95, $str1;
	cvta.global.u64 	%rd96, %rd95;
	mov.u64 	%rd97, __unnamed_4;
	cvta.global.u64 	%rd98, %rd97;
	mov.u32 	%r117, 1309;
	mov.u64 	%rd99, 1;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd94;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd96;
	.param .b32 param2;
	st.param.b32	[param2+0], %r117;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd98;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd99;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 24
	ld.global.u64 	%rd140, [%rd3];
	ld.u32 	%r157, [%rd140+48];
	ld.u32 	%r156, [%rd140+44];

BB4_21:
	mad.lo.s32 	%r118, %r156, %r4, %r25;
	mad.lo.s32 	%r159, %r118, %r157, %r6;
	ld.global.u64 	%rd33, [%rd3+72];
	ld.global.u64 	%rd148, [%rd3+80];

BB4_22:
	ld.param.u32 	%r151, [_Z22halo_swap_unpack_rank1P11halo_swap_siPd_param_1];
	setp.ne.s32	%p12, %r151, 2;
	@%p12 bra 	BB4_28;

	ld.u32 	%r33, [%rd4+4];
	ld.u32 	%r34, [%rd4+36];
	@%p1 bra 	BB4_25;

	mov.u64 	%rd100, $str;
	cvta.global.u64 	%rd101, %rd100;
	mov.u64 	%rd102, $str1;
	cvta.global.u64 	%rd103, %rd102;
	mov.u64 	%rd104, __unnamed_4;
	cvta.global.u64 	%rd105, %rd104;
	mov.u32 	%r119, 1309;
	mov.u64 	%rd106, 1;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd101;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd103;
	.param .b32 param2;
	st.param.b32	[param2+0], %r119;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd105;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd106;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 25
	ld.global.u64 	%rd140, [%rd3];

BB4_25:
	ld.u32 	%r160, [%rd140+44];
	mad.lo.s32 	%r120, %r160, %r4, %r5;
	ld.u32 	%r161, [%rd140+48];
	add.s32 	%r37, %r6, %r3;
	sub.s32 	%r121, %r37, %r33;
	mad.lo.s32 	%r44, %r120, %r161, %r121;
	@%p1 bra 	BB4_27;

	mov.u64 	%rd107, $str;
	cvta.global.u64 	%rd108, %rd107;
	mov.u64 	%rd109, $str1;
	cvta.global.u64 	%rd110, %rd109;
	mov.u64 	%rd111, __unnamed_4;
	cvta.global.u64 	%rd112, %rd111;
	mov.u32 	%r122, 1309;
	mov.u64 	%rd113, 1;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd108;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd110;
	.param .b32 param2;
	st.param.b32	[param2+0], %r122;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd112;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd113;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 26
	ld.global.u64 	%rd140, [%rd3];
	ld.u32 	%r161, [%rd140+48];
	ld.u32 	%r160, [%rd140+44];

BB4_27:
	mad.lo.s32 	%r123, %r160, %r4, %r5;
	add.s32 	%r124, %r37, %r34;
	mad.lo.s32 	%r159, %r123, %r161, %r124;
	ld.global.u64 	%rd33, [%rd3+88];
	ld.global.u64 	%rd148, [%rd3+96];

BB4_28:
	ld.u32 	%r125, [%rd140+16];
	setp.eq.s32	%p15, %r125, 1;
	ld.u32 	%r169, [%rd4+12];
	@%p15 bra 	BB4_39;
	bra.uni 	BB4_29;

BB4_39:
	setp.lt.s32	%p24, %r169, 1;
	@%p24 bra 	BB4_42;

	mov.u32 	%r182, 0;

BB4_41:
	mad.lo.s32 	%r141, %r182, %r2, %r1;
	mul.wide.s32 	%rd126, %r141, 8;
	add.s64 	%rd127, %rd33, %rd126;
	ld.f64 	%fd3, [%rd127];
	ld.u32 	%r142, [%rd4+20];
	mov.u64 	%rd128, $str1;
	cvta.global.u64 	%rd129, %rd128;
	mov.u32 	%r143, 1233;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r143;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd129;
	.param .b32 param2;
	st.param.b32	[param2+0], %r142;
	.param .b32 param3;
	st.param.b32	[param3+0], %r169;
	.param .b32 param4;
	st.param.b32	[param4+0], %r44;
	.param .b32 param5;
	st.param.b32	[param5+0], %r182;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r144, [retval0+0];
	
	//{
	}// Callseq End 29
	mul.wide.s32 	%rd130, %r144, 8;
	add.s64 	%rd131, %rd1, %rd130;
	st.global.f64 	[%rd131], %fd3;
	ld.u32 	%r169, [%rd4+12];
	add.s32 	%r182, %r182, 1;
	setp.lt.s32	%p25, %r182, %r169;
	@%p25 bra 	BB4_41;

BB4_42:
	setp.lt.s32	%p26, %r169, 1;
	@%p26 bra 	BB4_45;

	mov.u32 	%r185, 0;

BB4_44:
	mad.lo.s32 	%r146, %r185, %r2, %r1;
	mul.wide.s32 	%rd132, %r146, 8;
	add.s64 	%rd133, %rd148, %rd132;
	ld.f64 	%fd4, [%rd133];
	ld.u32 	%r147, [%rd4+20];
	mov.u64 	%rd134, $str1;
	cvta.global.u64 	%rd135, %rd134;
	mov.u32 	%r148, 1237;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r148;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd135;
	.param .b32 param2;
	st.param.b32	[param2+0], %r147;
	.param .b32 param3;
	st.param.b32	[param3+0], %r169;
	.param .b32 param4;
	st.param.b32	[param4+0], %r159;
	.param .b32 param5;
	st.param.b32	[param5+0], %r185;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r149, [retval0+0];
	
	//{
	}// Callseq End 30
	mul.wide.s32 	%rd136, %r149, 8;
	add.s64 	%rd137, %rd1, %rd136;
	st.global.f64 	[%rd137], %fd4;
	ld.u32 	%r169, [%rd4+12];
	add.s32 	%r185, %r185, 1;
	setp.lt.s32	%p27, %r185, %r169;
	@%p27 bra 	BB4_44;
	bra.uni 	BB4_45;

BB4_29:
	setp.lt.s32	%p16, %r169, 1;
	@%p16 bra 	BB4_34;

	ld.u32 	%r168, [%rd4+16];
	mov.u32 	%r127, 0;
	mov.u32 	%r170, %r127;
	mov.u32 	%r167, %r127;

BB4_31:
	setp.lt.s32	%p17, %r168, 1;
	mov.u32 	%r171, %r127;
	@%p17 bra 	BB4_33;

BB4_32:
	mad.lo.s32 	%r129, %r170, %r2, %r1;
	mul.wide.s32 	%rd114, %r129, 8;
	add.s64 	%rd115, %rd33, %rd114;
	ld.f64 	%fd1, [%rd115];
	ld.u32 	%r130, [%rd4+20];
	mov.u64 	%rd116, $str1;
	cvta.global.u64 	%rd117, %rd116;
	mov.u32 	%r131, 1247;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r131;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd117;
	.param .b32 param2;
	st.param.b32	[param2+0], %r130;
	.param .b32 param3;
	st.param.b32	[param3+0], %r169;
	.param .b32 param4;
	st.param.b32	[param4+0], %r168;
	.param .b32 param5;
	st.param.b32	[param5+0], %r44;
	.param .b32 param6;
	st.param.b32	[param6+0], %r167;
	.param .b32 param7;
	st.param.b32	[param7+0], %r171;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r132, [retval0+0];
	
	//{
	}// Callseq End 27
	mul.wide.s32 	%rd118, %r132, 8;
	add.s64 	%rd119, %rd1, %rd118;
	st.global.f64 	[%rd119], %fd1;
	add.s32 	%r170, %r170, 1;
	ld.u32 	%r168, [%rd4+16];
	add.s32 	%r171, %r171, 1;
	setp.lt.s32	%p18, %r171, %r168;
	ld.u32 	%r169, [%rd4+12];
	@%p18 bra 	BB4_32;

BB4_33:
	add.s32 	%r167, %r167, 1;
	setp.lt.s32	%p19, %r167, %r169;
	@%p19 bra 	BB4_31;

BB4_34:
	setp.lt.s32	%p20, %r169, 1;
	@%p20 bra 	BB4_45;

	ld.u32 	%r177, [%rd4+16];
	mov.u32 	%r134, 0;
	mov.u32 	%r179, %r134;
	mov.u32 	%r176, %r134;

BB4_36:
	setp.lt.s32	%p21, %r177, 1;
	mov.u32 	%r180, %r134;
	@%p21 bra 	BB4_38;

BB4_37:
	mad.lo.s32 	%r136, %r179, %r2, %r1;
	mul.wide.s32 	%rd120, %r136, 8;
	add.s64 	%rd121, %rd148, %rd120;
	ld.f64 	%fd2, [%rd121];
	ld.u32 	%r137, [%rd4+20];
	mov.u64 	%rd122, $str1;
	cvta.global.u64 	%rd123, %rd122;
	mov.u32 	%r138, 1256;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r138;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd123;
	.param .b32 param2;
	st.param.b32	[param2+0], %r137;
	.param .b32 param3;
	st.param.b32	[param3+0], %r169;
	.param .b32 param4;
	st.param.b32	[param4+0], %r177;
	.param .b32 param5;
	st.param.b32	[param5+0], %r159;
	.param .b32 param6;
	st.param.b32	[param6+0], %r176;
	.param .b32 param7;
	st.param.b32	[param7+0], %r180;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r139, [retval0+0];
	
	//{
	}// Callseq End 28
	mul.wide.s32 	%rd124, %r139, 8;
	add.s64 	%rd125, %rd1, %rd124;
	st.global.f64 	[%rd125], %fd2;
	add.s32 	%r179, %r179, 1;
	ld.u32 	%r177, [%rd4+16];
	add.s32 	%r180, %r180, 1;
	setp.lt.s32	%p22, %r180, %r177;
	ld.u32 	%r169, [%rd4+12];
	@%p22 bra 	BB4_37;

BB4_38:
	add.s32 	%r176, %r176, 1;
	setp.lt.s32	%p23, %r176, %r169;
	@%p23 bra 	BB4_36;

BB4_45:
	ret;
}


