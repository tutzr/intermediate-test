//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_35
.address_size 64

	// .globl	_Z14pth_stress_setP5pth_siPA3_d
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank2_assertiPKciiiiii
(
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_0,
	.param .b64 _Z25reverse_addr_rank2_assertiPKciiiiii_param_1,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_2,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_3,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_4,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_5,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_6,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_7
)
;
.extern .func  (.param .b32 func_retval0) _Z17kernel_iterationsP13kernel_ctxt_s
(
	.param .b64 _Z17kernel_iterationsP13kernel_ctxt_s_param_0
)
;
.extern .func  (.param .b32 func_retval0) _Z16kernel_coords_icP13kernel_ctxt_si
(
	.param .b64 _Z16kernel_coords_icP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_icP13kernel_ctxt_si_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z16kernel_coords_jcP13kernel_ctxt_si
(
	.param .b64 _Z16kernel_coords_jcP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_jcP13kernel_ctxt_si_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z16kernel_coords_kcP13kernel_ctxt_si
(
	.param .b64 _Z16kernel_coords_kcP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_kcP13kernel_ctxt_si_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z19kernel_coords_indexP13kernel_ctxt_siii
(
	.param .b64 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_0,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_1,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_2,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_3
)
;
.extern .func  (.param .b32 func_retval0) _Z24kernel_vector_iterationsP13kernel_ctxt_s
(
	.param .b64 _Z24kernel_vector_iterationsP13kernel_ctxt_s_param_0
)
;
.extern .func  (.param .b32 func_retval0) _Z16kernel_baseindexP13kernel_ctxt_si
(
	.param .b64 _Z16kernel_baseindexP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_baseindexP13kernel_ctxt_si_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .align 1 .b8 __unnamed_1[50] = {118, 111, 105, 100, 32, 112, 116, 104, 95, 107, 101, 114, 110, 101, 108, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 112, 116, 104, 95, 115, 32, 42, 44, 32, 102, 101, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_2[52] = {118, 111, 105, 100, 32, 112, 116, 104, 95, 107, 101, 114, 110, 101, 108, 95, 118, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 112, 116, 104, 95, 115, 32, 42, 44, 32, 102, 101, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[54] = {118, 111, 105, 100, 32, 112, 116, 104, 95, 107, 101, 114, 110, 101, 108, 95, 97, 95, 118, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 112, 116, 104, 95, 115, 32, 42, 44, 32, 102, 101, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_4[49] = {118, 111, 105, 100, 32, 112, 116, 104, 95, 115, 116, 114, 101, 115, 115, 95, 115, 101, 116, 40, 112, 116, 104, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 51, 93, 41, 0};
.global .align 1 .b8 __unnamed_5[45] = {118, 111, 105, 100, 32, 112, 116, 104, 95, 115, 116, 114, 101, 115, 115, 40, 112, 116, 104, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 51, 93, 41, 0};
.global .align 1 .b8 $str[4] = {112, 116, 104, 0};
.global .align 1 .b8 $str1[19] = {112, 104, 105, 95, 102, 111, 114, 99, 101, 95, 115, 116, 114, 101, 115, 115, 46, 99, 0};
.global .align 1 .b8 $str2[4] = {107, 116, 120, 0};
.global .align 1 .b8 $str3[3] = {102, 101, 0};
.global .align 1 .b8 $str4[17] = {102, 101, 45, 62, 102, 117, 110, 99, 45, 62, 115, 116, 114, 101, 115, 115, 0};
.global .align 1 .b8 $str5[19] = {102, 101, 45, 62, 102, 117, 110, 99, 45, 62, 115, 116, 114, 101, 115, 115, 95, 118, 0};
.global .align 1 .b8 $str6[21] = {102, 101, 45, 62, 102, 117, 110, 99, 45, 62, 115, 116, 114, 95, 97, 110, 116, 105, 95, 118, 0};

.visible .func _Z14pth_stress_setP5pth_siPA3_d(
	.param .b64 _Z14pth_stress_setP5pth_siPA3_d_param_0,
	.param .b32 _Z14pth_stress_setP5pth_siPA3_d_param_1,
	.param .b64 _Z14pth_stress_setP5pth_siPA3_d_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<26>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<39>;


	ld.param.u64 	%rd1, [_Z14pth_stress_setP5pth_siPA3_d_param_0];
	ld.param.u32 	%r1, [_Z14pth_stress_setP5pth_siPA3_d_param_1];
	ld.param.u64 	%rd2, [_Z14pth_stress_setP5pth_siPA3_d_param_2];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_4;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r2, 349;
	mov.u64 	%rd9, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	ld.f64 	%fd1, [%rd2];
	ld.u64 	%rd10, [%rd1+24];
	ld.u32 	%r3, [%rd1+20];
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r4, 353;
	mov.u32 	%r5, 3;
	mov.u32 	%r6, 0;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r6;
	.param .b32 param7;
	st.param.b32	[param7+0], %r6;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 1
	mul.wide.s32 	%rd13, %r7, 8;
	add.s64 	%rd14, %rd10, %rd13;
	st.f64 	[%rd14], %fd1;
	ld.f64 	%fd2, [%rd2+8];
	ld.u64 	%rd15, [%rd1+24];
	ld.u32 	%r8, [%rd1+20];
	mov.u32 	%r9, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r6;
	.param .b32 param7;
	st.param.b32	[param7+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 2
	mul.wide.s32 	%rd16, %r10, 8;
	add.s64 	%rd17, %rd15, %rd16;
	st.f64 	[%rd17], %fd2;
	ld.f64 	%fd3, [%rd2+16];
	ld.u64 	%rd18, [%rd1+24];
	ld.u32 	%r11, [%rd1+20];
	mov.u32 	%r12, 2;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r6;
	.param .b32 param7;
	st.param.b32	[param7+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 3
	mul.wide.s32 	%rd19, %r13, 8;
	add.s64 	%rd20, %rd18, %rd19;
	st.f64 	[%rd20], %fd3;
	ld.f64 	%fd4, [%rd2+24];
	ld.u64 	%rd21, [%rd1+24];
	ld.u32 	%r14, [%rd1+20];
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r6;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 4
	mul.wide.s32 	%rd22, %r15, 8;
	add.s64 	%rd23, %rd21, %rd22;
	st.f64 	[%rd23], %fd4;
	ld.f64 	%fd5, [%rd2+32];
	ld.u64 	%rd24, [%rd1+24];
	ld.u32 	%r16, [%rd1+20];
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 5
	mul.wide.s32 	%rd25, %r17, 8;
	add.s64 	%rd26, %rd24, %rd25;
	st.f64 	[%rd26], %fd5;
	ld.f64 	%fd6, [%rd2+40];
	ld.u64 	%rd27, [%rd1+24];
	ld.u32 	%r18, [%rd1+20];
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 6
	mul.wide.s32 	%rd28, %r19, 8;
	add.s64 	%rd29, %rd27, %rd28;
	st.f64 	[%rd29], %fd6;
	ld.f64 	%fd7, [%rd2+48];
	ld.u64 	%rd30, [%rd1+24];
	ld.u32 	%r20, [%rd1+20];
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r12;
	.param .b32 param7;
	st.param.b32	[param7+0], %r6;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 7
	mul.wide.s32 	%rd31, %r21, 8;
	add.s64 	%rd32, %rd30, %rd31;
	st.f64 	[%rd32], %fd7;
	ld.f64 	%fd8, [%rd2+56];
	ld.u64 	%rd33, [%rd1+24];
	ld.u32 	%r22, [%rd1+20];
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r12;
	.param .b32 param7;
	st.param.b32	[param7+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 8
	mul.wide.s32 	%rd34, %r23, 8;
	add.s64 	%rd35, %rd33, %rd34;
	st.f64 	[%rd35], %fd8;
	ld.f64 	%fd9, [%rd2+64];
	ld.u64 	%rd36, [%rd1+24];
	ld.u32 	%r24, [%rd1+20];
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r12;
	.param .b32 param7;
	st.param.b32	[param7+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r25, [retval0+0];
	
	//{
	}// Callseq End 9
	mul.wide.s32 	%rd37, %r25, 8;
	add.s64 	%rd38, %rd36, %rd37;
	st.f64 	[%rd38], %fd9;
	ret;
}

	// .globl	_Z10pth_stressP5pth_siPA3_d
.visible .func _Z10pth_stressP5pth_siPA3_d(
	.param .b64 _Z10pth_stressP5pth_siPA3_d_param_0,
	.param .b32 _Z10pth_stressP5pth_siPA3_d_param_1,
	.param .b64 _Z10pth_stressP5pth_siPA3_d_param_2
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<26>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<39>;


	ld.param.u64 	%rd1, [_Z10pth_stressP5pth_siPA3_d_param_0];
	ld.param.u32 	%r1, [_Z10pth_stressP5pth_siPA3_d_param_1];
	ld.param.u64 	%rd2, [_Z10pth_stressP5pth_siPA3_d_param_2];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_5;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r2, 371;
	mov.u64 	%rd9, 1;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB1_2:
	ld.u64 	%rd10, [%rd1+24];
	ld.u32 	%r3, [%rd1+20];
	mov.u64 	%rd11, $str1;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r4, 375;
	mov.u32 	%r5, 3;
	mov.u32 	%r6, 0;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r6;
	.param .b32 param7;
	st.param.b32	[param7+0], %r6;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 11
	mul.wide.s32 	%rd13, %r7, 8;
	add.s64 	%rd14, %rd10, %rd13;
	ld.f64 	%fd1, [%rd14];
	st.f64 	[%rd2], %fd1;
	ld.u64 	%rd15, [%rd1+24];
	ld.u32 	%r8, [%rd1+20];
	mov.u32 	%r9, 1;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r6;
	.param .b32 param7;
	st.param.b32	[param7+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 12
	mul.wide.s32 	%rd16, %r10, 8;
	add.s64 	%rd17, %rd15, %rd16;
	ld.f64 	%fd2, [%rd17];
	st.f64 	[%rd2+8], %fd2;
	ld.u64 	%rd18, [%rd1+24];
	ld.u32 	%r11, [%rd1+20];
	mov.u32 	%r12, 2;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r6;
	.param .b32 param7;
	st.param.b32	[param7+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 13
	mul.wide.s32 	%rd19, %r13, 8;
	add.s64 	%rd20, %rd18, %rd19;
	ld.f64 	%fd3, [%rd20];
	st.f64 	[%rd2+16], %fd3;
	ld.u64 	%rd21, [%rd1+24];
	ld.u32 	%r14, [%rd1+20];
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r6;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 14
	mul.wide.s32 	%rd22, %r15, 8;
	add.s64 	%rd23, %rd21, %rd22;
	ld.f64 	%fd4, [%rd23];
	st.f64 	[%rd2+24], %fd4;
	ld.u64 	%rd24, [%rd1+24];
	ld.u32 	%r16, [%rd1+20];
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 15
	mul.wide.s32 	%rd25, %r17, 8;
	add.s64 	%rd26, %rd24, %rd25;
	ld.f64 	%fd5, [%rd26];
	st.f64 	[%rd2+32], %fd5;
	ld.u64 	%rd27, [%rd1+24];
	ld.u32 	%r18, [%rd1+20];
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 16
	mul.wide.s32 	%rd28, %r19, 8;
	add.s64 	%rd29, %rd27, %rd28;
	ld.f64 	%fd6, [%rd29];
	st.f64 	[%rd2+40], %fd6;
	ld.u64 	%rd30, [%rd1+24];
	ld.u32 	%r20, [%rd1+20];
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r12;
	.param .b32 param7;
	st.param.b32	[param7+0], %r6;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 17
	mul.wide.s32 	%rd31, %r21, 8;
	add.s64 	%rd32, %rd30, %rd31;
	ld.f64 	%fd7, [%rd32];
	st.f64 	[%rd2+48], %fd7;
	ld.u64 	%rd33, [%rd1+24];
	ld.u32 	%r22, [%rd1+20];
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r12;
	.param .b32 param7;
	st.param.b32	[param7+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 18
	mul.wide.s32 	%rd34, %r23, 8;
	add.s64 	%rd35, %rd33, %rd34;
	ld.f64 	%fd8, [%rd35];
	st.f64 	[%rd2+56], %fd8;
	ld.u64 	%rd36, [%rd1+24];
	ld.u32 	%r24, [%rd1+20];
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd12;
	.param .b32 param2;
	st.param.b32	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32	[param3+0], %r5;
	.param .b32 param4;
	st.param.b32	[param4+0], %r5;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r12;
	.param .b32 param7;
	st.param.b32	[param7+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r25, [retval0+0];
	
	//{
	}// Callseq End 19
	mul.wide.s32 	%rd37, %r25, 8;
	add.s64 	%rd38, %rd36, %rd37;
	ld.f64 	%fd9, [%rd38];
	st.f64 	[%rd2+64], %fd9;
	ret;
}

	// .globl	_Z10pth_kernelP13kernel_ctxt_sP5pth_sP4fe_s
.visible .entry _Z10pth_kernelP13kernel_ctxt_sP5pth_sP4fe_s(
	.param .u64 _Z10pth_kernelP13kernel_ctxt_sP5pth_sP4fe_s_param_0,
	.param .u64 _Z10pth_kernelP13kernel_ctxt_sP5pth_sP4fe_s_param_1,
	.param .u64 _Z10pth_kernelP13kernel_ctxt_sP5pth_sP4fe_s_param_2
)
{
	.local .align 8 .b8 	__local_depot2[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<7>;
	.reg .b32 	%r<39>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<77>;


	mov.u64 	%SPL, __local_depot2;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z10pth_kernelP13kernel_ctxt_sP5pth_sP4fe_s_param_0];
	ld.param.u64 	%rd3, [_Z10pth_kernelP13kernel_ctxt_sP5pth_sP4fe_s_param_1];
	ld.param.u64 	%rd4, [_Z10pth_kernelP13kernel_ctxt_sP5pth_sP4fe_s_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd5, $str2;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, __unnamed_1;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r3, 232;
	mov.u64 	%rd11, 1;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB2_2:
	setp.ne.s64	%p2, %rd3, 0;
	@%p2 bra 	BB2_4;

	mov.u64 	%rd12, $str;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_1;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r4, 233;
	mov.u64 	%rd18, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB2_4:
	setp.ne.s64	%p3, %rd4, 0;
	@%p3 bra 	BB2_6;

	mov.u64 	%rd19, $str3;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, __unnamed_1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r5, 234;
	mov.u64 	%rd25, 1;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd24;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd25;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22

BB2_6:
	cvta.to.global.u64 	%rd1, %rd4;
	ld.global.u64 	%rd26, [%rd1];
	ld.u64 	%rd27, [%rd26+40];
	setp.ne.s64	%p4, %rd27, 0;
	@%p4 bra 	BB2_8;

	mov.u64 	%rd28, $str4;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str1;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, __unnamed_1;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r6, 235;
	mov.u64 	%rd34, 1;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd33;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd34;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 23

BB2_8:
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z17kernel_iterationsP13kernel_ctxt_s, 
	(
	param0
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 24
	mov.u32 	%r8, %ntid.x;
	mov.u32 	%r9, %ctaid.x;
	mov.u32 	%r10, %tid.x;
	mad.lo.s32 	%r1, %r8, %r9, %r10;
	setp.ge.s32	%p5, %r1, %r7;
	@%p5 bra 	BB2_12;

	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16kernel_coords_icP13kernel_ctxt_si, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 25
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16kernel_coords_jcP13kernel_ctxt_si, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r12, [retval0+0];
	
	//{
	}// Callseq End 26
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16kernel_coords_kcP13kernel_ctxt_si, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 27
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r11;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z19kernel_coords_indexP13kernel_ctxt_siii, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 28
	ld.global.u64 	%rd35, [%rd1];
	ld.u64 	%rd36, [%rd35+40];
	add.u64 	%rd37, %SP, 0;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd37;
	.param .b32 retval0;
	prototype_29 : .callprototype (.param .b32 _) _ (.param .b64 _, .param .b32 _, .param .b64 _) ;
	call (retval0), 
	%rd36, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_29;
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 29
	@%p2 bra 	BB2_11;

	mov.u64 	%rd38, $str;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, $str1;
	cvta.global.u64 	%rd41, %rd40;
	mov.u64 	%rd42, __unnamed_4;
	cvta.global.u64 	%rd43, %rd42;
	mov.u32 	%r15, 349;
	mov.u64 	%rd44, 1;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd41;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd43;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd44;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 30

BB2_11:
	cvta.to.global.u64 	%rd45, %rd3;
	cvta.to.local.u64 	%rd47, %rd37;
	ld.local.f64 	%fd1, [%rd47];
	ld.global.u64 	%rd48, [%rd45+24];
	ld.global.u32 	%r16, [%rd45+20];
	mov.u64 	%rd49, $str1;
	cvta.global.u64 	%rd50, %rd49;
	mov.u32 	%r17, 353;
	mov.u32 	%r18, 3;
	mov.u32 	%r19, 0;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r19;
	.param .b32 param7;
	st.param.b32	[param7+0], %r19;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 31
	mul.wide.s32 	%rd51, %r20, 8;
	add.s64 	%rd52, %rd48, %rd51;
	st.f64 	[%rd52], %fd1;
	ld.local.f64 	%fd2, [%rd47+8];
	ld.global.u64 	%rd53, [%rd45+24];
	ld.global.u32 	%r21, [%rd45+20];
	mov.u32 	%r22, 1;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r21;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r19;
	.param .b32 param7;
	st.param.b32	[param7+0], %r22;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 32
	mul.wide.s32 	%rd54, %r23, 8;
	add.s64 	%rd55, %rd53, %rd54;
	st.f64 	[%rd55], %fd2;
	ld.local.f64 	%fd3, [%rd47+16];
	ld.global.u64 	%rd56, [%rd45+24];
	ld.global.u32 	%r24, [%rd45+20];
	mov.u32 	%r25, 2;
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r19;
	.param .b32 param7;
	st.param.b32	[param7+0], %r25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r26, [retval0+0];
	
	//{
	}// Callseq End 33
	mul.wide.s32 	%rd57, %r26, 8;
	add.s64 	%rd58, %rd56, %rd57;
	st.f64 	[%rd58], %fd3;
	ld.local.f64 	%fd4, [%rd47+24];
	ld.global.u64 	%rd59, [%rd45+24];
	ld.global.u32 	%r27, [%rd45+20];
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r27;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r22;
	.param .b32 param7;
	st.param.b32	[param7+0], %r19;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r28, [retval0+0];
	
	//{
	}// Callseq End 34
	mul.wide.s32 	%rd60, %r28, 8;
	add.s64 	%rd61, %rd59, %rd60;
	st.f64 	[%rd61], %fd4;
	ld.local.f64 	%fd5, [%rd47+32];
	ld.global.u64 	%rd62, [%rd45+24];
	ld.global.u32 	%r29, [%rd45+20];
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r29;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r22;
	.param .b32 param7;
	st.param.b32	[param7+0], %r22;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r30, [retval0+0];
	
	//{
	}// Callseq End 35
	mul.wide.s32 	%rd63, %r30, 8;
	add.s64 	%rd64, %rd62, %rd63;
	st.f64 	[%rd64], %fd5;
	ld.local.f64 	%fd6, [%rd47+40];
	ld.global.u64 	%rd65, [%rd45+24];
	ld.global.u32 	%r31, [%rd45+20];
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r22;
	.param .b32 param7;
	st.param.b32	[param7+0], %r25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 36
	mul.wide.s32 	%rd66, %r32, 8;
	add.s64 	%rd67, %rd65, %rd66;
	st.f64 	[%rd67], %fd6;
	ld.local.f64 	%fd7, [%rd47+48];
	ld.global.u64 	%rd68, [%rd45+24];
	ld.global.u32 	%r33, [%rd45+20];
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r33;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r25;
	.param .b32 param7;
	st.param.b32	[param7+0], %r19;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r34, [retval0+0];
	
	//{
	}// Callseq End 37
	mul.wide.s32 	%rd69, %r34, 8;
	add.s64 	%rd70, %rd68, %rd69;
	st.f64 	[%rd70], %fd7;
	ld.local.f64 	%fd8, [%rd47+56];
	ld.global.u64 	%rd71, [%rd45+24];
	ld.global.u32 	%r35, [%rd45+20];
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r35;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r25;
	.param .b32 param7;
	st.param.b32	[param7+0], %r22;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r36, [retval0+0];
	
	//{
	}// Callseq End 38
	mul.wide.s32 	%rd72, %r36, 8;
	add.s64 	%rd73, %rd71, %rd72;
	st.f64 	[%rd73], %fd8;
	ld.local.f64 	%fd9, [%rd47+64];
	ld.global.u64 	%rd74, [%rd45+24];
	ld.global.u32 	%r37, [%rd45+20];
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b32 param3;
	st.param.b32	[param3+0], %r18;
	.param .b32 param4;
	st.param.b32	[param4+0], %r18;
	.param .b32 param5;
	st.param.b32	[param5+0], %r2;
	.param .b32 param6;
	st.param.b32	[param6+0], %r25;
	.param .b32 param7;
	st.param.b32	[param7+0], %r25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r38, [retval0+0];
	
	//{
	}// Callseq End 39
	mul.wide.s32 	%rd75, %r38, 8;
	add.s64 	%rd76, %rd74, %rd75;
	st.f64 	[%rd76], %fd9;

BB2_12:
	ret;
}

	// .globl	_Z12pth_kernel_vP13kernel_ctxt_sP5pth_sP4fe_s
.visible .entry _Z12pth_kernel_vP13kernel_ctxt_sP5pth_sP4fe_s(
	.param .u64 _Z12pth_kernel_vP13kernel_ctxt_sP5pth_sP4fe_s_param_0,
	.param .u64 _Z12pth_kernel_vP13kernel_ctxt_sP5pth_sP4fe_s_param_1,
	.param .u64 _Z12pth_kernel_vP13kernel_ctxt_sP5pth_sP4fe_s_param_2
)
{
	.local .align 8 .b8 	__local_depot3[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .b32 	%r<34>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<69>;


	mov.u64 	%SPL, __local_depot3;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z12pth_kernel_vP13kernel_ctxt_sP5pth_sP4fe_s_param_0];
	ld.param.u64 	%rd3, [_Z12pth_kernel_vP13kernel_ctxt_sP5pth_sP4fe_s_param_1];
	ld.param.u64 	%rd4, [_Z12pth_kernel_vP13kernel_ctxt_sP5pth_sP4fe_s_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd5, $str2;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, __unnamed_2;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r2, 268;
	mov.u64 	%rd11, 1;
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 40

BB3_2:
	setp.ne.s64	%p2, %rd3, 0;
	@%p2 bra 	BB3_4;

	mov.u64 	%rd12, $str;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_2;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r3, 269;
	mov.u64 	%rd18, 1;
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 41

BB3_4:
	setp.ne.s64	%p3, %rd4, 0;
	@%p3 bra 	BB3_6;

	mov.u64 	%rd19, $str3;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, __unnamed_2;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r4, 270;
	mov.u64 	%rd25, 1;
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd24;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd25;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 42

BB3_6:
	cvta.to.global.u64 	%rd1, %rd4;
	ld.global.u64 	%rd26, [%rd1];
	ld.u64 	%rd27, [%rd26+88];
	setp.ne.s64	%p4, %rd27, 0;
	@%p4 bra 	BB3_8;

	mov.u64 	%rd28, $str5;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str1;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, __unnamed_2;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r5, 271;
	mov.u64 	%rd34, 1;
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd33;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd34;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 43

BB3_8:
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z24kernel_vector_iterationsP13kernel_ctxt_s, 
	(
	param0
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 44
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32	%p5, %r1, %r6;
	@%p5 bra 	BB3_10;

	cvta.to.global.u64 	%rd35, %rd3;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16kernel_baseindexP13kernel_ctxt_si, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 45
	ld.global.u64 	%rd36, [%rd1];
	ld.u64 	%rd37, [%rd36+88];
	add.u64 	%rd38, %SP, 0;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b32 param1;
	st.param.b32	[param1+0], %r10;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd38;
	prototype_46 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b64 _) ;
	call 
	%rd37, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_46;
	
	//{
	}// Callseq End 46
	add.u64 	%rd39, %SPL, 0;
	ld.local.f64 	%fd1, [%rd39];
	ld.global.u64 	%rd40, [%rd35+24];
	ld.global.u32 	%r11, [%rd35+20];
	mov.u64 	%rd41, $str1;
	cvta.global.u64 	%rd42, %rd41;
	mov.u32 	%r12, 284;
	mov.u32 	%r13, 3;
	mov.u32 	%r14, 0;
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 47
	mul.wide.s32 	%rd43, %r15, 8;
	add.s64 	%rd44, %rd40, %rd43;
	st.f64 	[%rd44], %fd1;
	ld.local.f64 	%fd2, [%rd39+8];
	ld.global.u64 	%rd45, [%rd35+24];
	ld.global.u32 	%r16, [%rd35+20];
	mov.u32 	%r17, 1;
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r17;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 48
	mul.wide.s32 	%rd46, %r18, 8;
	add.s64 	%rd47, %rd45, %rd46;
	st.f64 	[%rd47], %fd2;
	ld.local.f64 	%fd3, [%rd39+16];
	ld.global.u64 	%rd48, [%rd35+24];
	ld.global.u32 	%r19, [%rd35+20];
	mov.u32 	%r20, 2;
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 49
	mul.wide.s32 	%rd49, %r21, 8;
	add.s64 	%rd50, %rd48, %rd49;
	st.f64 	[%rd50], %fd3;
	ld.local.f64 	%fd4, [%rd39+24];
	ld.global.u64 	%rd51, [%rd35+24];
	ld.global.u32 	%r22, [%rd35+20];
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r17;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 50
	mul.wide.s32 	%rd52, %r23, 8;
	add.s64 	%rd53, %rd51, %rd52;
	st.f64 	[%rd53], %fd4;
	ld.local.f64 	%fd5, [%rd39+32];
	ld.global.u64 	%rd54, [%rd35+24];
	ld.global.u32 	%r24, [%rd35+20];
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r17;
	.param .b32 param7;
	st.param.b32	[param7+0], %r17;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r25, [retval0+0];
	
	//{
	}// Callseq End 51
	mul.wide.s32 	%rd55, %r25, 8;
	add.s64 	%rd56, %rd54, %rd55;
	st.f64 	[%rd56], %fd5;
	ld.local.f64 	%fd6, [%rd39+40];
	ld.global.u64 	%rd57, [%rd35+24];
	ld.global.u32 	%r26, [%rd35+20];
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r26;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r17;
	.param .b32 param7;
	st.param.b32	[param7+0], %r20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r27, [retval0+0];
	
	//{
	}// Callseq End 52
	mul.wide.s32 	%rd58, %r27, 8;
	add.s64 	%rd59, %rd57, %rd58;
	st.f64 	[%rd59], %fd6;
	ld.local.f64 	%fd7, [%rd39+48];
	ld.global.u64 	%rd60, [%rd35+24];
	ld.global.u32 	%r28, [%rd35+20];
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r28;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r20;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r29, [retval0+0];
	
	//{
	}// Callseq End 53
	mul.wide.s32 	%rd61, %r29, 8;
	add.s64 	%rd62, %rd60, %rd61;
	st.f64 	[%rd62], %fd7;
	ld.local.f64 	%fd8, [%rd39+56];
	ld.global.u64 	%rd63, [%rd35+24];
	ld.global.u32 	%r30, [%rd35+20];
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r30;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r20;
	.param .b32 param7;
	st.param.b32	[param7+0], %r17;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r31, [retval0+0];
	
	//{
	}// Callseq End 54
	mul.wide.s32 	%rd64, %r31, 8;
	add.s64 	%rd65, %rd63, %rd64;
	st.f64 	[%rd65], %fd8;
	ld.local.f64 	%fd9, [%rd39+64];
	ld.global.u64 	%rd66, [%rd35+24];
	ld.global.u32 	%r32, [%rd35+20];
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r20;
	.param .b32 param7;
	st.param.b32	[param7+0], %r20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r33, [retval0+0];
	
	//{
	}// Callseq End 55
	mul.wide.s32 	%rd67, %r33, 8;
	add.s64 	%rd68, %rd66, %rd67;
	st.f64 	[%rd68], %fd9;

BB3_10:
	ret;
}

	// .globl	_Z14pth_kernel_a_vP13kernel_ctxt_sP5pth_sP4fe_s
.visible .entry _Z14pth_kernel_a_vP13kernel_ctxt_sP5pth_sP4fe_s(
	.param .u64 _Z14pth_kernel_a_vP13kernel_ctxt_sP5pth_sP4fe_s_param_0,
	.param .u64 _Z14pth_kernel_a_vP13kernel_ctxt_sP5pth_sP4fe_s_param_1,
	.param .u64 _Z14pth_kernel_a_vP13kernel_ctxt_sP5pth_sP4fe_s_param_2
)
{
	.local .align 8 .b8 	__local_depot4[72];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<6>;
	.reg .b32 	%r<34>;
	.reg .f64 	%fd<10>;
	.reg .b64 	%rd<69>;


	mov.u64 	%SPL, __local_depot4;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z14pth_kernel_a_vP13kernel_ctxt_sP5pth_sP4fe_s_param_0];
	ld.param.u64 	%rd3, [_Z14pth_kernel_a_vP13kernel_ctxt_sP5pth_sP4fe_s_param_1];
	ld.param.u64 	%rd4, [_Z14pth_kernel_a_vP13kernel_ctxt_sP5pth_sP4fe_s_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd5, $str2;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, __unnamed_3;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r2, 310;
	mov.u64 	%rd11, 1;
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 56

BB4_2:
	setp.ne.s64	%p2, %rd3, 0;
	@%p2 bra 	BB4_4;

	mov.u64 	%rd12, $str;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_3;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r3, 311;
	mov.u64 	%rd18, 1;
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 57

BB4_4:
	setp.ne.s64	%p3, %rd4, 0;
	@%p3 bra 	BB4_6;

	mov.u64 	%rd19, $str3;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, __unnamed_3;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r4, 312;
	mov.u64 	%rd25, 1;
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd24;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd25;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 58

BB4_6:
	cvta.to.global.u64 	%rd1, %rd4;
	ld.global.u64 	%rd26, [%rd1];
	ld.u64 	%rd27, [%rd26+104];
	setp.ne.s64	%p4, %rd27, 0;
	@%p4 bra 	BB4_8;

	mov.u64 	%rd28, $str6;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str1;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, __unnamed_3;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r5, 313;
	mov.u64 	%rd34, 1;
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd33;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd34;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 59

BB4_8:
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z24kernel_vector_iterationsP13kernel_ctxt_s, 
	(
	param0
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 60
	mov.u32 	%r7, %ntid.x;
	mov.u32 	%r8, %ctaid.x;
	mov.u32 	%r9, %tid.x;
	mad.lo.s32 	%r1, %r7, %r8, %r9;
	setp.ge.s32	%p5, %r1, %r6;
	@%p5 bra 	BB4_10;

	cvta.to.global.u64 	%rd35, %rd3;
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd2;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16kernel_baseindexP13kernel_ctxt_si, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 61
	ld.global.u64 	%rd36, [%rd1];
	ld.u64 	%rd37, [%rd36+104];
	add.u64 	%rd38, %SP, 0;
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b32 param1;
	st.param.b32	[param1+0], %r10;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd38;
	prototype_62 : .callprototype ()_ (.param .b64 _, .param .b32 _, .param .b64 _) ;
	call 
	%rd37, 
	(
	param0, 
	param1, 
	param2
	)
	, prototype_62;
	
	//{
	}// Callseq End 62
	add.u64 	%rd39, %SPL, 0;
	ld.local.f64 	%fd1, [%rd39];
	ld.global.u64 	%rd40, [%rd35+24];
	ld.global.u32 	%r11, [%rd35+20];
	mov.u64 	%rd41, $str1;
	cvta.global.u64 	%rd42, %rd41;
	mov.u32 	%r12, 326;
	mov.u32 	%r13, 3;
	mov.u32 	%r14, 0;
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 63
	mul.wide.s32 	%rd43, %r15, 8;
	add.s64 	%rd44, %rd40, %rd43;
	st.f64 	[%rd44], %fd1;
	ld.local.f64 	%fd2, [%rd39+8];
	ld.global.u64 	%rd45, [%rd35+24];
	ld.global.u32 	%r16, [%rd35+20];
	mov.u32 	%r17, 1;
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r17;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 64
	mul.wide.s32 	%rd46, %r18, 8;
	add.s64 	%rd47, %rd45, %rd46;
	st.f64 	[%rd47], %fd2;
	ld.local.f64 	%fd3, [%rd39+16];
	ld.global.u64 	%rd48, [%rd35+24];
	ld.global.u32 	%r19, [%rd35+20];
	mov.u32 	%r20, 2;
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 65
	mul.wide.s32 	%rd49, %r21, 8;
	add.s64 	%rd50, %rd48, %rd49;
	st.f64 	[%rd50], %fd3;
	ld.local.f64 	%fd4, [%rd39+24];
	ld.global.u64 	%rd51, [%rd35+24];
	ld.global.u32 	%r22, [%rd35+20];
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r17;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 66
	mul.wide.s32 	%rd52, %r23, 8;
	add.s64 	%rd53, %rd51, %rd52;
	st.f64 	[%rd53], %fd4;
	ld.local.f64 	%fd5, [%rd39+32];
	ld.global.u64 	%rd54, [%rd35+24];
	ld.global.u32 	%r24, [%rd35+20];
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r24;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r17;
	.param .b32 param7;
	st.param.b32	[param7+0], %r17;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r25, [retval0+0];
	
	//{
	}// Callseq End 67
	mul.wide.s32 	%rd55, %r25, 8;
	add.s64 	%rd56, %rd54, %rd55;
	st.f64 	[%rd56], %fd5;
	ld.local.f64 	%fd6, [%rd39+40];
	ld.global.u64 	%rd57, [%rd35+24];
	ld.global.u32 	%r26, [%rd35+20];
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r26;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r17;
	.param .b32 param7;
	st.param.b32	[param7+0], %r20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r27, [retval0+0];
	
	//{
	}// Callseq End 68
	mul.wide.s32 	%rd58, %r27, 8;
	add.s64 	%rd59, %rd57, %rd58;
	st.f64 	[%rd59], %fd6;
	ld.local.f64 	%fd7, [%rd39+48];
	ld.global.u64 	%rd60, [%rd35+24];
	ld.global.u32 	%r28, [%rd35+20];
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r28;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r20;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r29, [retval0+0];
	
	//{
	}// Callseq End 69
	mul.wide.s32 	%rd61, %r29, 8;
	add.s64 	%rd62, %rd60, %rd61;
	st.f64 	[%rd62], %fd7;
	ld.local.f64 	%fd8, [%rd39+56];
	ld.global.u64 	%rd63, [%rd35+24];
	ld.global.u32 	%r30, [%rd35+20];
	// Callseq Start 70
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r30;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r20;
	.param .b32 param7;
	st.param.b32	[param7+0], %r17;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r31, [retval0+0];
	
	//{
	}// Callseq End 70
	mul.wide.s32 	%rd64, %r31, 8;
	add.s64 	%rd65, %rd63, %rd64;
	st.f64 	[%rd65], %fd8;
	ld.local.f64 	%fd9, [%rd39+64];
	ld.global.u64 	%rd66, [%rd35+24];
	ld.global.u32 	%r32, [%rd35+20];
	// Callseq Start 71
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b32 param3;
	st.param.b32	[param3+0], %r13;
	.param .b32 param4;
	st.param.b32	[param4+0], %r13;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 param6;
	st.param.b32	[param6+0], %r20;
	.param .b32 param7;
	st.param.b32	[param7+0], %r20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r33, [retval0+0];
	
	//{
	}// Callseq End 71
	mul.wide.s32 	%rd67, %r33, 8;
	add.s64 	%rd68, %rd66, %rd67;
	st.f64 	[%rd68], %fd9;

BB4_10:
	ret;
}


