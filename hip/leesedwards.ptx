//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z21lees_edw_nplane_totalP10lees_edw_s
.extern .func  (.param .b32 func_retval0) _Z16cs_nlocal_offsetP8coords_sPi
(
	.param .b64 _Z16cs_nlocal_offsetP8coords_sPi_param_0,
	.param .b64 _Z16cs_nlocal_offsetP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z7cs_lminP8coords_sPd
(
	.param .b64 _Z7cs_lminP8coords_sPd_param_0,
	.param .b64 _Z7cs_lminP8coords_sPd_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z7cs_ltotP8coords_sPd
(
	.param .b64 _Z7cs_ltotP8coords_sPd_param_0,
	.param .b64 _Z7cs_ltotP8coords_sPd_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z14cs_cart_coordsP8coords_sPi
(
	.param .b64 _Z14cs_cart_coordsP8coords_sPi_param_0,
	.param .b64 _Z14cs_cart_coordsP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z9cs_nlocalP8coords_sPi
(
	.param .b64 _Z9cs_nlocalP8coords_sPi_param_0,
	.param .b64 _Z9cs_nlocalP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z10cs_stridesP8coords_sPiS1_S1_
(
	.param .b64 _Z10cs_stridesP8coords_sPiS1_S1__param_0,
	.param .b64 _Z10cs_stridesP8coords_sPiS1_S1__param_1,
	.param .b64 _Z10cs_stridesP8coords_sPiS1_S1__param_2,
	.param .b64 _Z10cs_stridesP8coords_sPiS1_S1__param_3
)
;
.extern .func  (.param .b32 func_retval0) _Z8cs_nhaloP8coords_sPi
(
	.param .b64 _Z8cs_nhaloP8coords_sPi_param_0,
	.param .b64 _Z8cs_nhaloP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z9cs_cartszP8coords_sPi
(
	.param .b64 _Z9cs_cartszP8coords_sPi_param_0,
	.param .b64 _Z9cs_cartszP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z9cs_ntotalP8coords_sPi
(
	.param .b64 _Z9cs_ntotalP8coords_sPi_param_0,
	.param .b64 _Z9cs_ntotalP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z20physics_control_timeP9physics_sPd
(
	.param .b64 _Z20physics_control_timeP9physics_sPd_param_0,
	.param .b64 _Z20physics_control_timeP9physics_sPd_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z4imaxii
(
	.param .b32 _Z4imaxii_param_0,
	.param .b32 _Z4imaxii_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z4iminii
(
	.param .b32 _Z4iminii_param_0,
	.param .b32 _Z4iminii_param_1
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd
(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
;
.const .align 8 .b8 __nv_static_32__19_leesedwards_cpp1_ii_a73b72cf_static_param[104];
.global .align 1 .b8 __unnamed_1[40] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 110, 112, 108, 97, 110, 101, 95, 116, 111, 116, 97, 108, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_2[40] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 110, 112, 108, 97, 110, 101, 95, 108, 111, 99, 97, 108, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[46] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 112, 108, 97, 110, 101, 95, 117, 121, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_4[43] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 110, 120, 98, 117, 102, 102, 101, 114, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_5[41] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 110, 115, 105, 116, 101, 115, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_6[52] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 116, 101, 97, 100, 121, 95, 117, 121, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_7[51] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 98, 108, 111, 99, 107, 95, 117, 121, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_8[58] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 112, 108, 97, 110, 101, 95, 117, 121, 95, 110, 111, 119, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_9[47] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 112, 108, 97, 110, 101, 95, 108, 111, 99, 97, 116, 105, 111, 110, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_10[58] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 105, 110, 100, 101, 120, 95, 114, 101, 97, 108, 95, 116, 111, 95, 98, 117, 102, 102, 101, 114, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_11[53] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 105, 110, 100, 101, 120, 95, 98, 117, 102, 102, 101, 114, 95, 116, 111, 95, 114, 101, 97, 108, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_12[70] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 98, 117, 102, 102, 101, 114, 95, 100, 105, 115, 112, 108, 97, 99, 101, 109, 101, 110, 116, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_13[48] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 104, 101, 97, 114, 95, 114, 97, 116, 101, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_14[48] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 105, 110, 100, 101, 120, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_15[64] = {118, 111, 105, 100, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 105, 110, 100, 101, 120, 95, 118, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_16[41] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 110, 108, 111, 99, 97, 108, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_17[56] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 116, 114, 105, 100, 101, 115, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_18[40] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 110, 104, 97, 108, 111, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_19[42] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 108, 116, 111, 116, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_20[41] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 99, 97, 114, 116, 115, 122, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_21[41] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 110, 116, 111, 116, 97, 108, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_22[48] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 110, 108, 111, 99, 97, 108, 95, 111, 102, 102, 115, 101, 116, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_23[46] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 99, 97, 114, 116, 95, 99, 111, 111, 114, 100, 115, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_24[46] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 112, 108, 97, 110, 101, 95, 100, 121, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_25[46] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 105, 98, 117, 102, 102, 95, 116, 111, 95, 114, 101, 97, 108, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_26[48] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 105, 99, 95, 116, 111, 95, 98, 117, 102, 102, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_27[43] = {105, 110, 116, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 98, 117, 102, 102, 101, 114, 95, 100, 117, 121, 40, 108, 101, 101, 115, 95, 101, 100, 119, 95, 115, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 $str[3] = {108, 101, 0};
.global .align 1 .b8 $str1[14] = {108, 101, 101, 115, 101, 100, 119, 97, 114, 100, 115, 46, 99, 0};
.global .align 1 .b8 $str2[35] = {108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 116, 121, 112, 101, 32, 61, 61, 32, 76, 69, 69, 83, 95, 69, 68, 87, 95, 76, 73, 78, 69, 65, 82, 0};
.global .align 1 .b8 $str3[11] = {116, 108, 101, 32, 62, 61, 32, 48, 46, 48, 0};
.global .align 1 .b8 $str4[7] = {108, 101, 45, 62, 99, 115, 0};
.global .align 1 .b8 $str5[39] = {110, 112, 32, 62, 61, 32, 48, 32, 38, 38, 32, 110, 112, 32, 60, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 112, 108, 97, 110, 101, 108, 111, 99, 97, 108, 0};
.global .align 1 .b8 $str6[19] = {108, 101, 45, 62, 105, 99, 114, 101, 97, 108, 95, 116, 111, 95, 98, 117, 102, 102, 0};
.global .align 1 .b8 $str7[65] = {105, 100, 105, 115, 112, 108, 97, 99, 101, 32, 62, 61, 32, 45, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 32, 38, 38, 32, 105, 100, 105, 115, 112, 108, 97, 99, 101, 32, 60, 61, 32, 43, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str8[46] = {105, 98, 32, 62, 61, 32, 48, 32, 38, 38, 32, 105, 98, 32, 60, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 105, 110, 100, 101, 120, 95, 114, 101, 97, 108, 95, 110, 98, 117, 102, 102, 101, 114, 0};
.global .align 1 .b8 $str9[65] = {108, 101, 45, 62, 105, 99, 114, 101, 97, 108, 95, 116, 111, 95, 98, 117, 102, 102, 91, 105, 98, 93, 32, 61, 61, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 105, 99, 95, 116, 111, 95, 98, 117, 102, 102, 40, 108, 101, 44, 32, 105, 99, 44, 32, 105, 100, 105, 115, 112, 108, 97, 99, 101, 41, 0};
.global .align 1 .b8 $str10[19] = {108, 101, 45, 62, 105, 99, 98, 117, 102, 102, 95, 116, 111, 95, 114, 101, 97, 108, 0};
.global .align 1 .b8 $str11[35] = {105, 98, 32, 62, 61, 48, 32, 38, 38, 32, 105, 98, 32, 60, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 120, 98, 117, 102, 102, 101, 114, 0};
.global .align 1 .b8 $str12[57] = {108, 101, 45, 62, 105, 99, 98, 117, 102, 102, 95, 116, 111, 95, 114, 101, 97, 108, 91, 105, 98, 93, 32, 61, 61, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 105, 98, 117, 102, 102, 95, 116, 111, 95, 114, 101, 97, 108, 40, 108, 101, 44, 32, 105, 98, 41, 0};
.global .align 1 .b8 $str13[36] = {105, 98, 32, 62, 61, 32, 48, 32, 38, 38, 32, 105, 98, 32, 60, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 120, 98, 117, 102, 102, 101, 114, 0};
.global .align 1 .b8 $str14[50] = {108, 101, 45, 62, 98, 117, 102, 102, 101, 114, 95, 100, 117, 121, 91, 105, 98, 93, 32, 61, 61, 32, 108, 101, 101, 115, 95, 101, 100, 119, 95, 98, 117, 102, 102, 101, 114, 95, 100, 117, 121, 40, 108, 101, 44, 32, 105, 98, 41, 0};
.global .align 1 .b8 $str15[25] = {105, 99, 32, 62, 61, 32, 49, 45, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str16[25] = {106, 99, 32, 62, 61, 32, 49, 45, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str17[25] = {107, 99, 32, 62, 61, 32, 49, 45, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str18[68] = {105, 99, 32, 60, 61, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 88, 93, 32, 43, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 32, 43, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 120, 98, 117, 102, 102, 101, 114, 0};
.global .align 1 .b8 $str19[46] = {106, 99, 32, 60, 61, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 89, 93, 32, 43, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str20[46] = {107, 99, 32, 60, 61, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 90, 93, 32, 43, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str21[9] = {108, 101, 45, 62, 112, 104, 121, 115, 0};
.global .align 1 .b8 $str22[3] = {100, 121, 0};
.global .align 1 .b8 $str23[23] = {100, 105, 32, 60, 61, 32, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str24[24] = {100, 105, 32, 62, 61, 32, 45, 108, 101, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.const .align 8 .b8 __cudart_i2opi_d[144] = {8, 93, 141, 31, 177, 95, 251, 107, 234, 146, 82, 138, 247, 57, 7, 61, 123, 241, 229, 235, 199, 186, 39, 117, 45, 234, 95, 158, 102, 63, 70, 79, 183, 9, 203, 39, 207, 126, 54, 109, 31, 109, 10, 90, 139, 17, 47, 239, 15, 152, 5, 222, 255, 151, 248, 31, 59, 40, 249, 189, 139, 95, 132, 156, 244, 57, 83, 131, 57, 214, 145, 57, 65, 126, 95, 180, 38, 112, 156, 233, 132, 68, 187, 46, 245, 53, 130, 232, 62, 167, 41, 177, 28, 235, 29, 254, 28, 146, 209, 9, 234, 46, 73, 6, 224, 210, 77, 66, 58, 110, 36, 183, 97, 197, 187, 222, 171, 99, 81, 254, 65, 144, 67, 60, 153, 149, 98, 219, 192, 221, 52, 245, 209, 87, 39, 252, 41, 21, 68, 78, 110, 131, 249, 162};
.const .align 8 .b8 __cudart_sin_cos_coeffs[128] = {186, 94, 120, 249, 101, 219, 229, 61, 70, 210, 176, 44, 241, 229, 90, 190, 146, 227, 172, 105, 227, 29, 199, 62, 161, 98, 219, 25, 160, 1, 42, 191, 24, 8, 17, 17, 17, 17, 129, 63, 84, 85, 85, 85, 85, 85, 197, 191, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 100, 129, 253, 32, 131, 255, 168, 189, 40, 133, 239, 193, 167, 238, 33, 62, 217, 230, 6, 142, 79, 126, 146, 190, 233, 188, 221, 25, 160, 1, 250, 62, 71, 93, 193, 22, 108, 193, 86, 191, 81, 85, 85, 85, 85, 85, 165, 63, 0, 0, 0, 0, 0, 0, 224, 191, 0, 0, 0, 0, 0, 0, 240, 63};

.visible .func  (.param .b32 func_retval0) _Z21lees_edw_nplane_totalP10lees_edw_s(
	.param .b64 _Z21lees_edw_nplane_totalP10lees_edw_s_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z21lees_edw_nplane_totalP10lees_edw_s_param_0];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 335;
	mov.u64 	%rd8, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	ld.u64 	%rd9, [%rd1+24];
	ld.u32 	%r2, [%rd9+40];
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z21lees_edw_nplane_localP10lees_edw_s
.visible .func  (.param .b32 func_retval0) _Z21lees_edw_nplane_localP10lees_edw_s(
	.param .b64 _Z21lees_edw_nplane_localP10lees_edw_s_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z21lees_edw_nplane_localP10lees_edw_s_param_0];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_2;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 349;
	mov.u64 	%rd8, 1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_2:
	ld.u64 	%rd9, [%rd1+24];
	ld.u32 	%r2, [%rd9];
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z17lees_edw_plane_uyP10lees_edw_sPd
.visible .func  (.param .b32 func_retval0) _Z17lees_edw_plane_uyP10lees_edw_sPd(
	.param .b64 _Z17lees_edw_plane_uyP10lees_edw_sPd_param_0,
	.param .b64 _Z17lees_edw_plane_uyP10lees_edw_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z17lees_edw_plane_uyP10lees_edw_sPd_param_0];
	ld.param.u64 	%rd2, [_Z17lees_edw_plane_uyP10lees_edw_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_3;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 363;
	mov.u64 	%rd9, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB2_2:
	ld.u64 	%rd10, [%rd1+24];
	ld.f64 	%fd1, [%rd10+64];
	st.f64 	[%rd2], %fd1;
	mov.u32 	%r2, 0;
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z17lees_edw_nxbufferP10lees_edw_sPi
.visible .func  (.param .b32 func_retval0) _Z17lees_edw_nxbufferP10lees_edw_sPi(
	.param .b64 _Z17lees_edw_nxbufferP10lees_edw_sPi_param_0,
	.param .b64 _Z17lees_edw_nxbufferP10lees_edw_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z17lees_edw_nxbufferP10lees_edw_sPi_param_0];
	ld.param.u64 	%rd2, [_Z17lees_edw_nxbufferP10lees_edw_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_4;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 379;
	mov.u64 	%rd9, 1;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB3_2:
	ld.u64 	%rd10, [%rd1+24];
	ld.u32 	%r2, [%rd10+4];
	st.u32 	[%rd2], %r2;
	mov.u32 	%r3, 0;
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z15lees_edw_nsitesP10lees_edw_sPi
.visible .func  (.param .b32 func_retval0) _Z15lees_edw_nsitesP10lees_edw_sPi(
	.param .b64 _Z15lees_edw_nsitesP10lees_edw_sPi_param_0,
	.param .b64 _Z15lees_edw_nsitesP10lees_edw_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<15>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z15lees_edw_nsitesP10lees_edw_sPi_param_0];
	ld.param.u64 	%rd2, [_Z15lees_edw_nsitesP10lees_edw_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_5;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 658;
	mov.u64 	%rd9, 1;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB4_2:
	ld.u64 	%rd10, [%rd1+24];
	ld.u32 	%r2, [%rd10+12];
	shl.b32 	%r3, %r2, 1;
	ld.u32 	%r4, [%rd10+28];
	add.s32 	%r5, %r3, %r4;
	ld.u32 	%r6, [%rd10+4];
	add.s32 	%r7, %r5, %r6;
	ld.u32 	%r8, [%rd10+32];
	add.s32 	%r9, %r3, %r8;
	mul.lo.s32 	%r10, %r9, %r7;
	ld.u32 	%r11, [%rd10+36];
	add.s32 	%r12, %r3, %r11;
	mul.lo.s32 	%r13, %r10, %r12;
	st.u32 	[%rd2], %r13;
	mov.u32 	%r14, 0;
	st.param.b32	[func_retval0+0], %r14;
	ret;
}

	// .globl	_Z18lees_edw_steady_uyP10lees_edw_siPd
.visible .func  (.param .b32 func_retval0) _Z18lees_edw_steady_uyP10lees_edw_siPd(
	.param .b64 _Z18lees_edw_steady_uyP10lees_edw_siPd_param_0,
	.param .b32 _Z18lees_edw_steady_uyP10lees_edw_siPd_param_1,
	.param .b64 _Z18lees_edw_steady_uyP10lees_edw_siPd_param_2
)
{
	.local .align 8 .b8 	__local_depot5[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b32 	%r<12>;
	.reg .f64 	%fd<19>;
	.reg .b64 	%rd<34>;


	mov.u64 	%SPL, __local_depot5;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z18lees_edw_steady_uyP10lees_edw_siPd_param_0];
	ld.param.u32 	%r1, [_Z18lees_edw_steady_uyP10lees_edw_siPd_param_1];
	ld.param.u64 	%rd3, [_Z18lees_edw_steady_uyP10lees_edw_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB5_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_6;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 686;
	mov.u64 	%rd10, 1;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5

BB5_2:
	add.s64 	%rd1, %rd2, 24;
	ld.u64 	%rd11, [%rd2+24];
	ld.u32 	%r3, [%rd11+44];
	setp.eq.s32	%p2, %r3, 0;
	@%p2 bra 	BB5_4;

	mov.u64 	%rd12, $str2;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_6;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r4, 687;
	mov.u64 	%rd18, 1;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB5_4:
	ld.u64 	%rd19, [%rd1+-16];
	add.u64 	%rd20, %SP, 24;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 7
	@%p1 bra 	BB5_6;

	mov.u64 	%rd21, $str;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, __unnamed_13;
	cvta.global.u64 	%rd26, %rd25;
	mov.u32 	%r6, 979;
	mov.u64 	%rd27, 1;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd26;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd27;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB5_6:
	ld.u64 	%rd28, [%rd1+-16];
	add.u64 	%rd29, %SP, 0;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z7cs_ltotP8coords_sPd, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 9
	ld.u64 	%rd30, [%rd1];
	ld.u32 	%r8, [%rd30+40];
	cvt.rn.f64.s32	%fd1, %r8;
	ld.f64 	%fd2, [%rd30+64];
	mul.f64 	%fd3, %fd2, %fd1;
	add.u64 	%rd31, %SPL, 0;
	ld.local.f64 	%fd4, [%rd31];
	div.rn.f64 	%fd5, %fd3, %fd4;
	cvta.to.local.u64 	%rd33, %rd20;
	ld.local.u32 	%r9, [%rd33];
	cvt.rn.f64.s32	%fd6, %r9;
	cvt.rn.f64.s32	%fd7, %r1;
	add.f64 	%fd8, %fd7, %fd6;
	add.f64 	%fd9, %fd8, 0dBFE0000000000000;
	ld.f64 	%fd10, [%rd30+72];
	add.f64 	%fd11, %fd10, %fd9;
	ld.f64 	%fd12, [%rd30+80];
	div.rn.f64 	%fd13, %fd11, %fd12;
	cvt.rzi.s32.f64	%r10, %fd13;
	mul.f64 	%fd14, %fd5, %fd9;
	cvt.rn.f64.s32	%fd15, %r10;
	ld.f64 	%fd16, [%rd30+64];
	mul.f64 	%fd17, %fd15, %fd16;
	sub.f64 	%fd18, %fd14, %fd17;
	st.f64 	[%rd3], %fd18;
	mov.u32 	%r11, 0;
	st.param.b32	[func_retval0+0], %r11;
	ret;
}

	// .globl	_Z19lees_edw_shear_rateP10lees_edw_sPd
.visible .func  (.param .b32 func_retval0) _Z19lees_edw_shear_rateP10lees_edw_sPd(
	.param .b64 _Z19lees_edw_shear_rateP10lees_edw_sPd_param_0,
	.param .b64 _Z19lees_edw_shear_rateP10lees_edw_sPd_param_1
)
{
	.local .align 8 .b8 	__local_depot6[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<2>;
	.reg .b32 	%r<5>;
	.reg .f64 	%fd<6>;
	.reg .b64 	%rd<14>;


	mov.u64 	%SPL, __local_depot6;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd1, [_Z19lees_edw_shear_rateP10lees_edw_sPd_param_0];
	ld.param.u64 	%rd2, [_Z19lees_edw_shear_rateP10lees_edw_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB6_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_13;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 979;
	mov.u64 	%rd9, 1;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB6_2:
	ld.u64 	%rd10, [%rd1+8];
	add.u64 	%rd11, %SP, 0;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z7cs_ltotP8coords_sPd, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 11
	ld.u64 	%rd12, [%rd1+24];
	ld.u32 	%r3, [%rd12+40];
	cvt.rn.f64.s32	%fd1, %r3;
	ld.f64 	%fd2, [%rd12+64];
	mul.f64 	%fd3, %fd2, %fd1;
	add.u64 	%rd13, %SPL, 0;
	ld.local.f64 	%fd4, [%rd13];
	div.rn.f64 	%fd5, %fd3, %fd4;
	st.f64 	[%rd2], %fd5;
	mov.u32 	%r4, 0;
	st.param.b32	[func_retval0+0], %r4;
	ret;
}

	// .globl	_Z17lees_edw_block_uyP10lees_edw_siPd
.visible .func  (.param .b32 func_retval0) _Z17lees_edw_block_uyP10lees_edw_siPd(
	.param .b64 _Z17lees_edw_block_uyP10lees_edw_siPd_param_0,
	.param .b32 _Z17lees_edw_block_uyP10lees_edw_siPd_param_1,
	.param .b64 _Z17lees_edw_block_uyP10lees_edw_siPd_param_2
)
{
	.local .align 8 .b8 	__local_depot7[64];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<16>;
	.reg .b64 	%rd<29>;


	mov.u64 	%SPL, __local_depot7;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z17lees_edw_block_uyP10lees_edw_siPd_param_0];
	ld.param.u32 	%r1, [_Z17lees_edw_block_uyP10lees_edw_siPd_param_1];
	ld.param.u64 	%rd3, [_Z17lees_edw_block_uyP10lees_edw_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB7_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_7;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 727;
	mov.u64 	%rd10, 1;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB7_2:
	add.s64 	%rd1, %rd2, 24;
	ld.u64 	%rd11, [%rd2+24];
	ld.u32 	%r3, [%rd11+44];
	setp.eq.s32	%p2, %r3, 0;
	@%p2 bra 	BB7_4;

	mov.u64 	%rd12, $str2;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_7;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r4, 728;
	mov.u64 	%rd18, 1;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13

BB7_4:
	ld.u64 	%rd19, [%rd1+-16];
	add.u64 	%rd20, %SP, 16;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z7cs_lminP8coords_sPd, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 14
	ld.u64 	%rd21, [%rd1+-16];
	add.u64 	%rd22, %SP, 40;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z7cs_ltotP8coords_sPd, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 15
	ld.u64 	%rd23, [%rd1+-16];
	add.u64 	%rd24, %SP, 0;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 16
	add.u64 	%rd25, %SPL, 0;
	ld.local.u32 	%r8, [%rd25];
	cvt.rn.f64.s32	%fd1, %r8;
	cvt.rn.f64.s32	%fd2, %r1;
	add.f64 	%fd3, %fd2, %fd1;
	add.u64 	%rd26, %SPL, 16;
	ld.local.f64 	%fd4, [%rd26];
	sub.f64 	%fd5, %fd3, %fd4;
	add.u64 	%rd27, %SPL, 40;
	ld.local.f64 	%fd6, [%rd27];
	mul.f64 	%fd7, %fd6, 0d3FE0000000000000;
	sub.f64 	%fd8, %fd5, %fd7;
	setp.gt.f64	%p3, %fd8, 0d0000000000000000;
	ld.u64 	%rd28, [%rd1];
	ld.f64 	%fd9, [%rd28+80];
	div.rn.f64 	%fd10, %fd8, %fd9;
	selp.f64	%fd11, 0d3FE0000000000000, 0dBFE0000000000000, %p3;
	add.f64 	%fd12, %fd10, %fd11;
	cvt.rzi.s32.f64	%r9, %fd12;
	cvt.rn.f64.s32	%fd13, %r9;
	ld.f64 	%fd14, [%rd28+64];
	mul.f64 	%fd15, %fd13, %fd14;
	st.f64 	[%rd3], %fd15;
	mov.u32 	%r10, 0;
	st.param.b32	[func_retval0+0], %r10;
	ret;
}

	// .globl	_Z21lees_edw_plane_uy_nowP10lees_edw_sdPd
.visible .func  (.param .b32 func_retval0) _Z21lees_edw_plane_uy_nowP10lees_edw_sdPd(
	.param .b64 _Z21lees_edw_plane_uy_nowP10lees_edw_sdPd_param_0,
	.param .b64 _Z21lees_edw_plane_uy_nowP10lees_edw_sdPd_param_1,
	.param .b64 _Z21lees_edw_plane_uy_nowP10lees_edw_sdPd_param_2
)
{
	.local .align 4 .b8 	__local_depot8[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<19>;
	.reg .f64 	%fd<49>;
	.reg .b64 	%rd<30>;


	mov.u64 	%SPL, __local_depot8;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd7, [_Z21lees_edw_plane_uy_nowP10lees_edw_sdPd_param_0];
	ld.param.f64 	%fd15, [_Z21lees_edw_plane_uy_nowP10lees_edw_sdPd_param_1];
	ld.param.u64 	%rd8, [_Z21lees_edw_plane_uy_nowP10lees_edw_sdPd_param_2];
	add.u64 	%rd9, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	setp.ne.s64	%p1, %rd7, 0;
	@%p1 bra 	BB8_2;

	mov.u64 	%rd10, $str;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_8;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r5, 763;
	mov.u64 	%rd16, 1;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB8_2:
	add.s64 	%rd2, %rd7, 24;
	ld.u64 	%rd29, [%rd7+24];
	ld.f64 	%fd16, [%rd29+96];
	sub.f64 	%fd1, %fd15, %fd16;
	setp.ge.f64	%p2, %fd1, 0d0000000000000000;
	@%p2 bra 	BB8_4;

	mov.u64 	%rd17, $str3;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, $str1;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, __unnamed_8;
	cvta.global.u64 	%rd22, %rd21;
	mov.u32 	%r6, 766;
	mov.u64 	%rd23, 1;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd22;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd23;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18
	ld.u64 	%rd29, [%rd2];

BB8_4:
	ld.f64 	%fd17, [%rd29+64];
	st.f64 	[%rd8], %fd17;
	ld.u64 	%rd24, [%rd2];
	add.s64 	%rd6, %rd24, 44;
	ld.u32 	%r7, [%rd24+44];
	setp.ne.s32	%p3, %r7, 1;
	@%p3 bra 	BB8_15;

	ld.f64 	%fd18, [%rd6+44];
	mul.f64 	%fd45, %fd1, %fd18;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r8}, %fd45;
	}
	and.b32  	%r9, %r8, 2147483647;
	setp.ne.s32	%p4, %r9, 2146435072;
	@%p4 bra 	BB8_8;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r10, %temp}, %fd45;
	}
	setp.ne.s32	%p5, %r10, 0;
	@%p5 bra 	BB8_8;

	mov.f64 	%fd19, 0d0000000000000000;
	mul.rn.f64 	%fd45, %fd45, %fd19;

BB8_8:
	mul.f64 	%fd20, %fd45, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r18, %fd20;
	st.local.u32 	[%rd1], %r18;
	cvt.rn.f64.s32	%fd21, %r18;
	neg.f64 	%fd22, %fd21;
	mov.f64 	%fd23, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd24, %fd22, %fd23, %fd45;
	mov.f64 	%fd25, 0d3C91A62633145C00;
	fma.rn.f64 	%fd26, %fd22, %fd25, %fd24;
	mov.f64 	%fd27, 0d397B839A252049C0;
	fma.rn.f64 	%fd46, %fd22, %fd27, %fd26;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r11}, %fd45;
	}
	and.b32  	%r12, %r11, 2145386496;
	setp.lt.u32	%p6, %r12, 1105199104;
	@%p6 bra 	BB8_10;

	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd46, [retval0+0];
	
	//{
	}// Callseq End 19
	ld.local.u32 	%r18, [%rd1];

BB8_10:
	add.s32 	%r4, %r18, 1;
	and.b32  	%r13, %r4, 1;
	shl.b32 	%r14, %r13, 3;
	setp.eq.s32	%p7, %r13, 0;
	selp.f64	%fd28, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p7;
	add.s32 	%r15, %r14, 1;
	mul.wide.s32 	%rd26, %r15, 8;
	mov.u64 	%rd27, __cudart_sin_cos_coeffs;
	add.s64 	%rd28, %rd27, %rd26;
	ld.const.f64 	%fd29, [%rd28];
	mul.rn.f64 	%fd8, %fd46, %fd46;
	fma.rn.f64 	%fd30, %fd28, %fd8, %fd29;
	ld.const.f64 	%fd31, [%rd28+8];
	fma.rn.f64 	%fd32, %fd30, %fd8, %fd31;
	ld.const.f64 	%fd33, [%rd28+16];
	fma.rn.f64 	%fd34, %fd32, %fd8, %fd33;
	ld.const.f64 	%fd35, [%rd28+24];
	fma.rn.f64 	%fd36, %fd34, %fd8, %fd35;
	ld.const.f64 	%fd37, [%rd28+32];
	fma.rn.f64 	%fd38, %fd36, %fd8, %fd37;
	ld.const.f64 	%fd39, [%rd28+40];
	fma.rn.f64 	%fd9, %fd38, %fd8, %fd39;
	fma.rn.f64 	%fd47, %fd9, %fd46, %fd46;
	@%p7 bra 	BB8_12;

	mov.f64 	%fd40, 0d3FF0000000000000;
	fma.rn.f64 	%fd47, %fd9, %fd8, %fd40;

BB8_12:
	and.b32  	%r16, %r4, 2;
	setp.eq.s32	%p8, %r16, 0;
	@%p8 bra 	BB8_14;

	mov.f64 	%fd41, 0d0000000000000000;
	mov.f64 	%fd42, 0dBFF0000000000000;
	fma.rn.f64 	%fd47, %fd47, %fd42, %fd41;

BB8_14:
	ld.f64 	%fd43, [%rd8];
	mul.f64 	%fd44, %fd47, %fd43;
	st.f64 	[%rd8], %fd44;

BB8_15:
	mov.u32 	%r17, 0;
	st.param.b32	[func_retval0+0], %r17;
	ret;
}

	// .globl	_Z23lees_edw_plane_locationP10lees_edw_si
.visible .func  (.param .b32 func_retval0) _Z23lees_edw_plane_locationP10lees_edw_si(
	.param .b64 _Z23lees_edw_plane_locationP10lees_edw_si_param_0,
	.param .b32 _Z23lees_edw_plane_locationP10lees_edw_si_param_1
)
{
	.local .align 4 .b8 	__local_depot9[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<5>;
	.reg .b32 	%r<13>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<33>;


	mov.u64 	%SPL, __local_depot9;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z23lees_edw_plane_locationP10lees_edw_si_param_0];
	ld.param.u32 	%r1, [_Z23lees_edw_plane_locationP10lees_edw_si_param_1];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB9_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_9;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r2, 791;
	mov.u64 	%rd9, 1;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB9_2:
	add.s64 	%rd1, %rd2, 8;
	ld.u64 	%rd10, [%rd2+8];
	setp.ne.s64	%p2, %rd10, 0;
	@%p2 bra 	BB9_4;

	mov.u64 	%rd11, $str4;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_9;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r3, 792;
	mov.u64 	%rd17, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB9_4:
	setp.lt.s32	%p3, %r1, 0;
	@%p3 bra 	BB9_6;

	ld.u64 	%rd18, [%rd1+16];
	ld.u32 	%r4, [%rd18];
	setp.gt.s32	%p4, %r4, %r1;
	@%p4 bra 	BB9_7;

BB9_6:
	mov.u64 	%rd19, $str5;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, __unnamed_9;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r5, 793;
	mov.u64 	%rd25, 1;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd24;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd25;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22

BB9_7:
	ld.u64 	%rd26, [%rd1];
	add.u64 	%rd27, %SP, 12;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r6, [retval0+0];
	
	//{
	}// Callseq End 23
	ld.u64 	%rd28, [%rd1];
	add.u64 	%rd29, %SP, 0;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r7, [retval0+0];
	
	//{
	}// Callseq End 24
	ld.u64 	%rd30, [%rd1+16];
	ld.u32 	%r8, [%rd30];
	add.u64 	%rd31, %SPL, 12;
	ld.local.u32 	%r9, [%rd31];
	mad.lo.s32 	%r10, %r8, %r9, %r1;
	cvt.rn.f64.s32	%fd1, %r10;
	ld.f64 	%fd2, [%rd30+80];
	ld.f64 	%fd3, [%rd30+72];
	fma.rn.f64 	%fd4, %fd1, %fd2, %fd3;
	add.u64 	%rd32, %SPL, 0;
	ld.local.u32 	%r11, [%rd32];
	cvt.rn.f64.s32	%fd5, %r11;
	sub.f64 	%fd6, %fd4, %fd5;
	cvt.rzi.s32.f64	%r12, %fd6;
	st.param.b32	[func_retval0+0], %r12;
	ret;
}

	// .globl	_Z29lees_edw_index_real_to_bufferP10lees_edw_sii
.visible .func  (.param .b32 func_retval0) _Z29lees_edw_index_real_to_bufferP10lees_edw_sii(
	.param .b64 _Z29lees_edw_index_real_to_bufferP10lees_edw_sii_param_0,
	.param .b32 _Z29lees_edw_index_real_to_bufferP10lees_edw_sii_param_1,
	.param .b32 _Z29lees_edw_index_real_to_bufferP10lees_edw_sii_param_2
)
{
	.local .align 4 .b8 	__local_depot10[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<35>;
	.reg .b32 	%r<86>;
	.reg .f64 	%fd<13>;
	.reg .b64 	%rd<138>;


	mov.u64 	%SPL, __local_depot10;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd16, [_Z29lees_edw_index_real_to_bufferP10lees_edw_sii_param_0];
	ld.param.u32 	%r85, [_Z29lees_edw_index_real_to_bufferP10lees_edw_sii_param_1];
	ld.param.u32 	%r19, [_Z29lees_edw_index_real_to_bufferP10lees_edw_sii_param_2];
	setp.ne.s64	%p1, %rd16, 0;
	@%p1 bra 	BB10_2;

	mov.u64 	%rd17, $str;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, $str1;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, __unnamed_10;
	cvta.global.u64 	%rd22, %rd21;
	mov.u32 	%r20, 818;
	mov.u64 	%rd23, 1;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd22;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd23;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 25

BB10_2:
	add.s64 	%rd1, %rd16, 48;
	ld.u64 	%rd24, [%rd16+48];
	setp.ne.s64	%p2, %rd24, 0;
	@%p2 bra 	BB10_4;

	mov.u64 	%rd25, $str6;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, $str1;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, __unnamed_10;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r21, 819;
	mov.u64 	%rd31, 1;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 param2;
	st.param.b32	[param2+0], %r21;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd30;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd31;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 26

BB10_4:
	ld.u64 	%rd135, [%rd1+-24];
	ld.u32 	%r83, [%rd135+12];
	neg.s32 	%r22, %r83;
	setp.ge.s32	%p3, %r19, %r22;
	setp.ge.s32	%p4, %r83, %r19;
	and.pred  	%p5, %p3, %p4;
	@%p5 bra 	BB10_6;

	mov.u64 	%rd32, $str7;
	cvta.global.u64 	%rd33, %rd32;
	mov.u64 	%rd34, $str1;
	cvta.global.u64 	%rd35, %rd34;
	mov.u64 	%rd36, __unnamed_10;
	cvta.global.u64 	%rd37, %rd36;
	mov.u32 	%r23, 821;
	mov.u64 	%rd38, 1;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r23;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd37;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd38;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 27
	ld.u64 	%rd135, [%rd1+-24];
	ld.u32 	%r83, [%rd135+12];

BB10_6:
	add.s32 	%r24, %r85, %r83;
	add.s32 	%r25, %r24, -1;
	shl.b32 	%r26, %r83, 1;
	add.s32 	%r27, %r26, 1;
	add.s32 	%r28, %r83, %r19;
	mad.lo.s32 	%r4, %r27, %r25, %r28;
	setp.lt.s32	%p6, %r4, 0;
	@%p6 bra 	BB10_8;

	ld.u32 	%r29, [%rd135+8];
	setp.lt.s32	%p7, %r4, %r29;
	@%p7 bra 	BB10_9;

BB10_8:
	mov.u64 	%rd39, $str8;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, $str1;
	cvta.global.u64 	%rd42, %rd41;
	mov.u64 	%rd43, __unnamed_10;
	cvta.global.u64 	%rd44, %rd43;
	mov.u32 	%r30, 825;
	mov.u64 	%rd45, 1;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r30;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd44;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd45;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 28

BB10_9:
	cvt.s64.s32	%rd5, %r4;
	ld.u64 	%rd46, [%rd1];
	mul.wide.s32 	%rd47, %r4, 4;
	add.s64 	%rd48, %rd46, %rd47;
	ld.u32 	%r5, [%rd48];
	@%p1 bra 	BB10_11;

	mov.u64 	%rd49, $str;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, $str1;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, __unnamed_26;
	cvta.global.u64 	%rd54, %rd53;
	mov.u32 	%r31, 1252;
	mov.u64 	%rd55, 1;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd52;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd54;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd55;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 29

BB10_11:
	ld.u64 	%rd137, [%rd1+-24];
	ld.u32 	%r84, [%rd137+12];
	setp.ge.s32	%p9, %r84, %r19;
	@%p9 bra 	BB10_13;

	mov.u64 	%rd56, $str23;
	cvta.global.u64 	%rd57, %rd56;
	mov.u64 	%rd58, $str1;
	cvta.global.u64 	%rd59, %rd58;
	mov.u64 	%rd60, __unnamed_26;
	cvta.global.u64 	%rd61, %rd60;
	mov.u32 	%r32, 1253;
	mov.u64 	%rd62, 1;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd57;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd59;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd61;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd62;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 30
	ld.u64 	%rd137, [%rd1+-24];
	ld.u32 	%r84, [%rd137+12];

BB10_13:
	neg.s32 	%r33, %r84;
	setp.ge.s32	%p10, %r19, %r33;
	@%p10 bra 	BB10_15;

	mov.u64 	%rd63, $str24;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str1;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, __unnamed_26;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r34, 1254;
	mov.u64 	%rd69, 1;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd68;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd69;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 31
	ld.u64 	%rd137, [%rd1+-24];

BB10_15:
	ld.u32 	%r9, [%rd137];
	setp.lt.s32	%p11, %r9, 1;
	@%p11 bra 	BB10_34;

	ld.u32 	%r35, [%rd137+28];
	div.s32 	%r36, %r35, %r9;
	div.s32 	%r37, %r85, %r36;
	add.s32 	%r38, %r9, -1;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r37;
	.param .b32 param1;
	st.param.b32	[param1+0], %r38;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z4iminii, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r39, [retval0+0];
	
	//{
	}// Callseq End 32
	mov.u32 	%r40, 0;
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r40;
	.param .b32 param1;
	st.param.b32	[param1+0], %r39;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z4imaxii, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 33
	ld.u64 	%rd70, [%rd1+-24];
	ld.u32 	%r11, [%rd70+12];
	@%p1 bra 	BB10_18;

	mov.u64 	%rd71, $str;
	cvta.global.u64 	%rd72, %rd71;
	mov.u64 	%rd73, $str1;
	cvta.global.u64 	%rd74, %rd73;
	mov.u64 	%rd75, __unnamed_9;
	cvta.global.u64 	%rd76, %rd75;
	mov.u32 	%r41, 791;
	mov.u64 	%rd77, 1;
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd72;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd74;
	.param .b32 param2;
	st.param.b32	[param2+0], %r41;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd76;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd77;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 34

BB10_18:
	ld.u64 	%rd78, [%rd1+-40];
	setp.ne.s64	%p13, %rd78, 0;
	@%p13 bra 	BB10_20;

	mov.u64 	%rd79, $str4;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, $str1;
	cvta.global.u64 	%rd82, %rd81;
	mov.u64 	%rd83, __unnamed_9;
	cvta.global.u64 	%rd84, %rd83;
	mov.u32 	%r42, 792;
	mov.u64 	%rd85, 1;
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd80;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd82;
	.param .b32 param2;
	st.param.b32	[param2+0], %r42;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd84;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd85;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 35

BB10_20:
	setp.lt.s32	%p14, %r10, 0;
	@%p14 bra 	BB10_22;

	ld.u64 	%rd86, [%rd1+-24];
	ld.u32 	%r43, [%rd86];
	setp.gt.s32	%p15, %r43, %r10;
	@%p15 bra 	BB10_23;

BB10_22:
	mov.u64 	%rd87, $str5;
	cvta.global.u64 	%rd88, %rd87;
	mov.u64 	%rd89, $str1;
	cvta.global.u64 	%rd90, %rd89;
	mov.u64 	%rd91, __unnamed_9;
	cvta.global.u64 	%rd92, %rd91;
	mov.u32 	%r44, 793;
	mov.u64 	%rd93, 1;
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd88;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd90;
	.param .b32 param2;
	st.param.b32	[param2+0], %r44;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd92;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd93;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 36

BB10_23:
	ld.u64 	%rd94, [%rd1+-40];
	add.u64 	%rd95, %SP, 12;
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd94;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd95;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r45, [retval0+0];
	
	//{
	}// Callseq End 37
	ld.u64 	%rd96, [%rd1+-40];
	add.u64 	%rd97, %SP, 0;
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd96;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd97;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r46, [retval0+0];
	
	//{
	}// Callseq End 38
	ld.u64 	%rd12, [%rd1+-24];
	ld.u32 	%r47, [%rd12];
	add.u64 	%rd13, %SPL, 12;
	ld.local.u32 	%r48, [%rd13];
	mad.lo.s32 	%r49, %r47, %r48, %r10;
	cvt.rn.f64.s32	%fd1, %r49;
	ld.f64 	%fd2, [%rd12+80];
	ld.f64 	%fd3, [%rd12+72];
	fma.rn.f64 	%fd4, %fd1, %fd2, %fd3;
	add.u64 	%rd14, %SPL, 0;
	ld.local.u32 	%r50, [%rd14];
	cvt.rn.f64.s32	%fd5, %r50;
	sub.f64 	%fd6, %fd4, %fd5;
	cvt.rzi.s32.f64	%r51, %fd6;
	mov.u32 	%r52, 1;
	sub.s32 	%r53, %r52, %r11;
	add.s32 	%r12, %r53, %r51;
	add.s32 	%r54, %r51, 1;
	setp.gt.s32	%p16, %r54, %r85;
	setp.le.s32	%p17, %r12, %r85;
	and.pred  	%p18, %p16, %p17;
	setp.gt.s32	%p19, %r19, 0;
	and.pred  	%p20, %p19, %p18;
	add.s32 	%r13, %r19, %r85;
	setp.ge.s32	%p21, %r13, %r54;
	and.pred  	%p22, %p20, %p21;
	@%p22 bra 	BB10_33;
	bra.uni 	BB10_24;

BB10_33:
	shl.b32 	%r74, %r10, 1;
	add.s32 	%r75, %r74, 1;
	mad.lo.s32 	%r76, %r75, %r11, %r85;
	add.s32 	%r77, %r76, 1;
	sub.s32 	%r78, %r77, %r12;
	ld.u32 	%r79, [%rd12+28];
	add.s32 	%r85, %r78, %r79;
	bra.uni 	BB10_34;

BB10_24:
	@%p1 bra 	BB10_26;

	mov.u64 	%rd98, $str;
	cvta.global.u64 	%rd99, %rd98;
	mov.u64 	%rd100, $str1;
	cvta.global.u64 	%rd101, %rd100;
	mov.u64 	%rd102, __unnamed_9;
	cvta.global.u64 	%rd103, %rd102;
	mov.u32 	%r55, 791;
	mov.u64 	%rd104, 1;
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd99;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd101;
	.param .b32 param2;
	st.param.b32	[param2+0], %r55;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd103;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd104;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 39

BB10_26:
	ld.u64 	%rd105, [%rd1+-40];
	setp.ne.s64	%p24, %rd105, 0;
	@%p24 bra 	BB10_28;

	mov.u64 	%rd106, $str4;
	cvta.global.u64 	%rd107, %rd106;
	mov.u64 	%rd108, $str1;
	cvta.global.u64 	%rd109, %rd108;
	mov.u64 	%rd110, __unnamed_9;
	cvta.global.u64 	%rd111, %rd110;
	mov.u32 	%r56, 792;
	mov.u64 	%rd112, 1;
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd107;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd109;
	.param .b32 param2;
	st.param.b32	[param2+0], %r56;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd111;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd112;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 40

BB10_28:
	@%p14 bra 	BB10_30;

	ld.u64 	%rd113, [%rd1+-24];
	ld.u32 	%r57, [%rd113];
	setp.gt.s32	%p26, %r57, %r10;
	@%p26 bra 	BB10_31;

BB10_30:
	mov.u64 	%rd114, $str5;
	cvta.global.u64 	%rd115, %rd114;
	mov.u64 	%rd116, $str1;
	cvta.global.u64 	%rd117, %rd116;
	mov.u64 	%rd118, __unnamed_9;
	cvta.global.u64 	%rd119, %rd118;
	mov.u32 	%r58, 793;
	mov.u64 	%rd120, 1;
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd115;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd117;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd119;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd120;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 41

BB10_31:
	ld.u64 	%rd121, [%rd1+-40];
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd121;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd95;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r59, [retval0+0];
	
	//{
	}// Callseq End 42
	ld.u64 	%rd123, [%rd1+-40];
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd123;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd97;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r60, [retval0+0];
	
	//{
	}// Callseq End 43
	ld.u64 	%rd15, [%rd1+-24];
	ld.u32 	%r61, [%rd15];
	ld.local.u32 	%r62, [%rd13];
	mad.lo.s32 	%r63, %r61, %r62, %r10;
	cvt.rn.f64.s32	%fd7, %r63;
	ld.f64 	%fd8, [%rd15+80];
	ld.f64 	%fd9, [%rd15+72];
	fma.rn.f64 	%fd10, %fd7, %fd8, %fd9;
	ld.local.u32 	%r64, [%rd14];
	cvt.rn.f64.s32	%fd11, %r64;
	sub.f64 	%fd12, %fd10, %fd11;
	cvt.rzi.s32.f64	%r14, %fd12;
	add.s32 	%r65, %r14, 1;
	setp.ge.s32	%p27, %r14, %r85;
	add.s32 	%r66, %r65, %r11;
	setp.le.s32	%p28, %r66, %r85;
	or.pred  	%p29, %p27, %p28;
	setp.gt.s32	%p30, %r19, -1;
	or.pred  	%p31, %p30, %p29;
	setp.ge.s32	%p32, %r13, %r65;
	or.pred  	%p33, %p31, %p32;
	@%p33 bra 	BB10_34;

	shl.b32 	%r67, %r10, 1;
	add.s32 	%r68, %r67, 2;
	mad.lo.s32 	%r69, %r68, %r11, %r85;
	not.b32 	%r70, %r14;
	add.s32 	%r71, %r69, %r70;
	ld.u32 	%r72, [%rd15+28];
	add.s32 	%r73, %r71, %r72;
	add.s32 	%r85, %r73, 1;

BB10_34:
	add.s32 	%r80, %r85, %r19;
	setp.eq.s32	%p34, %r5, %r80;
	@%p34 bra 	BB10_36;

	mov.u64 	%rd125, $str9;
	cvta.global.u64 	%rd126, %rd125;
	mov.u64 	%rd127, $str1;
	cvta.global.u64 	%rd128, %rd127;
	mov.u64 	%rd129, __unnamed_10;
	cvta.global.u64 	%rd130, %rd129;
	mov.u32 	%r81, 827;
	mov.u64 	%rd131, 1;
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd126;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd128;
	.param .b32 param2;
	st.param.b32	[param2+0], %r81;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd130;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd131;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 44

BB10_36:
	ld.u64 	%rd132, [%rd1];
	shl.b64 	%rd133, %rd5, 2;
	add.s64 	%rd134, %rd132, %rd133;
	ld.u32 	%r82, [%rd134];
	st.param.b32	[func_retval0+0], %r82;
	ret;
}

	// .globl	_Z19lees_edw_ic_to_buffP10lees_edw_sii
.visible .func  (.param .b32 func_retval0) _Z19lees_edw_ic_to_buffP10lees_edw_sii(
	.param .b64 _Z19lees_edw_ic_to_buffP10lees_edw_sii_param_0,
	.param .b32 _Z19lees_edw_ic_to_buffP10lees_edw_sii_param_1,
	.param .b32 _Z19lees_edw_ic_to_buffP10lees_edw_sii_param_2
)
{
	.local .align 4 .b8 	__local_depot11[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<27>;
	.reg .b32 	%r<67>;
	.reg .f64 	%fd<13>;
	.reg .b64 	%rd<91>;


	mov.u64 	%SPL, __local_depot11;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd12, [_Z19lees_edw_ic_to_buffP10lees_edw_sii_param_0];
	ld.param.u32 	%r66, [_Z19lees_edw_ic_to_buffP10lees_edw_sii_param_1];
	ld.param.u32 	%r14, [_Z19lees_edw_ic_to_buffP10lees_edw_sii_param_2];
	setp.ne.s64	%p1, %rd12, 0;
	@%p1 bra 	BB11_2;

	mov.u64 	%rd13, $str;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, __unnamed_26;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r15, 1252;
	mov.u64 	%rd19, 1;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd18;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd19;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 45

BB11_2:
	add.s64 	%rd1, %rd12, 24;
	ld.u64 	%rd90, [%rd12+24];
	ld.u32 	%r65, [%rd90+12];
	setp.ge.s32	%p2, %r65, %r14;
	@%p2 bra 	BB11_4;

	mov.u64 	%rd20, $str23;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, $str1;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, __unnamed_26;
	cvta.global.u64 	%rd25, %rd24;
	mov.u32 	%r16, 1253;
	mov.u64 	%rd26, 1;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 46
	ld.u64 	%rd90, [%rd1];
	ld.u32 	%r65, [%rd90+12];

BB11_4:
	neg.s32 	%r17, %r65;
	setp.ge.s32	%p3, %r14, %r17;
	@%p3 bra 	BB11_6;

	mov.u64 	%rd27, $str24;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, $str1;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, __unnamed_26;
	cvta.global.u64 	%rd32, %rd31;
	mov.u32 	%r18, 1254;
	mov.u64 	%rd33, 1;
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd30;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd32;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd33;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 47
	ld.u64 	%rd90, [%rd1];

BB11_6:
	ld.u32 	%r4, [%rd90];
	setp.lt.s32	%p4, %r4, 1;
	@%p4 bra 	BB11_25;

	ld.u32 	%r19, [%rd90+28];
	div.s32 	%r20, %r19, %r4;
	div.s32 	%r21, %r66, %r20;
	add.s32 	%r22, %r4, -1;
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r21;
	.param .b32 param1;
	st.param.b32	[param1+0], %r22;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z4iminii, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 48
	mov.u32 	%r24, 0;
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r24;
	.param .b32 param1;
	st.param.b32	[param1+0], %r23;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z4imaxii, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 49
	ld.u64 	%rd34, [%rd1];
	ld.u32 	%r6, [%rd34+12];
	@%p1 bra 	BB11_9;

	mov.u64 	%rd35, $str;
	cvta.global.u64 	%rd36, %rd35;
	mov.u64 	%rd37, $str1;
	cvta.global.u64 	%rd38, %rd37;
	mov.u64 	%rd39, __unnamed_9;
	cvta.global.u64 	%rd40, %rd39;
	mov.u32 	%r25, 791;
	mov.u64 	%rd41, 1;
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd36;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd38;
	.param .b32 param2;
	st.param.b32	[param2+0], %r25;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd40;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd41;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 50

BB11_9:
	ld.u64 	%rd42, [%rd1+-16];
	setp.ne.s64	%p6, %rd42, 0;
	@%p6 bra 	BB11_11;

	mov.u64 	%rd43, $str4;
	cvta.global.u64 	%rd44, %rd43;
	mov.u64 	%rd45, $str1;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, __unnamed_9;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r26, 792;
	mov.u64 	%rd49, 1;
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd44;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd46;
	.param .b32 param2;
	st.param.b32	[param2+0], %r26;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd48;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd49;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 51

BB11_11:
	setp.lt.s32	%p7, %r5, 0;
	@%p7 bra 	BB11_13;

	ld.u64 	%rd50, [%rd1];
	ld.u32 	%r27, [%rd50];
	setp.gt.s32	%p8, %r27, %r5;
	@%p8 bra 	BB11_14;

BB11_13:
	mov.u64 	%rd51, $str5;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, $str1;
	cvta.global.u64 	%rd54, %rd53;
	mov.u64 	%rd55, __unnamed_9;
	cvta.global.u64 	%rd56, %rd55;
	mov.u32 	%r28, 793;
	mov.u64 	%rd57, 1;
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd52;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd54;
	.param .b32 param2;
	st.param.b32	[param2+0], %r28;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd56;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd57;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 52

BB11_14:
	ld.u64 	%rd58, [%rd1+-16];
	add.u64 	%rd59, %SP, 12;
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd58;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd59;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r29, [retval0+0];
	
	//{
	}// Callseq End 53
	ld.u64 	%rd60, [%rd1+-16];
	add.u64 	%rd61, %SP, 0;
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd60;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd61;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r30, [retval0+0];
	
	//{
	}// Callseq End 54
	ld.u64 	%rd8, [%rd1];
	ld.u32 	%r31, [%rd8];
	add.u64 	%rd9, %SPL, 12;
	ld.local.u32 	%r32, [%rd9];
	mad.lo.s32 	%r33, %r31, %r32, %r5;
	cvt.rn.f64.s32	%fd1, %r33;
	ld.f64 	%fd2, [%rd8+80];
	ld.f64 	%fd3, [%rd8+72];
	fma.rn.f64 	%fd4, %fd1, %fd2, %fd3;
	add.u64 	%rd10, %SPL, 0;
	ld.local.u32 	%r34, [%rd10];
	cvt.rn.f64.s32	%fd5, %r34;
	sub.f64 	%fd6, %fd4, %fd5;
	cvt.rzi.s32.f64	%r35, %fd6;
	mov.u32 	%r36, 1;
	sub.s32 	%r37, %r36, %r6;
	add.s32 	%r7, %r37, %r35;
	add.s32 	%r38, %r35, 1;
	setp.gt.s32	%p9, %r38, %r66;
	setp.le.s32	%p10, %r7, %r66;
	and.pred  	%p11, %p9, %p10;
	setp.gt.s32	%p12, %r14, 0;
	and.pred  	%p13, %p12, %p11;
	add.s32 	%r8, %r14, %r66;
	setp.ge.s32	%p14, %r8, %r38;
	and.pred  	%p15, %p13, %p14;
	@%p15 bra 	BB11_24;
	bra.uni 	BB11_15;

BB11_24:
	shl.b32 	%r58, %r5, 1;
	add.s32 	%r59, %r58, 1;
	mad.lo.s32 	%r60, %r59, %r6, %r66;
	add.s32 	%r61, %r60, 1;
	sub.s32 	%r62, %r61, %r7;
	ld.u32 	%r63, [%rd8+28];
	add.s32 	%r66, %r62, %r63;
	bra.uni 	BB11_25;

BB11_15:
	@%p1 bra 	BB11_17;

	mov.u64 	%rd62, $str;
	cvta.global.u64 	%rd63, %rd62;
	mov.u64 	%rd64, $str1;
	cvta.global.u64 	%rd65, %rd64;
	mov.u64 	%rd66, __unnamed_9;
	cvta.global.u64 	%rd67, %rd66;
	mov.u32 	%r39, 791;
	mov.u64 	%rd68, 1;
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd63;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd65;
	.param .b32 param2;
	st.param.b32	[param2+0], %r39;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd67;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd68;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 55

BB11_17:
	ld.u64 	%rd69, [%rd1+-16];
	setp.ne.s64	%p17, %rd69, 0;
	@%p17 bra 	BB11_19;

	mov.u64 	%rd70, $str4;
	cvta.global.u64 	%rd71, %rd70;
	mov.u64 	%rd72, $str1;
	cvta.global.u64 	%rd73, %rd72;
	mov.u64 	%rd74, __unnamed_9;
	cvta.global.u64 	%rd75, %rd74;
	mov.u32 	%r40, 792;
	mov.u64 	%rd76, 1;
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd71;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd73;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd75;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd76;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 56

BB11_19:
	@%p7 bra 	BB11_21;

	ld.u64 	%rd77, [%rd1];
	ld.u32 	%r41, [%rd77];
	setp.gt.s32	%p19, %r41, %r5;
	@%p19 bra 	BB11_22;

BB11_21:
	mov.u64 	%rd78, $str5;
	cvta.global.u64 	%rd79, %rd78;
	mov.u64 	%rd80, $str1;
	cvta.global.u64 	%rd81, %rd80;
	mov.u64 	%rd82, __unnamed_9;
	cvta.global.u64 	%rd83, %rd82;
	mov.u32 	%r42, 793;
	mov.u64 	%rd84, 1;
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd79;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd81;
	.param .b32 param2;
	st.param.b32	[param2+0], %r42;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd83;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd84;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 57

BB11_22:
	ld.u64 	%rd85, [%rd1+-16];
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd59;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r43, [retval0+0];
	
	//{
	}// Callseq End 58
	ld.u64 	%rd87, [%rd1+-16];
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd87;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd61;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r44, [retval0+0];
	
	//{
	}// Callseq End 59
	ld.u64 	%rd11, [%rd1];
	ld.u32 	%r45, [%rd11];
	ld.local.u32 	%r46, [%rd9];
	mad.lo.s32 	%r47, %r45, %r46, %r5;
	cvt.rn.f64.s32	%fd7, %r47;
	ld.f64 	%fd8, [%rd11+80];
	ld.f64 	%fd9, [%rd11+72];
	fma.rn.f64 	%fd10, %fd7, %fd8, %fd9;
	ld.local.u32 	%r48, [%rd10];
	cvt.rn.f64.s32	%fd11, %r48;
	sub.f64 	%fd12, %fd10, %fd11;
	cvt.rzi.s32.f64	%r9, %fd12;
	add.s32 	%r49, %r9, 1;
	setp.ge.s32	%p20, %r9, %r66;
	add.s32 	%r50, %r49, %r6;
	setp.le.s32	%p21, %r50, %r66;
	or.pred  	%p22, %p20, %p21;
	setp.gt.s32	%p23, %r14, -1;
	or.pred  	%p24, %p23, %p22;
	setp.ge.s32	%p25, %r8, %r49;
	or.pred  	%p26, %p24, %p25;
	@%p26 bra 	BB11_25;

	shl.b32 	%r51, %r5, 1;
	add.s32 	%r52, %r51, 2;
	mad.lo.s32 	%r53, %r52, %r6, %r66;
	not.b32 	%r54, %r9;
	add.s32 	%r55, %r53, %r54;
	ld.u32 	%r56, [%rd11+28];
	add.s32 	%r57, %r55, %r56;
	add.s32 	%r66, %r57, 1;

BB11_25:
	add.s32 	%r64, %r66, %r14;
	st.param.b32	[func_retval0+0], %r64;
	ret;
}

	// .globl	_Z29lees_edw_index_buffer_to_realP10lees_edw_si
.visible .func  (.param .b32 func_retval0) _Z29lees_edw_index_buffer_to_realP10lees_edw_si(
	.param .b64 _Z29lees_edw_index_buffer_to_realP10lees_edw_si_param_0,
	.param .b32 _Z29lees_edw_index_buffer_to_realP10lees_edw_si_param_1
)
{
	.local .align 4 .b8 	__local_depot12[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<13>;
	.reg .b32 	%r<32>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<88>;


	mov.u64 	%SPL, __local_depot12;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd6, [_Z29lees_edw_index_buffer_to_realP10lees_edw_si_param_0];
	ld.param.u32 	%r3, [_Z29lees_edw_index_buffer_to_realP10lees_edw_si_param_1];
	setp.ne.s64	%p1, %rd6, 0;
	@%p1 bra 	BB12_2;

	mov.u64 	%rd7, $str;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str1;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, __unnamed_11;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r4, 843;
	mov.u64 	%rd13, 1;
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd12;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd13;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 60

BB12_2:
	add.s64 	%rd1, %rd6, 40;
	ld.u64 	%rd14, [%rd6+40];
	setp.ne.s64	%p2, %rd14, 0;
	@%p2 bra 	BB12_4;

	mov.u64 	%rd15, $str10;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, __unnamed_11;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r5, 844;
	mov.u64 	%rd21, 1;
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 61

BB12_4:
	setp.lt.s32	%p3, %r3, 0;
	@%p3 bra 	BB12_6;

	ld.u64 	%rd22, [%rd1+-16];
	ld.u32 	%r6, [%rd22+4];
	setp.gt.s32	%p4, %r6, %r3;
	@%p4 bra 	BB12_7;

BB12_6:
	mov.u64 	%rd23, $str11;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, $str1;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, __unnamed_11;
	cvta.global.u64 	%rd28, %rd27;
	mov.u32 	%r7, 845;
	mov.u64 	%rd29, 1;
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd26;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd28;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd29;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 62

BB12_7:
	cvt.s64.s32	%rd2, %r3;
	ld.u64 	%rd30, [%rd1];
	mul.wide.s32 	%rd31, %r3, 4;
	add.s64 	%rd32, %rd30, %rd31;
	ld.u32 	%r1, [%rd32];
	@%p1 bra 	BB12_9;

	mov.u64 	%rd33, $str;
	cvta.global.u64 	%rd34, %rd33;
	mov.u64 	%rd35, $str1;
	cvta.global.u64 	%rd36, %rd35;
	mov.u64 	%rd37, __unnamed_25;
	cvta.global.u64 	%rd38, %rd37;
	mov.u32 	%r8, 1228;
	mov.u64 	%rd39, 1;
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd36;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd38;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd39;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 63

BB12_9:
	@%p3 bra 	BB12_11;

	ld.u64 	%rd87, [%rd1+-16];
	ld.u32 	%r9, [%rd87+4];
	setp.gt.s32	%p7, %r9, %r3;
	@%p7 bra 	BB12_12;

BB12_11:
	mov.u64 	%rd40, $str13;
	cvta.global.u64 	%rd41, %rd40;
	mov.u64 	%rd42, $str1;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, __unnamed_25;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r10, 1229;
	mov.u64 	%rd46, 1;
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd41;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd43;
	.param .b32 param2;
	st.param.b32	[param2+0], %r10;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd45;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd46;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 64
	ld.u64 	%rd87, [%rd1+-16];

BB12_12:
	ld.u32 	%r11, [%rd87+12];
	shl.b32 	%r12, %r11, 1;
	div.s32 	%r2, %r3, %r12;
	@%p1 bra 	BB12_14;

	mov.u64 	%rd47, $str;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, $str1;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, __unnamed_9;
	cvta.global.u64 	%rd52, %rd51;
	mov.u32 	%r13, 791;
	mov.u64 	%rd53, 1;
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r13;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 65

BB12_14:
	ld.u64 	%rd54, [%rd1+-32];
	setp.ne.s64	%p9, %rd54, 0;
	@%p9 bra 	BB12_16;

	mov.u64 	%rd55, $str4;
	cvta.global.u64 	%rd56, %rd55;
	mov.u64 	%rd57, $str1;
	cvta.global.u64 	%rd58, %rd57;
	mov.u64 	%rd59, __unnamed_9;
	cvta.global.u64 	%rd60, %rd59;
	mov.u32 	%r14, 792;
	mov.u64 	%rd61, 1;
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd56;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd60;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd61;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 66

BB12_16:
	setp.lt.s32	%p10, %r2, 0;
	@%p10 bra 	BB12_18;

	ld.u64 	%rd62, [%rd1+-16];
	ld.u32 	%r15, [%rd62];
	setp.gt.s32	%p11, %r15, %r2;
	@%p11 bra 	BB12_19;

BB12_18:
	mov.u64 	%rd63, $str5;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, $str1;
	cvta.global.u64 	%rd66, %rd65;
	mov.u64 	%rd67, __unnamed_9;
	cvta.global.u64 	%rd68, %rd67;
	mov.u32 	%r16, 793;
	mov.u64 	%rd69, 1;
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd64;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd66;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd68;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd69;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 67

BB12_19:
	ld.u64 	%rd70, [%rd1+-32];
	add.u64 	%rd71, %SP, 12;
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd70;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd71;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 68
	ld.u64 	%rd72, [%rd1+-32];
	add.u64 	%rd73, %SP, 0;
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd72;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd73;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 69
	ld.u64 	%rd74, [%rd1+-16];
	ld.u32 	%r19, [%rd74];
	add.u64 	%rd75, %SPL, 12;
	ld.local.u32 	%r20, [%rd75];
	mad.lo.s32 	%r21, %r19, %r20, %r2;
	cvt.rn.f64.s32	%fd1, %r21;
	ld.f64 	%fd2, [%rd74+80];
	ld.f64 	%fd3, [%rd74+72];
	fma.rn.f64 	%fd4, %fd1, %fd2, %fd3;
	add.u64 	%rd76, %SPL, 0;
	ld.local.u32 	%r22, [%rd76];
	cvt.rn.f64.s32	%fd5, %r22;
	sub.f64 	%fd6, %fd4, %fd5;
	cvt.rzi.s32.f64	%r23, %fd6;
	ld.u32 	%r24, [%rd74+12];
	shl.b32 	%r25, %r24, 1;
	rem.s32 	%r26, %r3, %r25;
	add.s32 	%r27, %r23, 1;
	sub.s32 	%r28, %r27, %r24;
	add.s32 	%r29, %r28, %r26;
	setp.eq.s32	%p12, %r1, %r29;
	@%p12 bra 	BB12_21;

	mov.u64 	%rd77, $str12;
	cvta.global.u64 	%rd78, %rd77;
	mov.u64 	%rd79, $str1;
	cvta.global.u64 	%rd80, %rd79;
	mov.u64 	%rd81, __unnamed_11;
	cvta.global.u64 	%rd82, %rd81;
	mov.u32 	%r30, 847;
	mov.u64 	%rd83, 1;
	// Callseq Start 70
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd78;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd80;
	.param .b32 param2;
	st.param.b32	[param2+0], %r30;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd82;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd83;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 70

BB12_21:
	ld.u64 	%rd84, [%rd1];
	shl.b64 	%rd85, %rd2, 2;
	add.s64 	%rd86, %rd84, %rd85;
	ld.u32 	%r31, [%rd86];
	st.param.b32	[func_retval0+0], %r31;
	ret;
}

	// .globl	_Z22lees_edw_ibuff_to_realP10lees_edw_si
.visible .func  (.param .b32 func_retval0) _Z22lees_edw_ibuff_to_realP10lees_edw_si(
	.param .b64 _Z22lees_edw_ibuff_to_realP10lees_edw_si_param_0,
	.param .b32 _Z22lees_edw_ibuff_to_realP10lees_edw_si_param_1
)
{
	.local .align 4 .b8 	__local_depot13[24];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<8>;
	.reg .b32 	%r<25>;
	.reg .f64 	%fd<7>;
	.reg .b64 	%rd<51>;


	mov.u64 	%SPL, __local_depot13;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd5, [_Z22lees_edw_ibuff_to_realP10lees_edw_si_param_0];
	ld.param.u32 	%r2, [_Z22lees_edw_ibuff_to_realP10lees_edw_si_param_1];
	setp.ne.s64	%p1, %rd5, 0;
	@%p1 bra 	BB13_2;

	mov.u64 	%rd6, $str;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, __unnamed_25;
	cvta.global.u64 	%rd11, %rd10;
	mov.u32 	%r3, 1228;
	mov.u64 	%rd12, 1;
	// Callseq Start 71
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 71

BB13_2:
	add.s64 	%rd1, %rd5, 24;
	setp.lt.s32	%p2, %r2, 0;
	@%p2 bra 	BB13_4;

	ld.u64 	%rd50, [%rd1];
	ld.u32 	%r4, [%rd50+4];
	setp.gt.s32	%p3, %r4, %r2;
	@%p3 bra 	BB13_5;

BB13_4:
	mov.u64 	%rd13, $str13;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, __unnamed_25;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r5, 1229;
	mov.u64 	%rd19, 1;
	// Callseq Start 72
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd18;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd19;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 72
	ld.u64 	%rd50, [%rd1];

BB13_5:
	ld.u32 	%r6, [%rd50+12];
	shl.b32 	%r7, %r6, 1;
	div.s32 	%r1, %r2, %r7;
	@%p1 bra 	BB13_7;

	mov.u64 	%rd20, $str;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, $str1;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, __unnamed_9;
	cvta.global.u64 	%rd25, %rd24;
	mov.u32 	%r8, 791;
	mov.u64 	%rd26, 1;
	// Callseq Start 73
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 73

BB13_7:
	ld.u64 	%rd27, [%rd1+-16];
	setp.ne.s64	%p5, %rd27, 0;
	@%p5 bra 	BB13_9;

	mov.u64 	%rd28, $str4;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str1;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, __unnamed_9;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r9, 792;
	mov.u64 	%rd34, 1;
	// Callseq Start 74
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r9;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd33;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd34;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 74

BB13_9:
	setp.lt.s32	%p6, %r1, 0;
	@%p6 bra 	BB13_11;

	ld.u64 	%rd35, [%rd1];
	ld.u32 	%r10, [%rd35];
	setp.gt.s32	%p7, %r10, %r1;
	@%p7 bra 	BB13_12;

BB13_11:
	mov.u64 	%rd36, $str5;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str1;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, __unnamed_9;
	cvta.global.u64 	%rd41, %rd40;
	mov.u32 	%r11, 793;
	mov.u64 	%rd42, 1;
	// Callseq Start 75
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd41;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd42;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 75

BB13_12:
	ld.u64 	%rd43, [%rd1+-16];
	add.u64 	%rd44, %SP, 12;
	// Callseq Start 76
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd44;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r12, [retval0+0];
	
	//{
	}// Callseq End 76
	ld.u64 	%rd45, [%rd1+-16];
	add.u64 	%rd46, %SP, 0;
	// Callseq Start 77
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd46;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 77
	ld.u64 	%rd47, [%rd1];
	ld.u32 	%r14, [%rd47];
	add.u64 	%rd48, %SPL, 12;
	ld.local.u32 	%r15, [%rd48];
	mad.lo.s32 	%r16, %r14, %r15, %r1;
	cvt.rn.f64.s32	%fd1, %r16;
	ld.f64 	%fd2, [%rd47+80];
	ld.f64 	%fd3, [%rd47+72];
	fma.rn.f64 	%fd4, %fd1, %fd2, %fd3;
	add.u64 	%rd49, %SPL, 0;
	ld.local.u32 	%r17, [%rd49];
	cvt.rn.f64.s32	%fd5, %r17;
	sub.f64 	%fd6, %fd4, %fd5;
	cvt.rzi.s32.f64	%r18, %fd6;
	ld.u32 	%r19, [%rd47+12];
	shl.b32 	%r20, %r19, 1;
	rem.s32 	%r21, %r2, %r20;
	add.s32 	%r22, %r18, 1;
	sub.s32 	%r23, %r22, %r19;
	add.s32 	%r24, %r23, %r21;
	st.param.b32	[func_retval0+0], %r24;
	ret;
}

	// .globl	_Z28lees_edw_buffer_displacementP10lees_edw_sidPd
.visible .func  (.param .b32 func_retval0) _Z28lees_edw_buffer_displacementP10lees_edw_sidPd(
	.param .b64 _Z28lees_edw_buffer_displacementP10lees_edw_sidPd_param_0,
	.param .b32 _Z28lees_edw_buffer_displacementP10lees_edw_sidPd_param_1,
	.param .b64 _Z28lees_edw_buffer_displacementP10lees_edw_sidPd_param_2,
	.param .b64 _Z28lees_edw_buffer_displacementP10lees_edw_sidPd_param_3
)
{
	.local .align 4 .b8 	__local_depot14[4];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<17>;
	.reg .b32 	%r<32>;
	.reg .f64 	%fd<54>;
	.reg .b64 	%rd<73>;


	mov.u64 	%SPL, __local_depot14;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd14, [_Z28lees_edw_buffer_displacementP10lees_edw_sidPd_param_0];
	ld.param.u32 	%r5, [_Z28lees_edw_buffer_displacementP10lees_edw_sidPd_param_1];
	ld.param.f64 	%fd16, [_Z28lees_edw_buffer_displacementP10lees_edw_sidPd_param_2];
	ld.param.u64 	%rd15, [_Z28lees_edw_buffer_displacementP10lees_edw_sidPd_param_3];
	add.u64 	%rd16, %SP, 0;
	add.u64 	%rd1, %SPL, 0;
	setp.ne.s64	%p1, %rd14, 0;
	@%p1 bra 	BB14_2;

	mov.u64 	%rd17, $str;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, $str1;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, __unnamed_12;
	cvta.global.u64 	%rd22, %rd21;
	mov.u32 	%r6, 869;
	mov.u64 	%rd23, 1;
	// Callseq Start 78
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd22;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd23;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 78

BB14_2:
	add.s64 	%rd2, %rd14, 24;
	setp.lt.s32	%p2, %r5, 0;
	@%p2 bra 	BB14_4;

	ld.u64 	%rd70, [%rd2];
	ld.u32 	%r7, [%rd70+4];
	setp.gt.s32	%p3, %r7, %r5;
	@%p3 bra 	BB14_5;

BB14_4:
	mov.u64 	%rd24, $str13;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u64 	%rd28, __unnamed_12;
	cvta.global.u64 	%rd29, %rd28;
	mov.u32 	%r8, 870;
	mov.u64 	%rd30, 1;
	// Callseq Start 79
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd25;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd29;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd30;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 79
	ld.u64 	%rd70, [%rd2];

BB14_5:
	ld.f64 	%fd17, [%rd70+96];
	sub.f64 	%fd1, %fd16, %fd17;
	setp.ge.f64	%p4, %fd1, 0d0000000000000000;
	@%p4 bra 	BB14_7;

	mov.u64 	%rd31, $str3;
	cvta.global.u64 	%rd32, %rd31;
	mov.u64 	%rd33, $str1;
	cvta.global.u64 	%rd34, %rd33;
	mov.u64 	%rd35, __unnamed_12;
	cvta.global.u64 	%rd36, %rd35;
	mov.u32 	%r9, 873;
	mov.u64 	%rd37, 1;
	// Callseq Start 80
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd32;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd34;
	.param .b32 param2;
	st.param.b32	[param2+0], %r9;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd36;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd37;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 80

BB14_7:
	mov.u64 	%rd38, 0;
	st.u64 	[%rd15], %rd38;
	ld.u64 	%rd72, [%rd2];
	add.s64 	%rd7, %rd72, 44;
	ld.u32 	%r10, [%rd72+44];
	setp.ne.s32	%p5, %r10, 0;
	@%p5 bra 	BB14_15;

	ld.f64 	%fd18, [%rd7+20];
	mul.f64 	%fd19, %fd1, %fd18;
	ld.u64 	%rd39, [%rd2+32];
	mul.wide.s32 	%rd40, %r5, 4;
	add.s64 	%rd41, %rd39, %rd40;
	ld.u32 	%r11, [%rd41];
	cvt.rn.f64.s32	%fd20, %r11;
	mul.f64 	%fd21, %fd19, %fd20;
	st.f64 	[%rd15], %fd21;
	ld.u64 	%rd42, [%rd2+32];
	add.s64 	%rd43, %rd42, %rd40;
	ld.u32 	%r1, [%rd43];
	@%p1 bra 	BB14_10;

	mov.u64 	%rd44, $str;
	cvta.global.u64 	%rd45, %rd44;
	mov.u64 	%rd46, $str1;
	cvta.global.u64 	%rd47, %rd46;
	mov.u64 	%rd48, __unnamed_27;
	cvta.global.u64 	%rd49, %rd48;
	mov.u32 	%r12, 1292;
	mov.u64 	%rd50, 1;
	// Callseq Start 81
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd45;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd47;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd49;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd50;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 81

BB14_10:
	@%p2 bra 	BB14_12;

	ld.u64 	%rd72, [%rd2];
	ld.u32 	%r13, [%rd72+4];
	setp.gt.s32	%p8, %r13, %r5;
	@%p8 bra 	BB14_13;

BB14_12:
	mov.u64 	%rd51, $str13;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, $str1;
	cvta.global.u64 	%rd54, %rd53;
	mov.u64 	%rd55, __unnamed_27;
	cvta.global.u64 	%rd56, %rd55;
	mov.u32 	%r14, 1293;
	mov.u64 	%rd57, 1;
	// Callseq Start 82
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd52;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd54;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd56;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd57;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 82
	ld.u64 	%rd72, [%rd2];

BB14_13:
	ld.u32 	%r15, [%rd72+12];
	shl.b32 	%r16, %r15, 1;
	rem.s32 	%r17, %r5, %r16;
	setp.lt.s32	%p9, %r17, %r15;
	selp.b32	%r18, -1, 1, %p9;
	setp.eq.s32	%p10, %r1, %r18;
	@%p10 bra 	BB14_15;

	mov.u64 	%rd58, $str14;
	cvta.global.u64 	%rd59, %rd58;
	mov.u64 	%rd60, $str1;
	cvta.global.u64 	%rd61, %rd60;
	mov.u64 	%rd62, __unnamed_12;
	cvta.global.u64 	%rd63, %rd62;
	mov.u32 	%r19, 879;
	mov.u64 	%rd64, 1;
	// Callseq Start 83
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd59;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd61;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd63;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd64;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 83
	ld.u64 	%rd72, [%rd2];

BB14_15:
	add.s64 	%rd13, %rd72, 44;
	ld.u32 	%r20, [%rd72+44];
	setp.ne.s32	%p11, %r20, 1;
	@%p11 bra 	BB14_26;

	ld.f64 	%fd2, [%rd13+20];
	ld.f64 	%fd22, [%rd13+44];
	mul.f64 	%fd50, %fd1, %fd22;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r21}, %fd50;
	}
	and.b32  	%r22, %r21, 2147483647;
	setp.ne.s32	%p12, %r22, 2146435072;
	@%p12 bra 	BB14_19;

	{
	.reg .b32 %temp; 
	mov.b64 	{%r23, %temp}, %fd50;
	}
	setp.ne.s32	%p13, %r23, 0;
	@%p13 bra 	BB14_19;

	mov.f64 	%fd23, 0d0000000000000000;
	mul.rn.f64 	%fd50, %fd50, %fd23;

BB14_19:
	mul.f64 	%fd24, %fd50, 0d3FE45F306DC9C883;
	cvt.rni.s32.f64	%r31, %fd24;
	st.local.u32 	[%rd1], %r31;
	cvt.rn.f64.s32	%fd25, %r31;
	neg.f64 	%fd26, %fd25;
	mov.f64 	%fd27, 0d3FF921FB54442D18;
	fma.rn.f64 	%fd28, %fd26, %fd27, %fd50;
	mov.f64 	%fd29, 0d3C91A62633145C00;
	fma.rn.f64 	%fd30, %fd26, %fd29, %fd28;
	mov.f64 	%fd31, 0d397B839A252049C0;
	fma.rn.f64 	%fd51, %fd26, %fd31, %fd30;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r24}, %fd50;
	}
	and.b32  	%r25, %r24, 2145386496;
	setp.lt.u32	%p14, %r25, 1105199104;
	@%p14 bra 	BB14_21;

	// Callseq Start 84
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.f64	[param0+0], %fd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b64 retval0;
	call.uni (retval0), 
	__internal_trig_reduction_slowpathd, 
	(
	param0, 
	param1
	);
	ld.param.f64	%fd51, [retval0+0];
	
	//{
	}// Callseq End 84
	ld.local.u32 	%r31, [%rd1];

BB14_21:
	and.b32  	%r26, %r31, 1;
	shl.b32 	%r27, %r26, 3;
	setp.eq.s32	%p15, %r26, 0;
	selp.f64	%fd32, 0d3DE5DB65F9785EBA, 0dBDA8FF8320FD8164, %p15;
	add.s32 	%r28, %r27, 1;
	mul.wide.s32 	%rd66, %r28, 8;
	mov.u64 	%rd67, __cudart_sin_cos_coeffs;
	add.s64 	%rd68, %rd67, %rd66;
	ld.const.f64 	%fd33, [%rd68];
	mul.rn.f64 	%fd9, %fd51, %fd51;
	fma.rn.f64 	%fd34, %fd32, %fd9, %fd33;
	ld.const.f64 	%fd35, [%rd68+8];
	fma.rn.f64 	%fd36, %fd34, %fd9, %fd35;
	ld.const.f64 	%fd37, [%rd68+16];
	fma.rn.f64 	%fd38, %fd36, %fd9, %fd37;
	ld.const.f64 	%fd39, [%rd68+24];
	fma.rn.f64 	%fd40, %fd38, %fd9, %fd39;
	ld.const.f64 	%fd41, [%rd68+32];
	fma.rn.f64 	%fd42, %fd40, %fd9, %fd41;
	ld.const.f64 	%fd43, [%rd68+40];
	fma.rn.f64 	%fd10, %fd42, %fd9, %fd43;
	fma.rn.f64 	%fd52, %fd10, %fd51, %fd51;
	@%p15 bra 	BB14_23;

	mov.f64 	%fd44, 0d3FF0000000000000;
	fma.rn.f64 	%fd52, %fd10, %fd9, %fd44;

BB14_23:
	and.b32  	%r29, %r31, 2;
	setp.eq.s32	%p16, %r29, 0;
	@%p16 bra 	BB14_25;

	mov.f64 	%fd45, 0d0000000000000000;
	mov.f64 	%fd46, 0dBFF0000000000000;
	fma.rn.f64 	%fd52, %fd52, %fd46, %fd45;

BB14_25:
	ld.u64 	%rd69, [%rd2];
	ld.f64 	%fd47, [%rd69+88];
	mul.f64 	%fd48, %fd2, %fd52;
	div.rn.f64 	%fd49, %fd48, %fd47;
	st.f64 	[%rd15], %fd49;

BB14_26:
	mov.u32 	%r30, 0;
	st.param.b32	[func_retval0+0], %r30;
	ret;
}

	// .globl	_Z19lees_edw_buffer_duyP10lees_edw_si
.visible .func  (.param .b32 func_retval0) _Z19lees_edw_buffer_duyP10lees_edw_si(
	.param .b64 _Z19lees_edw_buffer_duyP10lees_edw_si_param_0,
	.param .b32 _Z19lees_edw_buffer_duyP10lees_edw_si_param_1
)
{
	.reg .pred 	%p<5>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<21>;


	ld.param.u64 	%rd5, [_Z19lees_edw_buffer_duyP10lees_edw_si_param_0];
	ld.param.u32 	%r1, [_Z19lees_edw_buffer_duyP10lees_edw_si_param_1];
	setp.ne.s64	%p1, %rd5, 0;
	@%p1 bra 	BB15_2;

	mov.u64 	%rd6, $str;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, __unnamed_27;
	cvta.global.u64 	%rd11, %rd10;
	mov.u32 	%r2, 1292;
	mov.u64 	%rd12, 1;
	// Callseq Start 85
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 85

BB15_2:
	add.s64 	%rd1, %rd5, 24;
	setp.lt.s32	%p2, %r1, 0;
	@%p2 bra 	BB15_4;

	ld.u64 	%rd20, [%rd1];
	ld.u32 	%r3, [%rd20+4];
	setp.gt.s32	%p3, %r3, %r1;
	@%p3 bra 	BB15_5;

BB15_4:
	mov.u64 	%rd13, $str13;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, __unnamed_27;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r4, 1293;
	mov.u64 	%rd19, 1;
	// Callseq Start 86
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd18;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd19;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 86
	ld.u64 	%rd20, [%rd1];

BB15_5:
	ld.u32 	%r5, [%rd20+12];
	shl.b32 	%r6, %r5, 1;
	rem.s32 	%r7, %r1, %r6;
	setp.lt.s32	%p4, %r7, %r5;
	selp.b32	%r8, -1, 1, %p4;
	st.param.b32	[func_retval0+0], %r8;
	ret;
}

	// .globl	_Z14lees_edw_indexP10lees_edw_siii
.visible .func  (.param .b32 func_retval0) _Z14lees_edw_indexP10lees_edw_siii(
	.param .b64 _Z14lees_edw_indexP10lees_edw_siii_param_0,
	.param .b32 _Z14lees_edw_indexP10lees_edw_siii_param_1,
	.param .b32 _Z14lees_edw_indexP10lees_edw_siii_param_2,
	.param .b32 _Z14lees_edw_indexP10lees_edw_siii_param_3
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<58>;
	.reg .b64 	%rd<70>;


	ld.param.u64 	%rd14, [_Z14lees_edw_indexP10lees_edw_siii_param_0];
	ld.param.u32 	%r14, [_Z14lees_edw_indexP10lees_edw_siii_param_1];
	ld.param.u32 	%r15, [_Z14lees_edw_indexP10lees_edw_siii_param_2];
	ld.param.u32 	%r16, [_Z14lees_edw_indexP10lees_edw_siii_param_3];
	setp.ne.s64	%p1, %rd14, 0;
	@%p1 bra 	BB16_2;

	mov.u64 	%rd15, $str;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, __unnamed_14;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r17, 1000;
	mov.u64 	%rd21, 1;
	// Callseq Start 87
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 87

BB16_2:
	ld.u64 	%rd65, [%rd14+24];
	ld.u32 	%r53, [%rd65+12];
	mov.u32 	%r18, 1;
	sub.s32 	%r19, %r18, %r53;
	setp.le.s32	%p2, %r19, %r14;
	@%p2 bra 	BB16_4;

	mov.u64 	%rd22, $str15;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, $str1;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, __unnamed_14;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r20, 1002;
	mov.u64 	%rd28, 1;
	// Callseq Start 88
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd25;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd27;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd28;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 88
	ld.u64 	%rd65, [%rd14+24];
	ld.u32 	%r53, [%rd65+12];

BB16_4:
	sub.s32 	%r22, %r18, %r53;
	setp.le.s32	%p3, %r22, %r15;
	@%p3 bra 	BB16_6;

	mov.u64 	%rd29, $str16;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, $str1;
	cvta.global.u64 	%rd32, %rd31;
	mov.u64 	%rd33, __unnamed_14;
	cvta.global.u64 	%rd34, %rd33;
	mov.u32 	%r23, 1003;
	mov.u64 	%rd35, 1;
	// Callseq Start 89
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r23;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd34;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 89
	ld.u64 	%rd65, [%rd14+24];
	ld.u32 	%r53, [%rd65+12];

BB16_6:
	sub.s32 	%r25, %r18, %r53;
	setp.le.s32	%p4, %r25, %r16;
	@%p4 bra 	BB16_8;

	mov.u64 	%rd36, $str17;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str1;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, __unnamed_14;
	cvta.global.u64 	%rd41, %rd40;
	mov.u32 	%r26, 1004;
	mov.u64 	%rd42, 1;
	// Callseq Start 90
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r26;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd41;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd42;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 90
	ld.u64 	%rd65, [%rd14+24];
	ld.u32 	%r53, [%rd65+12];

BB16_8:
	ld.u32 	%r27, [%rd65+28];
	add.s32 	%r28, %r53, %r27;
	ld.u32 	%r29, [%rd65+4];
	add.s32 	%r30, %r28, %r29;
	setp.ge.s32	%p5, %r30, %r14;
	@%p5 bra 	BB16_10;

	mov.u64 	%rd43, $str18;
	cvta.global.u64 	%rd44, %rd43;
	mov.u64 	%rd45, $str1;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, __unnamed_14;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r31, 1005;
	mov.u64 	%rd49, 1;
	// Callseq Start 91
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd44;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd46;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd48;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd49;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 91
	ld.u64 	%rd65, [%rd14+24];
	ld.u32 	%r53, [%rd65+12];

BB16_10:
	ld.u32 	%r32, [%rd65+32];
	add.s32 	%r33, %r53, %r32;
	setp.ge.s32	%p6, %r33, %r15;
	@%p6 bra 	BB16_12;

	mov.u64 	%rd50, $str19;
	cvta.global.u64 	%rd51, %rd50;
	mov.u64 	%rd52, $str1;
	cvta.global.u64 	%rd53, %rd52;
	mov.u64 	%rd54, __unnamed_14;
	cvta.global.u64 	%rd55, %rd54;
	mov.u32 	%r34, 1006;
	mov.u64 	%rd56, 1;
	// Callseq Start 92
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd51;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd53;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd55;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd56;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 92
	ld.u64 	%rd65, [%rd14+24];
	ld.u32 	%r53, [%rd65+12];

BB16_12:
	ld.u32 	%r35, [%rd65+36];
	add.s32 	%r36, %r53, %r35;
	setp.ge.s32	%p7, %r36, %r16;
	@%p7 bra 	BB16_14;

	mov.u64 	%rd57, $str20;
	cvta.global.u64 	%rd58, %rd57;
	mov.u64 	%rd59, $str1;
	cvta.global.u64 	%rd60, %rd59;
	mov.u64 	%rd61, __unnamed_14;
	cvta.global.u64 	%rd62, %rd61;
	mov.u32 	%r37, 1007;
	mov.u64 	%rd63, 1;
	// Callseq Start 93
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd58;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd60;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd62;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd63;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 93
	ld.u64 	%rd65, [%rd14+24];
	ld.u32 	%r53, [%rd65+12];

BB16_14:
	ld.v2.u32 	{%r38, %r39}, [%rd65+16];
	add.s32 	%r42, %r14, %r53;
	add.s32 	%r43, %r42, -1;
	mul.lo.s32 	%r44, %r43, %r38;
	add.s32 	%r45, %r15, %r53;
	add.s32 	%r46, %r45, -1;
	mad.lo.s32 	%r47, %r46, %r39, %r44;
	add.s32 	%r48, %r16, %r53;
	add.s32 	%r49, %r48, -1;
	ld.u32 	%r50, [%rd65+24];
	mad.lo.s32 	%r51, %r49, %r50, %r47;
	st.param.b32	[func_retval0+0], %r51;
	ret;
}

	// .globl	_Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1_
.visible .func _Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1_(
	.param .b64 _Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_0,
	.param .b64 _Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_1,
	.param .b64 _Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_2,
	.param .b64 _Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_3,
	.param .b64 _Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_4
)
{
	.reg .pred 	%p<9>;
	.reg .b32 	%r<59>;
	.reg .b64 	%rd<81>;


	ld.param.u64 	%rd14, [_Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_0];
	ld.param.u64 	%rd15, [_Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_1];
	ld.param.u64 	%rd16, [_Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_2];
	ld.param.u64 	%rd17, [_Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_3];
	ld.param.u64 	%rd18, [_Z16lees_edw_index_vP10lees_edw_sPiS1_S1_S1__param_4];
	setp.ne.s64	%p1, %rd14, 0;
	@%p1 bra 	BB17_2;

	mov.u64 	%rd19, $str;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, __unnamed_15;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r17, 1024;
	mov.u64 	%rd25, 1;
	// Callseq Start 94
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd24;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd25;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 94

BB17_2:
	ld.u32 	%r1, [%rd15];
	ld.u32 	%r2, [%rd16];
	ld.u32 	%r3, [%rd17];
	@%p1 bra 	BB17_4;

	mov.u64 	%rd26, $str;
	cvta.global.u64 	%rd27, %rd26;
	mov.u64 	%rd28, $str1;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, __unnamed_14;
	cvta.global.u64 	%rd31, %rd30;
	mov.u32 	%r18, 1000;
	mov.u64 	%rd32, 1;
	// Callseq Start 95
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd27;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 95

BB17_4:
	ld.u64 	%rd76, [%rd14+24];
	ld.u32 	%r54, [%rd76+12];
	mov.u32 	%r19, 1;
	sub.s32 	%r20, %r19, %r54;
	setp.le.s32	%p3, %r20, %r1;
	@%p3 bra 	BB17_6;

	mov.u64 	%rd33, $str15;
	cvta.global.u64 	%rd34, %rd33;
	mov.u64 	%rd35, $str1;
	cvta.global.u64 	%rd36, %rd35;
	mov.u64 	%rd37, __unnamed_14;
	cvta.global.u64 	%rd38, %rd37;
	mov.u32 	%r21, 1002;
	mov.u64 	%rd39, 1;
	// Callseq Start 96
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd34;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd36;
	.param .b32 param2;
	st.param.b32	[param2+0], %r21;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd38;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd39;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 96
	ld.u64 	%rd76, [%rd14+24];
	ld.u32 	%r54, [%rd76+12];

BB17_6:
	sub.s32 	%r23, %r19, %r54;
	setp.le.s32	%p4, %r23, %r2;
	@%p4 bra 	BB17_8;

	mov.u64 	%rd40, $str16;
	cvta.global.u64 	%rd41, %rd40;
	mov.u64 	%rd42, $str1;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, __unnamed_14;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r24, 1003;
	mov.u64 	%rd46, 1;
	// Callseq Start 97
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd41;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd43;
	.param .b32 param2;
	st.param.b32	[param2+0], %r24;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd45;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd46;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 97
	ld.u64 	%rd76, [%rd14+24];
	ld.u32 	%r54, [%rd76+12];

BB17_8:
	sub.s32 	%r26, %r19, %r54;
	setp.le.s32	%p5, %r26, %r3;
	@%p5 bra 	BB17_10;

	mov.u64 	%rd47, $str17;
	cvta.global.u64 	%rd48, %rd47;
	mov.u64 	%rd49, $str1;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, __unnamed_14;
	cvta.global.u64 	%rd52, %rd51;
	mov.u32 	%r27, 1004;
	mov.u64 	%rd53, 1;
	// Callseq Start 98
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd50;
	.param .b32 param2;
	st.param.b32	[param2+0], %r27;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd52;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd53;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 98
	ld.u64 	%rd76, [%rd14+24];
	ld.u32 	%r54, [%rd76+12];

BB17_10:
	ld.u32 	%r28, [%rd76+28];
	add.s32 	%r29, %r54, %r28;
	ld.u32 	%r30, [%rd76+4];
	add.s32 	%r31, %r29, %r30;
	setp.ge.s32	%p6, %r31, %r1;
	@%p6 bra 	BB17_12;

	mov.u64 	%rd54, $str18;
	cvta.global.u64 	%rd55, %rd54;
	mov.u64 	%rd56, $str1;
	cvta.global.u64 	%rd57, %rd56;
	mov.u64 	%rd58, __unnamed_14;
	cvta.global.u64 	%rd59, %rd58;
	mov.u32 	%r32, 1005;
	mov.u64 	%rd60, 1;
	// Callseq Start 99
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd55;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd57;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd59;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd60;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 99
	ld.u64 	%rd76, [%rd14+24];
	ld.u32 	%r54, [%rd76+12];

BB17_12:
	ld.u32 	%r33, [%rd76+32];
	add.s32 	%r34, %r54, %r33;
	setp.ge.s32	%p7, %r34, %r2;
	@%p7 bra 	BB17_14;

	mov.u64 	%rd61, $str19;
	cvta.global.u64 	%rd62, %rd61;
	mov.u64 	%rd63, $str1;
	cvta.global.u64 	%rd64, %rd63;
	mov.u64 	%rd65, __unnamed_14;
	cvta.global.u64 	%rd66, %rd65;
	mov.u32 	%r35, 1006;
	mov.u64 	%rd67, 1;
	// Callseq Start 100
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd62;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd64;
	.param .b32 param2;
	st.param.b32	[param2+0], %r35;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd66;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd67;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 100
	ld.u64 	%rd76, [%rd14+24];
	ld.u32 	%r54, [%rd76+12];

BB17_14:
	ld.u32 	%r36, [%rd76+36];
	add.s32 	%r37, %r54, %r36;
	setp.ge.s32	%p8, %r37, %r3;
	@%p8 bra 	BB17_16;

	mov.u64 	%rd68, $str20;
	cvta.global.u64 	%rd69, %rd68;
	mov.u64 	%rd70, $str1;
	cvta.global.u64 	%rd71, %rd70;
	mov.u64 	%rd72, __unnamed_14;
	cvta.global.u64 	%rd73, %rd72;
	mov.u32 	%r38, 1007;
	mov.u64 	%rd74, 1;
	// Callseq Start 101
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd69;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd71;
	.param .b32 param2;
	st.param.b32	[param2+0], %r38;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd73;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd74;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 101
	ld.u64 	%rd76, [%rd14+24];
	ld.u32 	%r54, [%rd76+12];

BB17_16:
	ld.v2.u32 	{%r39, %r40}, [%rd76+16];
	add.s32 	%r43, %r1, %r54;
	add.s32 	%r44, %r43, -1;
	mul.lo.s32 	%r45, %r44, %r39;
	add.s32 	%r46, %r2, %r54;
	add.s32 	%r47, %r46, -1;
	mad.lo.s32 	%r48, %r47, %r40, %r45;
	add.s32 	%r49, %r3, %r54;
	add.s32 	%r50, %r49, -1;
	ld.u32 	%r51, [%rd76+24];
	mad.lo.s32 	%r52, %r50, %r51, %r48;
	st.u32 	[%rd18], %r52;
	ret;
}

	// .globl	_Z15lees_edw_nlocalP10lees_edw_sPi
.visible .func  (.param .b32 func_retval0) _Z15lees_edw_nlocalP10lees_edw_sPi(
	.param .b64 _Z15lees_edw_nlocalP10lees_edw_sPi_param_0,
	.param .b64 _Z15lees_edw_nlocalP10lees_edw_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z15lees_edw_nlocalP10lees_edw_sPi_param_0];
	ld.param.u64 	%rd2, [_Z15lees_edw_nlocalP10lees_edw_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB18_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_16;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 1042;
	mov.u64 	%rd9, 1;
	// Callseq Start 102
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 102

BB18_2:
	ld.u64 	%rd10, [%rd1+8];
	// Callseq Start 103
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z9cs_nlocalP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 103
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z16lees_edw_stridesP10lees_edw_sPiS1_S1_
.visible .func  (.param .b32 func_retval0) _Z16lees_edw_stridesP10lees_edw_sPiS1_S1_(
	.param .b64 _Z16lees_edw_stridesP10lees_edw_sPiS1_S1__param_0,
	.param .b64 _Z16lees_edw_stridesP10lees_edw_sPiS1_S1__param_1,
	.param .b64 _Z16lees_edw_stridesP10lees_edw_sPiS1_S1__param_2,
	.param .b64 _Z16lees_edw_stridesP10lees_edw_sPiS1_S1__param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<13>;


	ld.param.u64 	%rd1, [_Z16lees_edw_stridesP10lees_edw_sPiS1_S1__param_0];
	ld.param.u64 	%rd2, [_Z16lees_edw_stridesP10lees_edw_sPiS1_S1__param_1];
	ld.param.u64 	%rd3, [_Z16lees_edw_stridesP10lees_edw_sPiS1_S1__param_2];
	ld.param.u64 	%rd4, [_Z16lees_edw_stridesP10lees_edw_sPiS1_S1__param_3];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB19_2;

	mov.u64 	%rd5, $str;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, __unnamed_17;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r1, 1056;
	mov.u64 	%rd11, 1;
	// Callseq Start 104
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 104

BB19_2:
	ld.u64 	%rd12, [%rd1+8];
	// Callseq Start 105
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd4;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z10cs_stridesP8coords_sPiS1_S1_, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 105
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z14lees_edw_nhaloP10lees_edw_sPi
.visible .func  (.param .b32 func_retval0) _Z14lees_edw_nhaloP10lees_edw_sPi(
	.param .b64 _Z14lees_edw_nhaloP10lees_edw_sPi_param_0,
	.param .b64 _Z14lees_edw_nhaloP10lees_edw_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z14lees_edw_nhaloP10lees_edw_sPi_param_0];
	ld.param.u64 	%rd2, [_Z14lees_edw_nhaloP10lees_edw_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB20_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_18;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 1070;
	mov.u64 	%rd9, 1;
	// Callseq Start 106
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 106

BB20_2:
	ld.u64 	%rd10, [%rd1+8];
	// Callseq Start 107
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z8cs_nhaloP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 107
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z13lees_edw_ltotP10lees_edw_sPd
.visible .func  (.param .b32 func_retval0) _Z13lees_edw_ltotP10lees_edw_sPd(
	.param .b64 _Z13lees_edw_ltotP10lees_edw_sPd_param_0,
	.param .b64 _Z13lees_edw_ltotP10lees_edw_sPd_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z13lees_edw_ltotP10lees_edw_sPd_param_0];
	ld.param.u64 	%rd2, [_Z13lees_edw_ltotP10lees_edw_sPd_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB21_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_19;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 1084;
	mov.u64 	%rd9, 1;
	// Callseq Start 108
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 108

BB21_2:
	ld.u64 	%rd10, [%rd1+8];
	// Callseq Start 109
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z7cs_ltotP8coords_sPd, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 109
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z15lees_edw_cartszP10lees_edw_sPi
.visible .func  (.param .b32 func_retval0) _Z15lees_edw_cartszP10lees_edw_sPi(
	.param .b64 _Z15lees_edw_cartszP10lees_edw_sPi_param_0,
	.param .b64 _Z15lees_edw_cartszP10lees_edw_sPi_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<4>;
	.reg .b64 	%rd<22>;


	ld.param.u64 	%rd5, [_Z15lees_edw_cartszP10lees_edw_sPi_param_0];
	ld.param.u64 	%rd6, [_Z15lees_edw_cartszP10lees_edw_sPi_param_1];
	setp.ne.s64	%p1, %rd5, 0;
	@%p1 bra 	BB22_2;

	mov.u64 	%rd7, $str;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str1;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, __unnamed_20;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r1, 1098;
	mov.u64 	%rd13, 1;
	// Callseq Start 110
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd12;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd13;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 110

BB22_2:
	add.s64 	%rd1, %rd5, 8;
	ld.u64 	%rd21, [%rd5+8];
	setp.ne.s64	%p2, %rd21, 0;
	@%p2 bra 	BB22_4;

	mov.u64 	%rd14, $str4;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, $str1;
	cvta.global.u64 	%rd17, %rd16;
	mov.u64 	%rd18, __unnamed_20;
	cvta.global.u64 	%rd19, %rd18;
	mov.u32 	%r2, 1099;
	mov.u64 	%rd20, 1;
	// Callseq Start 111
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd17;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 111
	ld.u64 	%rd21, [%rd1];

BB22_4:
	// Callseq Start 112
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z9cs_cartszP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 112
	st.param.b32	[func_retval0+0], %r3;
	ret;
}

	// .globl	_Z15lees_edw_ntotalP10lees_edw_sPi
.visible .func  (.param .b32 func_retval0) _Z15lees_edw_ntotalP10lees_edw_sPi(
	.param .b64 _Z15lees_edw_ntotalP10lees_edw_sPi_param_0,
	.param .b64 _Z15lees_edw_ntotalP10lees_edw_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z15lees_edw_ntotalP10lees_edw_sPi_param_0];
	ld.param.u64 	%rd2, [_Z15lees_edw_ntotalP10lees_edw_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB23_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_21;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 1113;
	mov.u64 	%rd9, 1;
	// Callseq Start 113
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 113

BB23_2:
	ld.u64 	%rd10, [%rd1+8];
	// Callseq Start 114
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z9cs_ntotalP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 114
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z22lees_edw_nlocal_offsetP10lees_edw_sPi
.visible .func  (.param .b32 func_retval0) _Z22lees_edw_nlocal_offsetP10lees_edw_sPi(
	.param .b64 _Z22lees_edw_nlocal_offsetP10lees_edw_sPi_param_0,
	.param .b64 _Z22lees_edw_nlocal_offsetP10lees_edw_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z22lees_edw_nlocal_offsetP10lees_edw_sPi_param_0];
	ld.param.u64 	%rd2, [_Z22lees_edw_nlocal_offsetP10lees_edw_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB24_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_22;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 1127;
	mov.u64 	%rd9, 1;
	// Callseq Start 115
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 115

BB24_2:
	ld.u64 	%rd10, [%rd1+8];
	// Callseq Start 116
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 116
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z20lees_edw_cart_coordsP10lees_edw_sPi
.visible .func  (.param .b32 func_retval0) _Z20lees_edw_cart_coordsP10lees_edw_sPi(
	.param .b64 _Z20lees_edw_cart_coordsP10lees_edw_sPi_param_0,
	.param .b64 _Z20lees_edw_cart_coordsP10lees_edw_sPi_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [_Z20lees_edw_cart_coordsP10lees_edw_sPi_param_0];
	ld.param.u64 	%rd2, [_Z20lees_edw_cart_coordsP10lees_edw_sPi_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB25_2;

	mov.u64 	%rd3, $str;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_23;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r1, 1141;
	mov.u64 	%rd9, 1;
	// Callseq Start 117
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 117

BB25_2:
	ld.u64 	%rd10, [%rd1+8];
	// Callseq Start 118
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd10;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd2;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z14cs_cart_coordsP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 118
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z17lees_edw_plane_dyP10lees_edw_sPd
.visible .func  (.param .b32 func_retval0) _Z17lees_edw_plane_dyP10lees_edw_sPd(
	.param .b64 _Z17lees_edw_plane_dyP10lees_edw_sPd_param_0,
	.param .b64 _Z17lees_edw_plane_dyP10lees_edw_sPd_param_1
)
{
	.local .align 8 .b8 	__local_depot26[8];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<4>;
	.reg .b32 	%r<6>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<30>;


	mov.u64 	%SPL, __local_depot26;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd2, [_Z17lees_edw_plane_dyP10lees_edw_sPd_param_0];
	ld.param.u64 	%rd3, [_Z17lees_edw_plane_dyP10lees_edw_sPd_param_1];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB26_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_24;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r1, 1158;
	mov.u64 	%rd10, 1;
	// Callseq Start 119
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 119

BB26_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u64 	%rd11, [%rd2+16];
	setp.ne.s64	%p2, %rd11, 0;
	@%p2 bra 	BB26_4;

	mov.u64 	%rd12, $str21;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_24;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r2, 1159;
	mov.u64 	%rd18, 1;
	// Callseq Start 120
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 120

BB26_4:
	setp.ne.s64	%p3, %rd3, 0;
	@%p3 bra 	BB26_6;

	mov.u64 	%rd19, $str22;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, __unnamed_24;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r3, 1160;
	mov.u64 	%rd25, 1;
	// Callseq Start 121
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd24;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd25;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 121

BB26_6:
	ld.u64 	%rd26, [%rd1];
	add.u64 	%rd27, %SP, 0;
	// Callseq Start 122
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z20physics_control_timeP9physics_sPd, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 122
	ld.u64 	%rd28, [%rd1+8];
	ld.f64 	%fd1, [%rd28+64];
	add.u64 	%rd29, %SPL, 0;
	ld.local.f64 	%fd2, [%rd29];
	mul.f64 	%fd3, %fd2, %fd1;
	st.f64 	[%rd3], %fd3;
	mov.u32 	%r5, 0;
	st.param.b32	[func_retval0+0], %r5;
	ret;
}

.func  (.param .b64 func_retval0) __internal_trig_reduction_slowpathd(
	.param .b64 __internal_trig_reduction_slowpathd_param_0,
	.param .b64 __internal_trig_reduction_slowpathd_param_1
)
{
	.local .align 8 .b8 	__local_depot27[40];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b32 	%r<42>;
	.reg .f64 	%fd<5>;
	.reg .b64 	%rd<101>;


	mov.u64 	%SPL, __local_depot27;
	ld.param.f64 	%fd4, [__internal_trig_reduction_slowpathd_param_0];
	ld.param.u64 	%rd37, [__internal_trig_reduction_slowpathd_param_1];
	add.u64 	%rd1, %SPL, 0;
	{
	.reg .b32 %temp; 
	mov.b64 	{%temp, %r1}, %fd4;
	}
	and.b32  	%r40, %r1, -2147483648;
	shr.u32 	%r3, %r1, 20;
	bfe.u32 	%r4, %r1, 20, 11;
	setp.eq.s32	%p1, %r4, 2047;
	@%p1 bra 	BB27_13;

	add.s32 	%r15, %r4, -1024;
	shr.u32 	%r16, %r15, 6;
	mov.u32 	%r17, 15;
	sub.s32 	%r5, %r17, %r16;
	mov.u32 	%r18, 19;
	sub.s32 	%r19, %r18, %r16;
	mov.u32 	%r20, 18;
	min.s32 	%r6, %r20, %r19;
	mov.u64 	%rd94, 0;
	setp.ge.s32	%p2, %r5, %r6;
	mov.u64 	%rd93, %rd1;
	@%p2 bra 	BB27_4;

	bfe.u32 	%r21, %r1, 20, 11;
	add.s32 	%r22, %r21, -1024;
	shr.u32 	%r23, %r22, 6;
	sub.s32 	%r25, %r17, %r23;
	mul.wide.s32 	%rd41, %r25, 8;
	mov.u64 	%rd42, __cudart_i2opi_d;
	add.s64 	%rd89, %rd42, %rd41;
	mov.b64 	 %rd43, %fd4;
	shl.b64 	%rd44, %rd43, 11;
	or.b64  	%rd5, %rd44, -9223372036854775808;
	mov.u64 	%rd94, 0;
	mov.u64 	%rd93, %rd1;
	mov.u64 	%rd91, %rd1;
	mov.u32 	%r39, %r5;

BB27_3:
	.pragma "nounroll";
	ld.const.u64 	%rd47, [%rd89];
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi, clo, chi;
	mov.b64         {alo,ahi}, %rd47;    
	mov.b64         {blo,bhi}, %rd5;    
	mov.b64         {clo,chi}, %rd94;    
	mad.lo.cc.u32   r0, alo, blo, clo;
	madc.hi.cc.u32  r1, alo, blo, chi;
	madc.hi.u32     r2, alo, bhi,   0;
	mad.lo.cc.u32   r1, alo, bhi,  r1;
	madc.hi.cc.u32  r2, ahi, blo,  r2;
	madc.hi.u32     r3, ahi, bhi,   0;
	mad.lo.cc.u32   r1, ahi, blo,  r1;
	madc.lo.cc.u32  r2, ahi, bhi,  r2;
	addc.u32        r3,  r3,   0;     
	mov.b64         %rd45, {r0,r1};      
	mov.b64         %rd94, {r2,r3};      
	}
	// inline asm
	st.local.u64 	[%rd91], %rd45;
	add.s32 	%r39, %r39, 1;
	sub.s32 	%r26, %r39, %r5;
	mul.wide.s32 	%rd50, %r26, 8;
	add.s64 	%rd91, %rd1, %rd50;
	add.s64 	%rd93, %rd93, 8;
	add.s64 	%rd89, %rd89, 8;
	setp.lt.s32	%p3, %r39, %r6;
	@%p3 bra 	BB27_3;

BB27_4:
	st.local.u64 	[%rd93], %rd94;
	ld.local.u64 	%rd95, [%rd1+16];
	ld.local.u64 	%rd96, [%rd1+24];
	and.b32  	%r9, %r3, 63;
	setp.eq.s32	%p4, %r9, 0;
	@%p4 bra 	BB27_6;

	mov.u32 	%r27, 64;
	sub.s32 	%r28, %r27, %r9;
	shl.b64 	%rd51, %rd96, %r9;
	shr.u64 	%rd52, %rd95, %r28;
	or.b64  	%rd96, %rd51, %rd52;
	shl.b64 	%rd53, %rd95, %r9;
	ld.local.u64 	%rd54, [%rd1+8];
	shr.u64 	%rd55, %rd54, %r28;
	or.b64  	%rd95, %rd55, %rd53;

BB27_6:
	shr.u64 	%rd56, %rd96, 62;
	cvt.u32.u64	%r29, %rd56;
	shr.u64 	%rd57, %rd95, 62;
	shl.b64 	%rd58, %rd96, 2;
	or.b64  	%rd98, %rd58, %rd57;
	shl.b64 	%rd97, %rd95, 2;
	shr.u64 	%rd59, %rd96, 61;
	cvt.u32.u64	%r30, %rd59;
	and.b32  	%r31, %r30, 1;
	add.s32 	%r32, %r31, %r29;
	neg.s32 	%r33, %r32;
	setp.eq.s32	%p5, %r40, 0;
	selp.b32	%r34, %r32, %r33, %p5;
	cvta.to.local.u64 	%rd60, %rd37;
	st.local.u32 	[%rd60], %r34;
	setp.eq.s32	%p6, %r31, 0;
	@%p6 bra 	BB27_8;

	mov.u64 	%rd64, 0;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd64;
	mov.b64         {a2,a3}, %rd64;
	mov.b64         {b0,b1}, %rd97;
	mov.b64         {b2,b3}, %rd98;
	sub.cc.u32      r0, a0, b0; 
	subc.cc.u32     r1, a1, b1; 
	subc.cc.u32     r2, a2, b2; 
	subc.u32        r3, a3, b3; 
	mov.b64         %rd97, {r0,r1};
	mov.b64         %rd98, {r2,r3};
	}
	// inline asm
	xor.b32  	%r40, %r40, -2147483648;

BB27_8:
	clz.b64 	%r41, %rd98;
	setp.eq.s32	%p7, %r41, 0;
	@%p7 bra 	BB27_10;

	shl.b64 	%rd67, %rd98, %r41;
	mov.u32 	%r35, 64;
	sub.s32 	%r36, %r35, %r41;
	shr.u64 	%rd68, %rd97, %r36;
	or.b64  	%rd98, %rd68, %rd67;

BB27_10:
	mov.u64 	%rd72, -3958705157555305931;
	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, alo, ahi, blo, bhi;
	mov.b64         {alo,ahi}, %rd98;   
	mov.b64         {blo,bhi}, %rd72;   
	mul.lo.u32      r0, alo, blo;    
	mul.hi.u32      r1, alo, blo;    
	mad.lo.cc.u32   r1, alo, bhi, r1;
	madc.hi.u32     r2, alo, bhi,  0;
	mad.lo.cc.u32   r1, ahi, blo, r1;
	madc.hi.cc.u32  r2, ahi, blo, r2;
	madc.hi.u32     r3, ahi, bhi,  0;
	mad.lo.cc.u32   r2, ahi, bhi, r2;
	addc.u32        r3, r3,  0;      
	mov.b64         %rd69, {r0,r1};     
	mov.b64         %rd100, {r2,r3};     
	}
	// inline asm
	setp.lt.s64	%p8, %rd100, 1;
	@%p8 bra 	BB27_12;

	// inline asm
	{
	.reg .u32 r0, r1, r2, r3, a0, a1, a2, a3, b0, b1, b2, b3;
	mov.b64         {a0,a1}, %rd69;
	mov.b64         {a2,a3}, %rd100;
	mov.b64         {b0,b1}, %rd69;
	mov.b64         {b2,b3}, %rd100;
	add.cc.u32      r0, a0, b0; 
	addc.cc.u32     r1, a1, b1; 
	addc.cc.u32     r2, a2, b2; 
	addc.u32        r3, a3, b3; 
	mov.b64         %rd73, {r0,r1};
	mov.b64         %rd100, {r2,r3};
	}
	// inline asm
	add.s32 	%r41, %r41, 1;

BB27_12:
	cvt.u64.u32	%rd79, %r40;
	shl.b64 	%rd80, %rd79, 32;
	mov.u32 	%r37, 1022;
	sub.s32 	%r38, %r37, %r41;
	cvt.u64.u32	%rd81, %r38;
	shl.b64 	%rd82, %rd81, 52;
	add.s64 	%rd83, %rd100, 1;
	shr.u64 	%rd84, %rd83, 10;
	add.s64 	%rd85, %rd84, 1;
	shr.u64 	%rd86, %rd85, 1;
	add.s64 	%rd87, %rd86, %rd82;
	or.b64  	%rd88, %rd87, %rd80;
	mov.b64 	 %fd4, %rd88;

BB27_13:
	st.param.f64	[func_retval0+0], %fd4;
	ret;
}


