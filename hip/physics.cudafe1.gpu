typedef char __nv_bool;
# 185 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
enum hipError_t {
# 186 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipSuccess,
# 187 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidValue,
# 189 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorOutOfMemory,
# 191 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorMemoryAllocation = 2,
# 192 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotInitialized,
# 194 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInitializationError = 3,
# 195 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorDeinitialized,
# 196 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorProfilerDisabled,
# 197 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorProfilerNotInitialized,
# 198 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorProfilerAlreadyStarted,
# 199 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorProfilerAlreadyStopped,
# 200 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidConfiguration,
# 201 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidSymbol = 13,
# 202 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidDevicePointer = 17,
# 203 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidMemcpyDirection = 21,
# 204 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInsufficientDriver = 35,
# 205 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorMissingConfiguration = 52,
# 206 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorPriorLaunchFailure,
# 207 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidDeviceFunction = 98,
# 208 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNoDevice = 100,
# 209 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidDevice,
# 210 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidImage = 200,
# 211 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidContext,
# 212 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorContextAlreadyCurrent,
# 213 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorMapFailed = 205,
# 215 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorMapBufferObjectFailed = 205,
# 216 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorUnmapFailed,
# 217 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorArrayIsMapped,
# 218 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorAlreadyMapped,
# 219 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNoBinaryForGpu,
# 220 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorAlreadyAcquired,
# 221 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotMapped,
# 222 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotMappedAsArray,
# 223 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotMappedAsPointer,
# 224 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorECCNotCorrectable,
# 225 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorUnsupportedLimit,
# 226 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorContextAlreadyInUse,
# 227 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorPeerAccessUnsupported,
# 228 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidKernelFile,
# 229 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidGraphicsContext,
# 230 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidSource = 300,
# 231 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorFileNotFound,
# 232 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorSharedObjectSymbolNotFound,
# 233 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorSharedObjectInitFailed,
# 234 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorOperatingSystem,
# 235 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidHandle = 400,
# 237 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidResourceHandle = 400,
# 238 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotFound = 500,
# 239 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotReady = 600,
# 243 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorIllegalAddress = 700,
# 244 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorLaunchOutOfResources,
# 245 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorLaunchTimeOut,
# 246 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorPeerAccessAlreadyEnabled = 704,
# 248 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorPeerAccessNotEnabled,
# 250 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorSetOnActiveProcess = 708,
# 251 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorAssert = 710,
# 252 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorHostMemoryAlreadyRegistered = 712,
# 254 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorHostMemoryNotRegistered,
# 256 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorLaunchFailure = 719,
# 258 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorCooperativeLaunchTooLarge,
# 262 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotSupported = 801,
# 263 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorUnknown = 999,
# 265 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorRuntimeMemory = 1052,
# 267 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorRuntimeOther,
# 269 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorTbd};
# 646 "/usr/local/cuda-10.1/include/cuda.h" 3
enum CUfunction_attribute_enum {
# 652 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 659 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 665 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 670 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 675 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 684 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 693 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 699 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_CACHE_MODE_CA,
# 707 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX_DYNAMIC_SHARED_SIZE_BYTES,
# 716 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_PREFERRED_SHARED_MEMORY_CARVEOUT,
# 718 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX};
# 724 "/usr/local/cuda-10.1/include/cuda.h" 3
enum CUfunc_cache_enum {
# 725 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_NONE = 0,
# 726 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_SHARED = 1,
# 727 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_L1 = 2,
# 728 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_EQUAL = 3};
# 734 "/usr/local/cuda-10.1/include/cuda.h" 3
enum CUsharedconfig_enum {
# 735 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE = 0,
# 736 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE = 1,
# 737 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE = 2};
# 790 "/usr/local/cuda-10.1/include/cuda.h" 3
enum CUjit_option_enum {
# 797 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_MAX_REGISTERS,
# 812 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_THREADS_PER_BLOCK,
# 820 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_WALL_TIME,
# 829 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_INFO_LOG_BUFFER,
# 838 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 847 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_ERROR_LOG_BUFFER,
# 856 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 864 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_OPTIMIZATION_LEVEL,
# 872 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_TARGET_FROM_CUCONTEXT,
# 880 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_TARGET,
# 889 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_FALLBACK_STRATEGY,
# 897 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GENERATE_DEBUG_INFO,
# 904 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_LOG_VERBOSE,
# 911 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GENERATE_LINE_INFO,
# 919 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_CACHE_MODE,
# 924 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_NEW_SM3X_OPT,
# 925 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_FAST_COMPILE,
# 939 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_NAMES,
# 948 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_ADDRESSES,
# 956 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_COUNT,
# 958 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_NUM_OPTIONS};
# 1194 "/usr/local/cuda-10.1/include/cuda.h" 3
enum cudaError_enum {
# 1200 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_SUCCESS,
# 1206 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_VALUE,
# 1212 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_OUT_OF_MEMORY,
# 1218 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_INITIALIZED,
# 1223 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_DEINITIALIZED,
# 1230 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PROFILER_DISABLED,
# 1238 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 1245 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 1252 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 1258 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NO_DEVICE = 100,
# 1264 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_DEVICE,
# 1271 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_IMAGE = 200,
# 1281 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_CONTEXT,
# 1290 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 1295 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_MAP_FAILED = 205,
# 1300 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_UNMAP_FAILED,
# 1306 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ARRAY_IS_MAPPED,
# 1311 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ALREADY_MAPPED,
# 1319 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 1324 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ALREADY_ACQUIRED,
# 1329 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED,
# 1335 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 1341 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 1347 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ECC_UNCORRECTABLE,
# 1353 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 1360 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 1366 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_UNSUPPORTED,
# 1371 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_PTX,
# 1376 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_GRAPHICS_CONTEXT,
# 1382 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NVLINK_UNCORRECTABLE,
# 1387 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_JIT_COMPILER_NOT_FOUND,
# 1392 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_SOURCE = 300,
# 1397 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_FILE_NOT_FOUND,
# 1402 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 1407 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 1412 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_OPERATING_SYSTEM,
# 1418 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_HANDLE = 400,
# 1424 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_STATE,
# 1430 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_FOUND = 500,
# 1438 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_READY = 600,
# 1447 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_ADDRESS = 700,
# 1458 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 1468 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_LAUNCH_TIMEOUT,
# 1474 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 1481 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 1488 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 1494 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 1501 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 1509 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ASSERT,
# 1516 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_TOO_MANY_PEERS,
# 1522 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 1528 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 1537 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_HARDWARE_STACK_ERROR,
# 1545 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_INSTRUCTION,
# 1554 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_MISALIGNED_ADDRESS,
# 1565 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_ADDRESS_SPACE,
# 1573 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_PC,
# 1584 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_LAUNCH_FAILED,
# 1593 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_COOPERATIVE_LAUNCH_TOO_LARGE,
# 1598 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_PERMITTED = 800,
# 1604 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_SUPPORTED,
# 1613 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_SYSTEM_NOT_READY,
# 1620 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_SYSTEM_DRIVER_MISMATCH,
# 1629 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_COMPAT_NOT_SUPPORTED_ON_DEVICE,
# 1635 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNSUPPORTED = 900,
# 1641 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_INVALIDATED,
# 1647 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_MERGE,
# 1652 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNMATCHED,
# 1658 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNJOINED,
# 1665 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_ISOLATION,
# 1671 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_IMPLICIT,
# 1677 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_CAPTURED_EVENT,
# 1684 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_WRONG_THREAD,
# 1689 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_UNKNOWN = 999};
# 45 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
enum hipMemcpyKind {
# 46 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyHostToHost,
# 47 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyHostToDevice,
# 48 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyDeviceToHost,
# 49 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyDeviceToDevice,
# 50 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyDefault};
# 22 "pe.h"
struct pe_s;
# 33 "physics.c"
struct physics_s;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 270 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
typedef enum hipError_t hipError_t;
# 51 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
typedef enum hipMemcpyKind hipMemcpyKind;
# 45 ".././target/target_hip.h"
typedef hipError_t tdpError_t;
# 22 "pe.h"
typedef struct pe_s pe_t;
# 18 "physics.h"
typedef struct physics_s physics_t;
# 33 "physics.c"
struct physics_s {
# 34 "physics.c"
double eta_shear;
# 35 "physics.c"
double eta_bulk;
# 36 "physics.c"
double kt;
# 37 "physics.c"
double rho0;
# 38 "physics.c"
double phi0;
# 39 "physics.c"
double phi_noise0;
# 40 "physics.c"
double fbody[3];
# 41 "physics.c"
double e0[3];
# 42 "physics.c"
double e0_frequency;
# 43 "physics.c"
double b0[3];
# 44 "physics.c"
double fgravity[3];
# 45 "physics.c"
double mobility;
# 47 "physics.c"
int t_start;
# 48 "physics.c"
int nsteps;
# 49 "physics.c"
int t_current;
# 50 "physics.c"
int e0_flag;
# 52 "physics.c"
double fpulse_frequency;
# 53 "physics.c"
double fpulse[3];
# 55 "physics.c"
double grad_mu[3];};
# 150 "/usr/local/cuda-10.1/include/crt/common_functions.h" 3
___device__(extern  __no_sc__) __attribute__((__nothrow__)) void free(void *);
# 120 ".././target/target.h"
___device__(extern  __no_sc__) void _Z15tdpErrorHandler10hipError_tPKcii(tdpError_t, const char *, int, int);
# 71 "physics.c"
___device__(extern  __no_sc__) int _Z11physics_refPP9physics_s(physics_t **);
# 162 "physics.c"
___device__(extern  __no_sc__) int _Z17physics_eta_shearP9physics_sPd(physics_t *, double *);
# 193 "physics.c"
___device__(extern  __no_sc__) int _Z16physics_eta_bulkP9physics_sPd(physics_t *, double *);
# 224 "physics.c"
___device__(extern  __no_sc__) int _Z12physics_rho0P9physics_sPd(physics_t *, double *);
# 255 "physics.c"
___device__(extern  __no_sc__) int _Z10physics_ktP9physics_sPd(physics_t *, double *);
# 286 "physics.c"
___device__(extern  __no_sc__) int _Z12physics_phi0P9physics_sPd(physics_t *, double *);
# 317 "physics.c"
___device__(extern  __no_sc__) int _Z10physics_b0P9physics_sPd(physics_t *, double *);
# 351 "physics.c"
___device__(extern  __no_sc__) int _Z10physics_e0P9physics_sPd(physics_t *, double *);
# 391 "physics.c"
___device__(extern  __no_sc__) int _Z15physics_e0_flagP9physics_s(physics_t *);
# 404 "physics.c"
___device__(extern  __no_sc__) int _Z20physics_e0_frequencyP9physics_sPd(physics_t *, double *);
# 435 "physics.c"
___device__(extern  __no_sc__) int _Z13physics_fbodyP9physics_sPd(physics_t *, double *);
# 469 "physics.c"
___device__(extern  __no_sc__) int _Z14physics_fpulseP9physics_sPd(physics_t *, double *);
# 503 "physics.c"
___device__(extern  __no_sc__) int _Z24physics_fpulse_frequencyP9physics_sPd(physics_t *, double *);
# 534 "physics.c"
___device__(extern  __no_sc__) int _Z16physics_mobilityP9physics_sPd(physics_t *, double *);
# 565 "physics.c"
___device__(extern  __no_sc__) int _Z13physics_fgravP9physics_sPd(physics_t *, double *);
# 599 "physics.c"
___device__(extern  __no_sc__) int _Z15physics_grad_muP9physics_sPd(physics_t *, double *);
# 635 "physics.c"
___device__(extern  __no_sc__) int _Z24physics_control_timestepP9physics_s(physics_t *);
# 651 "physics.c"
___device__(extern  __no_sc__) int _Z20physics_control_timeP9physics_sPd(physics_t *, double *);
# 61 "physics.c"
static  __constant__  __var_used__ physics_t __nv_static_28__15_physics_cpp1_ii_93368647_const_phys;
#include "common_functions.h"
# 71 "physics.c"
___device__( __no_sc__) int _Z11physics_refPP9physics_s(
# 71 "physics.c"
physics_t **ref){
# 71 "physics.c"
{
# 73 "physics.c"
{
# 73 "physics.c"
if (!(ref))
# 73 "physics.c"
{
# 73 "physics.c"
{
# 73 "physics.c"
__asm("trap;");
# 73 "physics.c"
}
# 73 "physics.c"
;
# 73 "physics.c"
}
# 73 "physics.c"
}
# 73 "physics.c"
;
# 76 "physics.c"
(*ref) = (&__nv_static_28__15_physics_cpp1_ii_93368647_const_phys);
# 82 "physics.c"
return 0;
# 83 "physics.c"
}}
# 162 "physics.c"
___device__( __no_sc__) int _Z17physics_eta_shearP9physics_sPd(
# 162 "physics.c"
physics_t *phys, 
# 162 "physics.c"
double *eta){
# 162 "physics.c"
{
# 164 "physics.c"
{
# 164 "physics.c"
if (!(phys))
# 164 "physics.c"
{
# 164 "physics.c"
{
# 164 "physics.c"
__asm("trap;");
# 164 "physics.c"
}
# 164 "physics.c"
;
# 164 "physics.c"
}
# 164 "physics.c"
}
# 164 "physics.c"
;
# 165 "physics.c"
{
# 165 "physics.c"
if (!(eta))
# 165 "physics.c"
{
# 165 "physics.c"
{
# 165 "physics.c"
__asm("trap;");
# 165 "physics.c"
}
# 165 "physics.c"
;
# 165 "physics.c"
}
# 165 "physics.c"
}
# 165 "physics.c"
;
# 167 "physics.c"
(*eta) = (phys->eta_shear);
# 169 "physics.c"
return 0;
# 170 "physics.c"
}}
# 193 "physics.c"
___device__( __no_sc__) int _Z16physics_eta_bulkP9physics_sPd(
# 193 "physics.c"
physics_t *phys, 
# 193 "physics.c"
double *eta){
# 193 "physics.c"
{
# 195 "physics.c"
{
# 195 "physics.c"
if (!(phys))
# 195 "physics.c"
{
# 195 "physics.c"
{
# 195 "physics.c"
__asm("trap;");
# 195 "physics.c"
}
# 195 "physics.c"
;
# 195 "physics.c"
}
# 195 "physics.c"
}
# 195 "physics.c"
;
# 196 "physics.c"
{
# 196 "physics.c"
if (!(eta))
# 196 "physics.c"
{
# 196 "physics.c"
{
# 196 "physics.c"
__asm("trap;");
# 196 "physics.c"
}
# 196 "physics.c"
;
# 196 "physics.c"
}
# 196 "physics.c"
}
# 196 "physics.c"
;
# 198 "physics.c"
(*eta) = (phys->eta_bulk);
# 200 "physics.c"
return 0;
# 201 "physics.c"
}}
# 224 "physics.c"
___device__( __no_sc__) int _Z12physics_rho0P9physics_sPd(
# 224 "physics.c"
physics_t *phys, 
# 224 "physics.c"
double *rho0){
# 224 "physics.c"
{
# 226 "physics.c"
{
# 226 "physics.c"
if (!(phys))
# 226 "physics.c"
{
# 226 "physics.c"
{
# 226 "physics.c"
__asm("trap;");
# 226 "physics.c"
}
# 226 "physics.c"
;
# 226 "physics.c"
}
# 226 "physics.c"
}
# 226 "physics.c"
;
# 227 "physics.c"
{
# 227 "physics.c"
if (!(rho0))
# 227 "physics.c"
{
# 227 "physics.c"
{
# 227 "physics.c"
__asm("trap;");
# 227 "physics.c"
}
# 227 "physics.c"
;
# 227 "physics.c"
}
# 227 "physics.c"
}
# 227 "physics.c"
;
# 229 "physics.c"
(*rho0) = (phys->rho0);
# 231 "physics.c"
return 0;
# 232 "physics.c"
}}
# 255 "physics.c"
___device__( __no_sc__) int _Z10physics_ktP9physics_sPd(
# 255 "physics.c"
physics_t *phys, 
# 255 "physics.c"
double *kt){
# 255 "physics.c"
{
# 257 "physics.c"
{
# 257 "physics.c"
if (!(phys))
# 257 "physics.c"
{
# 257 "physics.c"
{
# 257 "physics.c"
__asm("trap;");
# 257 "physics.c"
}
# 257 "physics.c"
;
# 257 "physics.c"
}
# 257 "physics.c"
}
# 257 "physics.c"
;
# 258 "physics.c"
{
# 258 "physics.c"
if (!(kt))
# 258 "physics.c"
{
# 258 "physics.c"
{
# 258 "physics.c"
__asm("trap;");
# 258 "physics.c"
}
# 258 "physics.c"
;
# 258 "physics.c"
}
# 258 "physics.c"
}
# 258 "physics.c"
;
# 260 "physics.c"
(*kt) = (phys->kt);
# 262 "physics.c"
return 0;
# 263 "physics.c"
}}
# 286 "physics.c"
___device__( __no_sc__) int _Z12physics_phi0P9physics_sPd(
# 286 "physics.c"
physics_t *phys, 
# 286 "physics.c"
double *phi0){
# 286 "physics.c"
{
# 288 "physics.c"
{
# 288 "physics.c"
if (!(phys))
# 288 "physics.c"
{
# 288 "physics.c"
{
# 288 "physics.c"
__asm("trap;");
# 288 "physics.c"
}
# 288 "physics.c"
;
# 288 "physics.c"
}
# 288 "physics.c"
}
# 288 "physics.c"
;
# 289 "physics.c"
{
# 289 "physics.c"
if (!(phi0))
# 289 "physics.c"
{
# 289 "physics.c"
{
# 289 "physics.c"
__asm("trap;");
# 289 "physics.c"
}
# 289 "physics.c"
;
# 289 "physics.c"
}
# 289 "physics.c"
}
# 289 "physics.c"
;
# 291 "physics.c"
(*phi0) = (phys->phi0);
# 293 "physics.c"
return 0;
# 294 "physics.c"
}}
# 317 "physics.c"
___device__( __no_sc__) int _Z10physics_b0P9physics_sPd(
# 317 "physics.c"
physics_t *phys, 
# 317 "physics.c"
double *b0){
# 317 "physics.c"
{
# 319 "physics.c"
{
# 319 "physics.c"
if (!(phys))
# 319 "physics.c"
{
# 319 "physics.c"
{
# 319 "physics.c"
__asm("trap;");
# 319 "physics.c"
}
# 319 "physics.c"
;
# 319 "physics.c"
}
# 319 "physics.c"
}
# 319 "physics.c"
;
# 321 "physics.c"
(b0[0]) = (((phys->b0))[0]);
# 322 "physics.c"
(b0[1]) = (((phys->b0))[1]);
# 323 "physics.c"
(b0[2]) = (((phys->b0))[2]);
# 325 "physics.c"
return 0;
# 326 "physics.c"
}}
# 351 "physics.c"
___device__( __no_sc__) int _Z10physics_e0P9physics_sPd(
# 351 "physics.c"
physics_t *phys, 
# 351 "physics.c"
double *e0){
# 351 "physics.c"
{
# 353 "physics.c"
{
# 353 "physics.c"
if (!(phys))
# 353 "physics.c"
{
# 353 "physics.c"
{
# 353 "physics.c"
__asm("trap;");
# 353 "physics.c"
}
# 353 "physics.c"
;
# 353 "physics.c"
}
# 353 "physics.c"
}
# 353 "physics.c"
;
# 355 "physics.c"
(e0[0]) = (((phys->e0))[0]);
# 356 "physics.c"
(e0[1]) = (((phys->e0))[1]);
# 357 "physics.c"
(e0[2]) = (((phys->e0))[2]);
# 359 "physics.c"
return 0;
# 360 "physics.c"
}}
# 391 "physics.c"
___device__( __no_sc__) int _Z15physics_e0_flagP9physics_s(
# 391 "physics.c"
physics_t *phys){
# 391 "physics.c"
{
# 393 "physics.c"
{
# 393 "physics.c"
if (!(phys))
# 393 "physics.c"
{
# 393 "physics.c"
{
# 393 "physics.c"
__asm("trap;");
# 393 "physics.c"
}
# 393 "physics.c"
;
# 393 "physics.c"
}
# 393 "physics.c"
}
# 393 "physics.c"
;
# 395 "physics.c"
return phys->e0_flag;
# 396 "physics.c"
}}
# 404 "physics.c"
___device__( __no_sc__) int _Z20physics_e0_frequencyP9physics_sPd(
# 404 "physics.c"
physics_t *phys, 
# 405 "physics.c"
double *e0_frequency){
# 405 "physics.c"
{
# 407 "physics.c"
{
# 407 "physics.c"
if (!(phys))
# 407 "physics.c"
{
# 407 "physics.c"
{
# 407 "physics.c"
__asm("trap;");
# 407 "physics.c"
}
# 407 "physics.c"
;
# 407 "physics.c"
}
# 407 "physics.c"
}
# 407 "physics.c"
;
# 409 "physics.c"
(*e0_frequency) = (phys->e0_frequency);
# 411 "physics.c"
return 0;
# 412 "physics.c"
}}
# 435 "physics.c"
___device__( __no_sc__) int _Z13physics_fbodyP9physics_sPd(
# 435 "physics.c"
physics_t *phys, 
# 435 "physics.c"
double *f){
# 435 "physics.c"
{
# 437 "physics.c"
{
# 437 "physics.c"
if (!(phys))
# 437 "physics.c"
{
# 437 "physics.c"
{
# 437 "physics.c"
__asm("trap;");
# 437 "physics.c"
}
# 437 "physics.c"
;
# 437 "physics.c"
}
# 437 "physics.c"
}
# 437 "physics.c"
;
# 439 "physics.c"
(f[0]) = (((phys->fbody))[0]);
# 440 "physics.c"
(f[1]) = (((phys->fbody))[1]);
# 441 "physics.c"
(f[2]) = (((phys->fbody))[2]);
# 443 "physics.c"
return 0;
# 444 "physics.c"
}}
# 469 "physics.c"
___device__( __no_sc__) int _Z14physics_fpulseP9physics_sPd(
# 469 "physics.c"
physics_t *phys, 
# 469 "physics.c"
double *fpulse){
# 469 "physics.c"
{
# 471 "physics.c"
{
# 471 "physics.c"
if (!(phys))
# 471 "physics.c"
{
# 471 "physics.c"
{
# 471 "physics.c"
__asm("trap;");
# 471 "physics.c"
}
# 471 "physics.c"
;
# 471 "physics.c"
}
# 471 "physics.c"
}
# 471 "physics.c"
;
# 473 "physics.c"
(fpulse[0]) = (((phys->fpulse))[0]);
# 474 "physics.c"
(fpulse[1]) = (((phys->fpulse))[1]);
# 475 "physics.c"
(fpulse[2]) = (((phys->fpulse))[2]);
# 477 "physics.c"
return 0;
# 478 "physics.c"
}}
# 503 "physics.c"
___device__( __no_sc__) int _Z24physics_fpulse_frequencyP9physics_sPd(
# 503 "physics.c"
physics_t *phys, 
# 504 "physics.c"
double *fpulse_frequency){
# 504 "physics.c"
{
# 506 "physics.c"
{
# 506 "physics.c"
if (!(phys))
# 506 "physics.c"
{
# 506 "physics.c"
{
# 506 "physics.c"
__asm("trap;");
# 506 "physics.c"
}
# 506 "physics.c"
;
# 506 "physics.c"
}
# 506 "physics.c"
}
# 506 "physics.c"
;
# 508 "physics.c"
(*fpulse_frequency) = (phys->fpulse_frequency);
# 510 "physics.c"
return 0;
# 511 "physics.c"
}}
# 534 "physics.c"
___device__( __no_sc__) int _Z16physics_mobilityP9physics_sPd(
# 534 "physics.c"
physics_t *phys, 
# 534 "physics.c"
double *mobility){
# 534 "physics.c"
{
# 536 "physics.c"
{
# 536 "physics.c"
if (!(phys))
# 536 "physics.c"
{
# 536 "physics.c"
{
# 536 "physics.c"
__asm("trap;");
# 536 "physics.c"
}
# 536 "physics.c"
;
# 536 "physics.c"
}
# 536 "physics.c"
}
# 536 "physics.c"
;
# 537 "physics.c"
{
# 537 "physics.c"
if (!(mobility))
# 537 "physics.c"
{
# 537 "physics.c"
{
# 537 "physics.c"
__asm("trap;");
# 537 "physics.c"
}
# 537 "physics.c"
;
# 537 "physics.c"
}
# 537 "physics.c"
}
# 537 "physics.c"
;
# 539 "physics.c"
(*mobility) = (phys->mobility);
# 541 "physics.c"
return 0;
# 542 "physics.c"
}}
# 565 "physics.c"
___device__( __no_sc__) int _Z13physics_fgravP9physics_sPd(
# 565 "physics.c"
physics_t *phys, 
# 565 "physics.c"
double *g){
# 565 "physics.c"
{
# 567 "physics.c"
{
# 567 "physics.c"
if (!(phys))
# 567 "physics.c"
{
# 567 "physics.c"
{
# 567 "physics.c"
__asm("trap;");
# 567 "physics.c"
}
# 567 "physics.c"
;
# 567 "physics.c"
}
# 567 "physics.c"
}
# 567 "physics.c"
;
# 569 "physics.c"
(g[0]) = (((phys->fgravity))[0]);
# 570 "physics.c"
(g[1]) = (((phys->fgravity))[1]);
# 571 "physics.c"
(g[2]) = (((phys->fgravity))[2]);
# 573 "physics.c"
return 0;
# 574 "physics.c"
}}
# 599 "physics.c"
___device__( __no_sc__) int _Z15physics_grad_muP9physics_sPd(
# 599 "physics.c"
physics_t *phys, 
# 599 "physics.c"
double *gm){
# 599 "physics.c"
{
# 601 "physics.c"
{
# 601 "physics.c"
if (!(phys))
# 601 "physics.c"
{
# 601 "physics.c"
{
# 601 "physics.c"
__asm("trap;");
# 601 "physics.c"
}
# 601 "physics.c"
;
# 601 "physics.c"
}
# 601 "physics.c"
}
# 601 "physics.c"
;
# 603 "physics.c"
(gm[0]) = (((phys->grad_mu))[0]);
# 604 "physics.c"
(gm[1]) = (((phys->grad_mu))[1]);
# 605 "physics.c"
(gm[2]) = (((phys->grad_mu))[2]);
# 607 "physics.c"
return 0;
# 608 "physics.c"
}}
# 635 "physics.c"
___device__( __no_sc__) int _Z24physics_control_timestepP9physics_s(
# 635 "physics.c"
physics_t *phys){
# 635 "physics.c"
{
# 637 "physics.c"
{
# 637 "physics.c"
if (!(phys))
# 637 "physics.c"
{
# 637 "physics.c"
{
# 637 "physics.c"
__asm("trap;");
# 637 "physics.c"
}
# 637 "physics.c"
;
# 637 "physics.c"
}
# 637 "physics.c"
}
# 637 "physics.c"
;
# 638 "physics.c"
return phys->t_current;
# 639 "physics.c"
}}
# 651 "physics.c"
___device__( __no_sc__) int _Z20physics_control_timeP9physics_sPd(
# 651 "physics.c"
physics_t *phys, 
# 651 "physics.c"
double *t){
# 651 "physics.c"
{
# 653 "physics.c"
{
# 653 "physics.c"
if (!(phys))
# 653 "physics.c"
{
# 653 "physics.c"
{
# 653 "physics.c"
__asm("trap;");
# 653 "physics.c"
}
# 653 "physics.c"
;
# 653 "physics.c"
}
# 653 "physics.c"
}
# 653 "physics.c"
;
# 654 "physics.c"
{
# 654 "physics.c"
if (!(t))
# 654 "physics.c"
{
# 654 "physics.c"
{
# 654 "physics.c"
__asm("trap;");
# 654 "physics.c"
}
# 654 "physics.c"
;
# 654 "physics.c"
}
# 654 "physics.c"
}
# 654 "physics.c"
;
# 656 "physics.c"
(*t) = ((1.0) * (((double)((phys->t_start) + (phys->t_current))) - (1.0)));
# 658 "physics.c"
return 0;
# 659 "physics.c"
}}
