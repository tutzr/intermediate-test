typedef char __nv_bool;
# 246 "/usr/include/libio.h" 3
struct _IO_FILE;
# 33 ".././mpi_s/mpi.h"
struct MPI_Status;
# 58 ".././mpi_s/mpi.h"
enum elementary_datatypes {
# 58 ".././mpi_s/mpi.h"
MPI_CHAR,
# 59 ".././mpi_s/mpi.h"
MPI_SHORT,
# 60 ".././mpi_s/mpi.h"
MPI_INT,
# 61 ".././mpi_s/mpi.h"
MPI_LONG,
# 62 ".././mpi_s/mpi.h"
MPI_UNSIGNED_CHAR,
# 63 ".././mpi_s/mpi.h"
MPI_UNSIGNED_SHORT,
# 64 ".././mpi_s/mpi.h"
MPI_UNSIGNED,
# 65 ".././mpi_s/mpi.h"
MPI_UNSIGNED_LONG,
# 66 ".././mpi_s/mpi.h"
MPI_FLOAT,
# 67 ".././mpi_s/mpi.h"
MPI_DOUBLE,
# 68 ".././mpi_s/mpi.h"
MPI_LONG_DOUBLE,
# 69 ".././mpi_s/mpi.h"
MPI_BYTE,
# 70 ".././mpi_s/mpi.h"
MPI_PACKED};
# 185 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
enum hipError_t {
# 186 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipSuccess,
# 187 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidValue,
# 189 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorOutOfMemory,
# 191 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorMemoryAllocation = 2,
# 192 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotInitialized,
# 194 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInitializationError = 3,
# 195 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorDeinitialized,
# 196 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorProfilerDisabled,
# 197 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorProfilerNotInitialized,
# 198 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorProfilerAlreadyStarted,
# 199 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorProfilerAlreadyStopped,
# 200 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidConfiguration,
# 201 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidSymbol = 13,
# 202 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidDevicePointer = 17,
# 203 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidMemcpyDirection = 21,
# 204 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInsufficientDriver = 35,
# 205 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorMissingConfiguration = 52,
# 206 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorPriorLaunchFailure,
# 207 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidDeviceFunction = 98,
# 208 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNoDevice = 100,
# 209 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidDevice,
# 210 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidImage = 200,
# 211 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidContext,
# 212 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorContextAlreadyCurrent,
# 213 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorMapFailed = 205,
# 215 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorMapBufferObjectFailed = 205,
# 216 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorUnmapFailed,
# 217 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorArrayIsMapped,
# 218 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorAlreadyMapped,
# 219 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNoBinaryForGpu,
# 220 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorAlreadyAcquired,
# 221 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotMapped,
# 222 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotMappedAsArray,
# 223 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotMappedAsPointer,
# 224 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorECCNotCorrectable,
# 225 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorUnsupportedLimit,
# 226 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorContextAlreadyInUse,
# 227 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorPeerAccessUnsupported,
# 228 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidKernelFile,
# 229 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidGraphicsContext,
# 230 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidSource = 300,
# 231 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorFileNotFound,
# 232 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorSharedObjectSymbolNotFound,
# 233 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorSharedObjectInitFailed,
# 234 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorOperatingSystem,
# 235 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidHandle = 400,
# 237 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorInvalidResourceHandle = 400,
# 238 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotFound = 500,
# 239 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotReady = 600,
# 243 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorIllegalAddress = 700,
# 244 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorLaunchOutOfResources,
# 245 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorLaunchTimeOut,
# 246 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorPeerAccessAlreadyEnabled = 704,
# 248 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorPeerAccessNotEnabled,
# 250 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorSetOnActiveProcess = 708,
# 251 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorAssert = 710,
# 252 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorHostMemoryAlreadyRegistered = 712,
# 254 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorHostMemoryNotRegistered,
# 256 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorLaunchFailure = 719,
# 258 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorCooperativeLaunchTooLarge,
# 262 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorNotSupported = 801,
# 263 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorUnknown = 999,
# 265 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorRuntimeMemory = 1052,
# 267 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorRuntimeOther,
# 269 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
hipErrorTbd};
# 646 "/usr/local/cuda-10.1/include/cuda.h" 3
enum CUfunction_attribute_enum {
# 652 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX_THREADS_PER_BLOCK,
# 659 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_SHARED_SIZE_BYTES,
# 665 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_CONST_SIZE_BYTES,
# 670 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_LOCAL_SIZE_BYTES,
# 675 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_NUM_REGS,
# 684 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_PTX_VERSION,
# 693 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_BINARY_VERSION,
# 699 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_CACHE_MODE_CA,
# 707 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX_DYNAMIC_SHARED_SIZE_BYTES,
# 716 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_PREFERRED_SHARED_MEMORY_CARVEOUT,
# 718 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_ATTRIBUTE_MAX};
# 724 "/usr/local/cuda-10.1/include/cuda.h" 3
enum CUfunc_cache_enum {
# 725 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_NONE = 0,
# 726 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_SHARED = 1,
# 727 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_L1 = 2,
# 728 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_FUNC_CACHE_PREFER_EQUAL = 3};
# 734 "/usr/local/cuda-10.1/include/cuda.h" 3
enum CUsharedconfig_enum {
# 735 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_DEFAULT_BANK_SIZE = 0,
# 736 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_FOUR_BYTE_BANK_SIZE = 1,
# 737 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_SHARED_MEM_CONFIG_EIGHT_BYTE_BANK_SIZE = 2};
# 790 "/usr/local/cuda-10.1/include/cuda.h" 3
enum CUjit_option_enum {
# 797 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_MAX_REGISTERS,
# 812 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_THREADS_PER_BLOCK,
# 820 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_WALL_TIME,
# 829 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_INFO_LOG_BUFFER,
# 838 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_INFO_LOG_BUFFER_SIZE_BYTES,
# 847 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_ERROR_LOG_BUFFER,
# 856 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_ERROR_LOG_BUFFER_SIZE_BYTES,
# 864 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_OPTIMIZATION_LEVEL,
# 872 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_TARGET_FROM_CUCONTEXT,
# 880 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_TARGET,
# 889 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_FALLBACK_STRATEGY,
# 897 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GENERATE_DEBUG_INFO,
# 904 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_LOG_VERBOSE,
# 911 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GENERATE_LINE_INFO,
# 919 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_CACHE_MODE,
# 924 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_NEW_SM3X_OPT,
# 925 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_FAST_COMPILE,
# 939 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_NAMES,
# 948 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_ADDRESSES,
# 956 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_GLOBAL_SYMBOL_COUNT,
# 958 "/usr/local/cuda-10.1/include/cuda.h" 3
CU_JIT_NUM_OPTIONS};
# 1194 "/usr/local/cuda-10.1/include/cuda.h" 3
enum cudaError_enum {
# 1200 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_SUCCESS,
# 1206 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_VALUE,
# 1212 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_OUT_OF_MEMORY,
# 1218 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_INITIALIZED,
# 1223 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_DEINITIALIZED,
# 1230 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PROFILER_DISABLED,
# 1238 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PROFILER_NOT_INITIALIZED,
# 1245 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PROFILER_ALREADY_STARTED,
# 1252 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PROFILER_ALREADY_STOPPED,
# 1258 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NO_DEVICE = 100,
# 1264 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_DEVICE,
# 1271 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_IMAGE = 200,
# 1281 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_CONTEXT,
# 1290 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_CONTEXT_ALREADY_CURRENT,
# 1295 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_MAP_FAILED = 205,
# 1300 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_UNMAP_FAILED,
# 1306 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ARRAY_IS_MAPPED,
# 1311 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ALREADY_MAPPED,
# 1319 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NO_BINARY_FOR_GPU,
# 1324 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ALREADY_ACQUIRED,
# 1329 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED,
# 1335 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED_AS_ARRAY,
# 1341 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_MAPPED_AS_POINTER,
# 1347 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ECC_UNCORRECTABLE,
# 1353 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_UNSUPPORTED_LIMIT,
# 1360 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_CONTEXT_ALREADY_IN_USE,
# 1366 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_UNSUPPORTED,
# 1371 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_PTX,
# 1376 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_GRAPHICS_CONTEXT,
# 1382 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NVLINK_UNCORRECTABLE,
# 1387 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_JIT_COMPILER_NOT_FOUND,
# 1392 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_SOURCE = 300,
# 1397 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_FILE_NOT_FOUND,
# 1402 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_SHARED_OBJECT_SYMBOL_NOT_FOUND,
# 1407 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_SHARED_OBJECT_INIT_FAILED,
# 1412 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_OPERATING_SYSTEM,
# 1418 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_HANDLE = 400,
# 1424 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_STATE,
# 1430 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_FOUND = 500,
# 1438 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_READY = 600,
# 1447 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_ADDRESS = 700,
# 1458 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_LAUNCH_OUT_OF_RESOURCES,
# 1468 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_LAUNCH_TIMEOUT,
# 1474 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_LAUNCH_INCOMPATIBLE_TEXTURING,
# 1481 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_ALREADY_ENABLED,
# 1488 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PEER_ACCESS_NOT_ENABLED,
# 1494 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_PRIMARY_CONTEXT_ACTIVE = 708,
# 1501 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_CONTEXT_IS_DESTROYED,
# 1509 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ASSERT,
# 1516 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_TOO_MANY_PEERS,
# 1522 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_HOST_MEMORY_ALREADY_REGISTERED,
# 1528 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_HOST_MEMORY_NOT_REGISTERED,
# 1537 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_HARDWARE_STACK_ERROR,
# 1545 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_ILLEGAL_INSTRUCTION,
# 1554 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_MISALIGNED_ADDRESS,
# 1565 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_ADDRESS_SPACE,
# 1573 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_INVALID_PC,
# 1584 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_LAUNCH_FAILED,
# 1593 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_COOPERATIVE_LAUNCH_TOO_LARGE,
# 1598 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_PERMITTED = 800,
# 1604 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_NOT_SUPPORTED,
# 1613 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_SYSTEM_NOT_READY,
# 1620 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_SYSTEM_DRIVER_MISMATCH,
# 1629 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_COMPAT_NOT_SUPPORTED_ON_DEVICE,
# 1635 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNSUPPORTED = 900,
# 1641 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_INVALIDATED,
# 1647 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_MERGE,
# 1652 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNMATCHED,
# 1658 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_UNJOINED,
# 1665 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_ISOLATION,
# 1671 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_IMPLICIT,
# 1677 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_CAPTURED_EVENT,
# 1684 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_STREAM_CAPTURE_WRONG_THREAD,
# 1689 "/usr/local/cuda-10.1/include/cuda.h" 3
CUDA_ERROR_UNKNOWN = 999};
# 45 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
enum hipMemcpyKind {
# 46 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyHostToHost,
# 47 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyHostToDevice,
# 48 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyDeviceToHost,
# 49 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyDeviceToDevice,
# 50 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
hipMemcpyDefault};
# 22 "pe.h"
struct pe_s;
# 22 "coords.h"
struct coords_s;
# 26 "coords.h"
enum cartesian_directions {
# 26 "coords.h"
X,
# 26 "coords.h"
Y,
# 26 "coords.h"
Z};
# 29 "coords.h"
enum upper_triangle {
# 29 "coords.h"
XX,
# 29 "coords.h"
XY,
# 29 "coords.h"
XZ,
# 29 "coords.h"
YY,
# 29 "coords.h"
YZ,
# 29 "coords.h"
ZZ};
# 22 "leesedwards.h"
struct lees_edw_s;
# 28 "io_harness.h"
enum io_format_enum {
# 28 "io_harness.h"
IO_FORMAT_NULL,
# 29 "io_harness.h"
IO_FORMAT_ASCII,
# 30 "io_harness.h"
IO_FORMAT_BINARY,
# 31 "io_harness.h"
IO_FORMAT_ASCII_SERIAL,
# 32 "io_harness.h"
IO_FORMAT_BINARY_SERIAL,
# 33 "io_harness.h"
IO_FORMAT_DEFAULT};
# 44 "io_harness.h"
struct io_info_arg_s;
# 73 "io_harness.h"
struct io_info_s;
# 23 "halo_swap.h"
struct halo_swap_s;
# 30 "field.h"
enum field_halo_enum_t {
# 30 "field.h"
FIELD_HALO_HOST,
# 30 "field.h"
FIELD_HALO_TARGET};
# 21 "field_s.h"
struct field_s;
# 212 "/usr/lib/gcc/x86_64-redhat-linux/4.8.5/include/stddef.h" 3
typedef unsigned long size_t;
#include "crt/device_runtime.h"
# 48 "/usr/include/stdio.h" 3
typedef struct _IO_FILE FILE;
# 25 ".././mpi_s/mpi.h"
typedef int MPI_Handle;
# 26 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Comm;
# 28 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Datatype;
# 29 ".././mpi_s/mpi.h"
typedef MPI_Handle MPI_Request;
# 33 ".././mpi_s/mpi.h"
struct MPI_Status {
# 34 ".././mpi_s/mpi.h"
int MPI_SOURCE;
# 35 ".././mpi_s/mpi.h"
int MPI_TAG;};
# 36 ".././mpi_s/mpi.h"
typedef struct MPI_Status MPI_Status;
# 270 "/opt/rocm-3.3.0/hip/include/hip/hip_runtime_api.h" 3
typedef enum hipError_t hipError_t;
# 51 "/opt/rocm-3.3.0/hip/include/hip/nvcc_detail/hip_runtime_api.h" 3
typedef enum hipMemcpyKind hipMemcpyKind;
# 26 ".././target/target_hip.h"
typedef hipMemcpyKind tdpMemcpyKind;
# 45 ".././target/target_hip.h"
typedef hipError_t tdpError_t;
# 22 "pe.h"
typedef struct pe_s pe_t;
# 22 "coords.h"
typedef struct coords_s cs_t;
# 22 "leesedwards.h"
typedef struct lees_edw_s lees_edw_t;
# 33 "io_harness.h"
typedef enum io_format_enum io_format_enum_t;
# 36 "io_harness.h"
typedef struct io_info_s io_info_t;
# 39 "io_harness.h"
typedef int (*io_rw_cb_ft)(FILE *, int, void *);
# 42 "io_harness.h"
typedef struct io_info_arg_s io_info_arg_t;
# 44 "io_harness.h"
struct io_info_arg_s {
# 45 "io_harness.h"
int grid[3];};
# 23 "halo_swap.h"
typedef struct halo_swap_s halo_swap_t;
# 27 "halo_swap.h"
typedef void (*f_pack_t)(halo_swap_t *, int, double *);
# 28 "halo_swap.h"
typedef void (*f_unpack_t)(halo_swap_t *, int, double *);
# 28 "field.h"
typedef struct field_s field_t;
# 30 "field.h"
typedef enum field_halo_enum_t field_halo_enum_t;
# 21 "field_s.h"
struct field_s {
# 22 "field_s.h"
int nf;
# 23 "field_s.h"
int nhcomm;
# 24 "field_s.h"
int nsites;
# 25 "field_s.h"
double *data;
# 26 "field_s.h"
char *name;
# 28 "field_s.h"
pe_t *pe;
# 29 "field_s.h"
cs_t *cs;
# 30 "field_s.h"
lees_edw_t *le;
# 31 "field_s.h"
io_info_t *info;
# 32 "field_s.h"
halo_swap_t *halo;
# 34 "field_s.h"
field_t *target;};
# 149 "/usr/local/cuda-10.1/include/crt/common_functions.h" 3
___device__(extern  __no_sc__) __attribute__((__malloc__)) __attribute__((__nothrow__)) void *malloc(size_t);
# 150 "/usr/local/cuda-10.1/include/crt/common_functions.h" 3
___device__(extern  __no_sc__) __attribute__((__nothrow__)) void free(void *);
# 68 "/usr/include/assert.h" 3
___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__noreturn__)) void __assert_fail(const char *, const char *, unsigned, const char *);
#if !defined(__CUDABE__)
# 185 "/usr/include/bits/mathcalls.h" 3
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) __attribute__((__const__)) double floor(double);
#endif
#if !defined(__CUDABE__)
# 188 "/usr/include/bits/mathcalls.h" 3
 __device_builtin__ ___device__(extern  __no_sc__) __attribute__((__nothrow__)) double fmod(double, double);
#endif
# 49 ".././target/target.h"
___device__(extern  __no_sc__) tdpError_t _Z17tdpGetDeviceCountPi(int *);
# 82 ".././target/target.h"
___device__(extern  __no_sc__) tdpError_t _Z7tdpFreePv(void *);
# 83 ".././target/target.h"
___device__(extern  __no_sc__) tdpError_t _Z9tdpMallocPPvm(void **, size_t);
# 54 "coords.h"
___device__(extern  __no_sc__) int _Z9cs_cartszP8coords_sPi(cs_t *, int *);
# 57 "coords.h"
___device__(extern  __no_sc__) int _Z7cs_ltotP8coords_sPd(cs_t *, double *);
# 59 "coords.h"
___device__(extern  __no_sc__) int _Z9cs_nlocalP8coords_sPi(cs_t *, int *);
# 60 "coords.h"
___device__(extern  __no_sc__) int _Z16cs_nlocal_offsetP8coords_sPi(cs_t *, int *);
# 61 "coords.h"
___device__(extern  __no_sc__) int _Z8cs_nhaloP8coords_sPi(cs_t *, int *);
# 63 "coords.h"
___device__(extern  __no_sc__) int _Z9cs_ntotalP8coords_sPi(cs_t *, int *);
# 64 "coords.h"
___device__(extern  __no_sc__) int _Z9cs_nsitesP8coords_sPi(cs_t *, int *);
# 203 "memory.h"
___device__(extern  __no_sc__) int _Z25reverse_addr_rank1_assertiPKciiii(int, const char *, int, int, int, int);
# 55 "leesedwards.h"
___device__(extern  __no_sc__) int _Z15lees_edw_nsitesP10lees_edw_sPi(lees_edw_t *, int *);
# 57 "leesedwards.h"
___device__(extern  __no_sc__) int _Z14lees_edw_indexP10lees_edw_siii(lees_edw_t *, int, int, int);
# 71 "leesedwards.h"
___device__(extern  __no_sc__) int _Z17lees_edw_nxbufferP10lees_edw_sPi(lees_edw_t *, int *);
# 78 "leesedwards.h"
___device__(extern  __no_sc__) int _Z22lees_edw_ibuff_to_realP10lees_edw_si(lees_edw_t *, int);
# 47 "util.h"
___device__(extern  __no_sc__) int _Z4iminii(const int, const int);
# 48 "util.h"
___device__(extern  __no_sc__) int _Z4imaxii(const int, const int);
# 41 "halo_swap.h"
__global__ __var_used__ extern void _Z20halo_swap_pack_rank1P11halo_swap_siPd(halo_swap_t *, int, double *);
# 42 "halo_swap.h"
__global__ __var_used__ extern void _Z22halo_swap_unpack_rank1P11halo_swap_siPd(halo_swap_t *, int, double *);
# 246 "field.c"
___device__(extern  __no_sc__) int _Z8field_nfP7field_sPi(field_t *, int *);
# 657 "field.c"
___device__(extern  __no_sc__) int _Z12field_scalarP7field_siPd(field_t *, int, double *);
# 676 "field.c"
___device__(extern  __no_sc__) int _Z16field_scalar_setP7field_sid(field_t *, int, double);
# 694 "field.c"
___device__(extern  __no_sc__) int _Z12field_vectorP7field_siPd(field_t *, int, double *);
# 716 "field.c"
___device__(extern  __no_sc__) int _Z16field_vector_setP7field_siPKd(field_t *, int, const double *);
# 741 "field.c"
___device__(extern  __no_sc__) int _Z12field_tensorP7field_siPA3_d(field_t *, int, double (*)[3]);
# 771 "field.c"
___device__(extern  __no_sc__) int _Z16field_tensor_setP7field_siPA3_d(field_t *, int, double (*)[3]);
# 799 "field.c"
___device__(extern  __no_sc__) int _Z18field_scalar_arrayP7field_siPd(field_t *, int, double *);
# 821 "field.c"
___device__(extern  __no_sc__) int _Z22field_scalar_array_setP7field_siPKd(field_t *, int, const double *);
static  __device__  __var_used__ const char __T4[31];
static  __device__  __var_used__ const char __T11[43];
static  __device__  __var_used__ const char __T12[45];
static  __device__  __var_used__ const char __T13[43];
static  __device__  __var_used__ const char __T14[53];
static  __device__  __var_used__ const char __T15[48];
static  __device__  __var_used__ const char __T16[52];
static  __device__  __var_used__ const char __T17[49];
static  __device__  __var_used__ const char __T18[59];
#include "common_functions.h"
static  __device__  __var_used__ const char __T4[31] = "int field_nf(field_s *, int *)";
static  __device__  __var_used__ const char __T11[43] = "int field_scalar(field_s *, int, double *)";
static  __device__  __var_used__ const char __T12[45] = "int field_scalar_set(field_s *, int, double)";
static  __device__  __var_used__ const char __T13[43] = "int field_vector(field_s *, int, double *)";
static  __device__  __var_used__ const char __T14[53] = "int field_vector_set(field_s *, int, const double *)";
static  __device__  __var_used__ const char __T15[48] = "int field_tensor(field_s *, int, double (*)[3])";
static  __device__  __var_used__ const char __T16[52] = "int field_tensor_set(field_s *, int, double (*)[3])";
static  __device__  __var_used__ const char __T17[49] = "int field_scalar_array(field_s *, int, double *)";
static  __device__  __var_used__ const char __T18[59] = "int field_scalar_array_set(field_s *, int, const double *)";
#if !defined(__CUDABE__)
#endif
#if !defined(__CUDABE__)
#endif
# 246 "field.c"
___device__( __no_sc__) int _Z8field_nfP7field_sPi(
# 246 "field.c"
field_t *obj, 
# 246 "field.c"
int *nf){
# 246 "field.c"
{
# 248 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 248U, __T4));
# 249 "field.c"
(nf) ? ((void)0) : (__assert_fail(((const char *)"nf"), ((const char *)"field.c"), 249U, __T4));
# 251 "field.c"
(*nf) = (obj->nf);
# 253 "field.c"
return 0;
# 254 "field.c"
}}
# 657 "field.c"
___device__( __no_sc__) int _Z12field_scalarP7field_siPd(
# 657 "field.c"
field_t *obj, 
# 657 "field.c"
int index, 
# 657 "field.c"
double *phi){
# 657 "field.c"
{
# 659 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 659U, __T11));
# 660 "field.c"
((obj->nf) == 1) ? ((void)0) : (__assert_fail(((const char *)"obj->nf == 1"), ((const char *)"field.c"), 660U, __T11));
# 661 "field.c"
(obj->data) ? ((void)0) : (__assert_fail(((const char *)"obj->data"), ((const char *)"field.c"), 661U, __T11));
# 662 "field.c"
(phi) ? ((void)0) : (__assert_fail(((const char *)"phi"), ((const char *)"field.c"), 662U, __T11));
# 664 "field.c"
(*phi) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(664, ((const char *)"field.c"), (obj->nsites), 1, index, 0))]);
# 666 "field.c"
return 0;
# 667 "field.c"
}}
# 676 "field.c"
___device__( __no_sc__) int _Z16field_scalar_setP7field_sid(
# 676 "field.c"
field_t *obj, 
# 676 "field.c"
int index, 
# 676 "field.c"
double phi){
# 676 "field.c"
{
# 678 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 678U, __T12));
# 679 "field.c"
((obj->nf) == 1) ? ((void)0) : (__assert_fail(((const char *)"obj->nf == 1"), ((const char *)"field.c"), 679U, __T12));
# 680 "field.c"
(obj->data) ? ((void)0) : (__assert_fail(((const char *)"obj->data"), ((const char *)"field.c"), 680U, __T12));
# 682 "field.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(682, ((const char *)"field.c"), (obj->nsites), 1, index, 0))]) = phi;
# 684 "field.c"
return 0;
# 685 "field.c"
}}
# 694 "field.c"
___device__( __no_sc__) int _Z12field_vectorP7field_siPd(
# 694 "field.c"
field_t *obj, 
# 694 "field.c"
int index, 
# 694 "field.c"
double *p){
# 694 "field.c"
{
# 696 "field.c"
 int __cuda_local_var_20044_7_non_const_ia;
# 698 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 698U, __T13));
# 699 "field.c"
((obj->nf) == 3) ? ((void)0) : (__assert_fail(((const char *)"obj->nf == 3"), ((const char *)"field.c"), 699U, __T13));
# 700 "field.c"
(obj->data) ? ((void)0) : (__assert_fail(((const char *)"obj->data"), ((const char *)"field.c"), 700U, __T13));
# 702 "field.c"
for (__cuda_local_var_20044_7_non_const_ia = 0; (__cuda_local_var_20044_7_non_const_ia < 3); __cuda_local_var_20044_7_non_const_ia++)
# 702 "field.c"
{
# 703 "field.c"
(p[__cuda_local_var_20044_7_non_const_ia]) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(703, ((const char *)"field.c"), (obj->nsites), 3, index, __cuda_local_var_20044_7_non_const_ia))]);
# 704 "field.c"
}
# 706 "field.c"
return 0;
# 707 "field.c"
}}
# 716 "field.c"
___device__( __no_sc__) int _Z16field_vector_setP7field_siPKd(
# 716 "field.c"
field_t *obj, 
# 716 "field.c"
int index, 
# 716 "field.c"
const double *p){
# 716 "field.c"
{
# 718 "field.c"
 int __cuda_local_var_20066_7_non_const_ia;
# 720 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 720U, __T14));
# 721 "field.c"
((obj->nf) == 3) ? ((void)0) : (__assert_fail(((const char *)"obj->nf == 3"), ((const char *)"field.c"), 721U, __T14));
# 722 "field.c"
(obj->data) ? ((void)0) : (__assert_fail(((const char *)"obj->data"), ((const char *)"field.c"), 722U, __T14));
# 723 "field.c"
(p) ? ((void)0) : (__assert_fail(((const char *)"p"), ((const char *)"field.c"), 723U, __T14));
# 725 "field.c"
for (__cuda_local_var_20066_7_non_const_ia = 0; (__cuda_local_var_20066_7_non_const_ia < 3); __cuda_local_var_20066_7_non_const_ia++)
# 725 "field.c"
{
# 726 "field.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(726, ((const char *)"field.c"), (obj->nsites), 3, index, __cuda_local_var_20066_7_non_const_ia))]) = (p[__cuda_local_var_20066_7_non_const_ia]);
# 727 "field.c"
}
# 729 "field.c"
return 0;
# 730 "field.c"
}}
# 741 "field.c"
___device__( __no_sc__) int _Z12field_tensorP7field_siPA3_d(
# 741 "field.c"
field_t *obj, 
# 741 "field.c"
int index, 
# 741 "field.c"
double (*q)[3]){
# 741 "field.c"
{
# 743 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 743U, __T15));
# 744 "field.c"
((obj->nf) == 5) ? ((void)0) : (__assert_fail(((const char *)"obj->nf == 5"), ((const char *)"field.c"), 744U, __T15));
# 745 "field.c"
(obj->data) ? ((void)0) : (__assert_fail(((const char *)"obj->data"), ((const char *)"field.c"), 745U, __T15));
# 746 "field.c"
(q) ? ((void)0) : (__assert_fail(((const char *)"q"), ((const char *)"field.c"), 746U, __T15));
# 748 "field.c"
(((q[X]))[X]) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(748, ((const char *)"field.c"), (obj->nsites), 5, index, 0))]);
# 749 "field.c"
(((q[X]))[Y]) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(749, ((const char *)"field.c"), (obj->nsites), 5, index, 1))]);
# 750 "field.c"
(((q[X]))[Z]) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(750, ((const char *)"field.c"), (obj->nsites), 5, index, 2))]);
# 751 "field.c"
(((q[Y]))[X]) = (((q[X]))[Y]);
# 752 "field.c"
(((q[Y]))[Y]) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(752, ((const char *)"field.c"), (obj->nsites), 5, index, 3))]);
# 753 "field.c"
(((q[Y]))[Z]) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(753, ((const char *)"field.c"), (obj->nsites), 5, index, 4))]);
# 754 "field.c"
(((q[Z]))[X]) = (((q[X]))[Z]);
# 755 "field.c"
(((q[Z]))[Y]) = (((q[Y]))[Z]);
# 756 "field.c"
(((q[Z]))[Z]) = (((0.0) - (((q[X]))[X])) - (((q[Y]))[Y]));
# 758 "field.c"
return 0;
# 759 "field.c"
}}
# 771 "field.c"
___device__( __no_sc__) int _Z16field_tensor_setP7field_siPA3_d(
# 771 "field.c"
field_t *obj, 
# 771 "field.c"
int index, 
# 771 "field.c"
double (*q)[3]){
# 771 "field.c"
{
# 773 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 773U, __T16));
# 774 "field.c"
((obj->nf) == 5) ? ((void)0) : (__assert_fail(((const char *)"obj->nf == 5"), ((const char *)"field.c"), 774U, __T16));
# 775 "field.c"
(obj->data) ? ((void)0) : (__assert_fail(((const char *)"obj->data"), ((const char *)"field.c"), 775U, __T16));
# 776 "field.c"
(q) ? ((void)0) : (__assert_fail(((const char *)"q"), ((const char *)"field.c"), 776U, __T16));
# 778 "field.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(778, ((const char *)"field.c"), (obj->nsites), 5, index, 0))]) = (((q[X]))[X]);
# 779 "field.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(779, ((const char *)"field.c"), (obj->nsites), 5, index, 1))]) = (((q[X]))[Y]);
# 780 "field.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(780, ((const char *)"field.c"), (obj->nsites), 5, index, 2))]) = (((q[X]))[Z]);
# 781 "field.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(781, ((const char *)"field.c"), (obj->nsites), 5, index, 3))]) = (((q[Y]))[Y]);
# 782 "field.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(782, ((const char *)"field.c"), (obj->nsites), 5, index, 4))]) = (((q[Y]))[Z]);
# 784 "field.c"
return 0;
# 785 "field.c"
}}
# 799 "field.c"
___device__( __no_sc__) int _Z18field_scalar_arrayP7field_siPd(
# 799 "field.c"
field_t *obj, 
# 799 "field.c"
int index, 
# 799 "field.c"
double *array){
# 799 "field.c"
{
# 801 "field.c"
 int __cuda_local_var_20121_7_non_const_n;
# 803 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 803U, __T17));
# 804 "field.c"
(obj->data) ? ((void)0) : (__assert_fail(((const char *)"obj->data"), ((const char *)"field.c"), 804U, __T17));
# 805 "field.c"
(array) ? ((void)0) : (__assert_fail(((const char *)"array"), ((const char *)"field.c"), 805U, __T17));
# 807 "field.c"
for (__cuda_local_var_20121_7_non_const_n = 0; (__cuda_local_var_20121_7_non_const_n < (obj->nf)); __cuda_local_var_20121_7_non_const_n++)
# 807 "field.c"
{
# 808 "field.c"
(array[__cuda_local_var_20121_7_non_const_n]) = ((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(808, ((const char *)"field.c"), (obj->nsites), (obj->nf), index, __cuda_local_var_20121_7_non_const_n))]);
# 809 "field.c"
}
# 811 "field.c"
return 0;
# 812 "field.c"
}}
# 821 "field.c"
___device__( __no_sc__) int _Z22field_scalar_array_setP7field_siPKd(
# 821 "field.c"
field_t *obj, 
# 821 "field.c"
int index, 
# 821 "field.c"
const double *array){
# 821 "field.c"
{
# 823 "field.c"
 int __cuda_local_var_20143_7_non_const_n;
# 825 "field.c"
(obj) ? ((void)0) : (__assert_fail(((const char *)"obj"), ((const char *)"field.c"), 825U, __T18));
# 826 "field.c"
(obj->data) ? ((void)0) : (__assert_fail(((const char *)"obj->data"), ((const char *)"field.c"), 826U, __T18));
# 827 "field.c"
(array) ? ((void)0) : (__assert_fail(((const char *)"array"), ((const char *)"field.c"), 827U, __T18));
# 829 "field.c"
for (__cuda_local_var_20143_7_non_const_n = 0; (__cuda_local_var_20143_7_non_const_n < (obj->nf)); __cuda_local_var_20143_7_non_const_n++)
# 829 "field.c"
{
# 830 "field.c"
((obj->data)[(_Z25reverse_addr_rank1_assertiPKciiii(830, ((const char *)"field.c"), (obj->nsites), (obj->nf), index, __cuda_local_var_20143_7_non_const_n))]) = (array[__cuda_local_var_20143_7_non_const_n]);
# 831 "field.c"
}
# 833 "field.c"
return 0;
# 834 "field.c"
}}
