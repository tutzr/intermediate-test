//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z22field_grad_scalar_gradP12field_grad_siPd
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank2_assertiPKciiiiii
(
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_0,
	.param .b64 _Z25reverse_addr_rank2_assertiPKciiiiii_param_1,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_2,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_3,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_4,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_5,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_6,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_7
)
;
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank1_assertiPKciiii
(
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_0,
	.param .b64 _Z25reverse_addr_rank1_assertiPKciiii_param_1,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_2,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_3,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_4,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_5
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .align 1 .b8 __unnamed_1[58] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 99, 97, 108, 97, 114, 95, 103, 114, 97, 100, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_2[59] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 99, 97, 108, 97, 114, 95, 100, 101, 108, 115, 113, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[64] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 99, 97, 108, 97, 114, 95, 103, 114, 97, 100, 95, 100, 101, 108, 115, 113, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_4[65] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 99, 97, 108, 97, 114, 95, 100, 101, 108, 115, 113, 95, 100, 101, 108, 115, 113, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_5[62] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 99, 97, 108, 97, 114, 95, 100, 97, 98, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 51, 93, 41, 0};
.global .align 1 .b8 __unnamed_6[63] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 118, 101, 99, 116, 111, 114, 95, 103, 114, 97, 100, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 51, 93, 41, 0};
.global .align 1 .b8 __unnamed_7[59] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 118, 101, 99, 116, 111, 114, 95, 100, 101, 108, 115, 113, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_8[66] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 116, 101, 110, 115, 111, 114, 95, 103, 114, 97, 100, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 51, 93, 91, 51, 93, 41, 0};
.global .align 1 .b8 __unnamed_9[64] = {105, 110, 116, 32, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 116, 101, 110, 115, 111, 114, 95, 100, 101, 108, 115, 113, 40, 102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 40, 42, 41, 91, 51, 93, 41, 0};
.global .align 1 .b8 $str[4] = {111, 98, 106, 0};
.global .align 1 .b8 $str1[13] = {102, 105, 101, 108, 100, 95, 103, 114, 97, 100, 46, 99, 0};
.global .align 1 .b8 $str2[13] = {111, 98, 106, 45, 62, 110, 102, 32, 61, 61, 32, 49, 0};
.global .align 1 .b8 $str3[5] = {103, 114, 97, 100, 0};
.global .align 1 .b8 $str4[6] = {100, 101, 108, 115, 113, 0};
.global .align 1 .b8 $str5[3] = {100, 100, 0};
.global .align 1 .b8 $str6[13] = {111, 98, 106, 45, 62, 110, 102, 32, 61, 61, 32, 51, 0};
.global .align 1 .b8 $str7[3] = {100, 112, 0};
.global .align 1 .b8 $str8[13] = {111, 98, 106, 45, 62, 110, 102, 32, 61, 61, 32, 53, 0};
.global .align 1 .b8 $str9[3] = {100, 113, 0};
.global .align 1 .b8 $str10[4] = {100, 115, 113, 0};

.visible .func  (.param .b32 func_retval0) _Z22field_grad_scalar_gradP12field_grad_siPd(
	.param .b64 _Z22field_grad_scalar_gradP12field_grad_siPd_param_0,
	.param .b32 _Z22field_grad_scalar_gradP12field_grad_siPd_param_1,
	.param .b64 _Z22field_grad_scalar_gradP12field_grad_siPd_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<36>;


	ld.param.u64 	%rd2, [_Z22field_grad_scalar_gradP12field_grad_siPd_param_0];
	ld.param.u32 	%r1, [_Z22field_grad_scalar_gradP12field_grad_siPd_param_1];
	ld.param.u64 	%rd3, [_Z22field_grad_scalar_gradP12field_grad_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 323;
	mov.u64 	%rd10, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u32 	%r3, [%rd2+16];
	setp.eq.s32	%p2, %r3, 1;
	@%p2 bra 	BB0_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 324;
	mov.u64 	%rd17, 1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB0_4:
	setp.ne.s64	%p3, %rd3, 0;
	@%p3 bra 	BB0_6;

	mov.u64 	%rd18, $str3;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_1;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r5, 325;
	mov.u64 	%rd24, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB0_6:
	ld.u64 	%rd25, [%rd1+16];
	ld.u32 	%r6, [%rd1+8];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r7, 328;
	mov.u32 	%r8, 1;
	mov.u32 	%r9, 3;
	mov.u32 	%r10, 0;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 3
	mul.wide.s32 	%rd28, %r11, 8;
	add.s64 	%rd29, %rd25, %rd28;
	ld.f64 	%fd1, [%rd29];
	st.f64 	[%rd3], %fd1;
	ld.u64 	%rd30, [%rd1+16];
	ld.u32 	%r12, [%rd1+8];
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r8;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 4
	mul.wide.s32 	%rd31, %r13, 8;
	add.s64 	%rd32, %rd30, %rd31;
	ld.f64 	%fd2, [%rd32];
	st.f64 	[%rd3+8], %fd2;
	ld.u64 	%rd33, [%rd1+16];
	ld.u32 	%r14, [%rd1+8];
	mov.u32 	%r15, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r15;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 5
	mul.wide.s32 	%rd34, %r16, 8;
	add.s64 	%rd35, %rd33, %rd34;
	ld.f64 	%fd3, [%rd35];
	st.f64 	[%rd3+16], %fd3;
	st.param.b32	[func_retval0+0], %r10;
	ret;
}

	// .globl	_Z23field_grad_scalar_delsqP12field_grad_siPd
.visible .func  (.param .b32 func_retval0) _Z23field_grad_scalar_delsqP12field_grad_siPd(
	.param .b64 _Z23field_grad_scalar_delsqP12field_grad_siPd_param_0,
	.param .b32 _Z23field_grad_scalar_delsqP12field_grad_siPd_param_1,
	.param .b64 _Z23field_grad_scalar_delsqP12field_grad_siPd_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<30>;


	ld.param.u64 	%rd2, [_Z23field_grad_scalar_delsqP12field_grad_siPd_param_0];
	ld.param.u32 	%r1, [_Z23field_grad_scalar_delsqP12field_grad_siPd_param_1];
	ld.param.u64 	%rd3, [_Z23field_grad_scalar_delsqP12field_grad_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_2;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 343;
	mov.u64 	%rd10, 1;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB1_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u32 	%r3, [%rd2+16];
	setp.eq.s32	%p2, %r3, 1;
	@%p2 bra 	BB1_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_2;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 344;
	mov.u64 	%rd17, 1;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB1_4:
	setp.ne.s64	%p3, %rd3, 0;
	@%p3 bra 	BB1_6;

	mov.u64 	%rd18, $str4;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_2;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r5, 345;
	mov.u64 	%rd24, 1;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB1_6:
	ld.u64 	%rd25, [%rd1+24];
	ld.u32 	%r6, [%rd1+8];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r7, 347;
	mov.u32 	%r8, 1;
	mov.u32 	%r9, 0;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 9
	mul.wide.s32 	%rd28, %r10, 8;
	add.s64 	%rd29, %rd25, %rd28;
	ld.f64 	%fd1, [%rd29];
	st.f64 	[%rd3], %fd1;
	st.param.b32	[func_retval0+0], %r9;
	ret;
}

	// .globl	_Z28field_grad_scalar_grad_delsqP12field_grad_siPd
.visible .func  (.param .b32 func_retval0) _Z28field_grad_scalar_grad_delsqP12field_grad_siPd(
	.param .b64 _Z28field_grad_scalar_grad_delsqP12field_grad_siPd_param_0,
	.param .b32 _Z28field_grad_scalar_grad_delsqP12field_grad_siPd_param_1,
	.param .b64 _Z28field_grad_scalar_grad_delsqP12field_grad_siPd_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<36>;


	ld.param.u64 	%rd2, [_Z28field_grad_scalar_grad_delsqP12field_grad_siPd_param_0];
	ld.param.u32 	%r1, [_Z28field_grad_scalar_grad_delsqP12field_grad_siPd_param_1];
	ld.param.u64 	%rd3, [_Z28field_grad_scalar_grad_delsqP12field_grad_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_3;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 363;
	mov.u64 	%rd10, 1;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10

BB2_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u32 	%r3, [%rd2+16];
	setp.eq.s32	%p2, %r3, 1;
	@%p2 bra 	BB2_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_3;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 364;
	mov.u64 	%rd17, 1;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11

BB2_4:
	setp.ne.s64	%p3, %rd3, 0;
	@%p3 bra 	BB2_6;

	mov.u64 	%rd18, $str3;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_3;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r5, 365;
	mov.u64 	%rd24, 1;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12

BB2_6:
	ld.u64 	%rd25, [%rd1+40];
	ld.u32 	%r6, [%rd1+8];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r7, 368;
	mov.u32 	%r8, 3;
	mov.u32 	%r9, 0;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 13
	mul.wide.s32 	%rd28, %r10, 8;
	add.s64 	%rd29, %rd25, %rd28;
	ld.f64 	%fd1, [%rd29];
	st.f64 	[%rd3], %fd1;
	ld.u64 	%rd30, [%rd1+40];
	ld.u32 	%r11, [%rd1+8];
	mov.u32 	%r12, 1;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 14
	mul.wide.s32 	%rd31, %r13, 8;
	add.s64 	%rd32, %rd30, %rd31;
	ld.f64 	%fd2, [%rd32];
	st.f64 	[%rd3+8], %fd2;
	ld.u64 	%rd33, [%rd1+40];
	ld.u32 	%r14, [%rd1+8];
	mov.u32 	%r15, 2;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r15;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 15
	mul.wide.s32 	%rd34, %r16, 8;
	add.s64 	%rd35, %rd33, %rd34;
	ld.f64 	%fd3, [%rd35];
	st.f64 	[%rd3+16], %fd3;
	st.param.b32	[func_retval0+0], %r9;
	ret;
}

	// .globl	_Z29field_grad_scalar_delsq_delsqP12field_grad_siPd
.visible .func  (.param .b32 func_retval0) _Z29field_grad_scalar_delsq_delsqP12field_grad_siPd(
	.param .b64 _Z29field_grad_scalar_delsq_delsqP12field_grad_siPd_param_0,
	.param .b32 _Z29field_grad_scalar_delsq_delsqP12field_grad_siPd_param_1,
	.param .b64 _Z29field_grad_scalar_delsq_delsqP12field_grad_siPd_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<11>;
	.reg .f64 	%fd<2>;
	.reg .b64 	%rd<30>;


	ld.param.u64 	%rd2, [_Z29field_grad_scalar_delsq_delsqP12field_grad_siPd_param_0];
	ld.param.u32 	%r1, [_Z29field_grad_scalar_delsq_delsqP12field_grad_siPd_param_1];
	ld.param.u64 	%rd3, [_Z29field_grad_scalar_delsq_delsqP12field_grad_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_4;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 383;
	mov.u64 	%rd10, 1;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB3_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u32 	%r3, [%rd2+16];
	setp.eq.s32	%p2, %r3, 1;
	@%p2 bra 	BB3_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_4;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 384;
	mov.u64 	%rd17, 1;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB3_4:
	setp.ne.s64	%p3, %rd3, 0;
	@%p3 bra 	BB3_6;

	mov.u64 	%rd18, $str5;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_4;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r5, 385;
	mov.u64 	%rd24, 1;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB3_6:
	ld.u64 	%rd25, [%rd1+48];
	ld.u32 	%r6, [%rd1+8];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r7, 387;
	mov.u32 	%r8, 1;
	mov.u32 	%r9, 0;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 19
	mul.wide.s32 	%rd28, %r10, 8;
	add.s64 	%rd29, %rd25, %rd28;
	ld.f64 	%fd1, [%rd29];
	st.f64 	[%rd3], %fd1;
	st.param.b32	[func_retval0+0], %r9;
	ret;
}

	// .globl	_Z21field_grad_scalar_dabP12field_grad_siPA3_d
.visible .func  (.param .b32 func_retval0) _Z21field_grad_scalar_dabP12field_grad_siPA3_d(
	.param .b64 _Z21field_grad_scalar_dabP12field_grad_siPA3_d_param_0,
	.param .b32 _Z21field_grad_scalar_dabP12field_grad_siPA3_d_param_1,
	.param .b64 _Z21field_grad_scalar_dabP12field_grad_siPA3_d_param_2
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<30>;
	.reg .f64 	%fd<9>;
	.reg .b64 	%rd<38>;


	ld.param.u64 	%rd2, [_Z21field_grad_scalar_dabP12field_grad_siPA3_d_param_0];
	ld.param.u32 	%r1, [_Z21field_grad_scalar_dabP12field_grad_siPA3_d_param_1];
	ld.param.u64 	%rd3, [_Z21field_grad_scalar_dabP12field_grad_siPA3_d_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_5;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 403;
	mov.u64 	%rd10, 1;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB4_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u32 	%r3, [%rd2+16];
	setp.eq.s32	%p2, %r3, 1;
	@%p2 bra 	BB4_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 404;
	mov.u64 	%rd17, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB4_4:
	ld.u64 	%rd18, [%rd1+32];
	ld.u32 	%r5, [%rd1+8];
	mov.u64 	%rd19, $str1;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r6, 406;
	mov.u32 	%r7, 6;
	mov.u32 	%r8, 0;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b32 param3;
	st.param.b32	[param3+0], %r7;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r8;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r9, [retval0+0];
	
	//{
	}// Callseq End 22
	mul.wide.s32 	%rd21, %r9, 8;
	add.s64 	%rd22, %rd18, %rd21;
	ld.f64 	%fd1, [%rd22];
	st.f64 	[%rd3], %fd1;
	ld.u64 	%rd23, [%rd1+32];
	ld.u32 	%r10, [%rd1+8];
	mov.u32 	%r11, 407;
	mov.u32 	%r12, 1;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r10;
	.param .b32 param3;
	st.param.b32	[param3+0], %r7;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 23
	mul.wide.s32 	%rd24, %r13, 8;
	add.s64 	%rd25, %rd23, %rd24;
	ld.f64 	%fd2, [%rd25];
	st.f64 	[%rd3+8], %fd2;
	ld.u64 	%rd26, [%rd1+32];
	ld.u32 	%r14, [%rd1+8];
	mov.u32 	%r15, 408;
	mov.u32 	%r16, 2;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32	[param3+0], %r7;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r16;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r17, [retval0+0];
	
	//{
	}// Callseq End 24
	mul.wide.s32 	%rd27, %r17, 8;
	add.s64 	%rd28, %rd26, %rd27;
	ld.f64 	%fd3, [%rd28];
	st.f64 	[%rd3+16], %fd3;
	ld.f64 	%fd4, [%rd3+8];
	st.f64 	[%rd3+24], %fd4;
	ld.u64 	%rd29, [%rd1+32];
	ld.u32 	%r18, [%rd1+8];
	mov.u32 	%r19, 410;
	mov.u32 	%r20, 3;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b32 param3;
	st.param.b32	[param3+0], %r7;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r20;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r21, [retval0+0];
	
	//{
	}// Callseq End 25
	mul.wide.s32 	%rd30, %r21, 8;
	add.s64 	%rd31, %rd29, %rd30;
	ld.f64 	%fd5, [%rd31];
	st.f64 	[%rd3+32], %fd5;
	ld.u64 	%rd32, [%rd1+32];
	ld.u32 	%r22, [%rd1+8];
	mov.u32 	%r23, 411;
	mov.u32 	%r24, 4;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r7;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r24;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r25, [retval0+0];
	
	//{
	}// Callseq End 26
	mul.wide.s32 	%rd33, %r25, 8;
	add.s64 	%rd34, %rd32, %rd33;
	ld.f64 	%fd6, [%rd34];
	st.f64 	[%rd3+40], %fd6;
	st.f64 	[%rd3+56], %fd6;
	ld.f64 	%fd7, [%rd3+16];
	st.f64 	[%rd3+48], %fd7;
	ld.u64 	%rd35, [%rd1+32];
	ld.u32 	%r26, [%rd1+8];
	mov.u32 	%r27, 414;
	mov.u32 	%r28, 5;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r27;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r26;
	.param .b32 param3;
	st.param.b32	[param3+0], %r7;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r28;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r29, [retval0+0];
	
	//{
	}// Callseq End 27
	mul.wide.s32 	%rd36, %r29, 8;
	add.s64 	%rd37, %rd35, %rd36;
	ld.f64 	%fd8, [%rd37];
	st.f64 	[%rd3+64], %fd8;
	st.param.b32	[func_retval0+0], %r8;
	ret;
}

	// .globl	_Z22field_grad_vector_gradP12field_grad_siPA3_d
.visible .func  (.param .b32 func_retval0) _Z22field_grad_vector_gradP12field_grad_siPA3_d(
	.param .b64 _Z22field_grad_vector_gradP12field_grad_siPA3_d_param_0,
	.param .b32 _Z22field_grad_vector_gradP12field_grad_siPA3_d_param_1,
	.param .b64 _Z22field_grad_vector_gradP12field_grad_siPA3_d_param_2
)
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<48>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<51>;


	ld.param.u64 	%rd10, [_Z22field_grad_vector_gradP12field_grad_siPA3_d_param_0];
	ld.param.u32 	%r16, [_Z22field_grad_vector_gradP12field_grad_siPA3_d_param_1];
	ld.param.u64 	%rd11, [_Z22field_grad_vector_gradP12field_grad_siPA3_d_param_2];
	setp.ne.s64	%p1, %rd10, 0;
	@%p1 bra 	BB5_2;

	mov.u64 	%rd12, $str;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_6;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r17, 432;
	mov.u64 	%rd18, 1;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 28

BB5_2:
	add.s64 	%rd1, %rd10, 16;
	ld.u32 	%r18, [%rd10+16];
	setp.eq.s32	%p2, %r18, 3;
	@%p2 bra 	BB5_4;

	mov.u64 	%rd19, $str6;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, $str1;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, __unnamed_6;
	cvta.global.u64 	%rd24, %rd23;
	mov.u32 	%r19, 433;
	mov.u64 	%rd25, 1;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd22;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd24;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd25;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 29

BB5_4:
	setp.ne.s64	%p3, %rd11, 0;
	@%p3 bra 	BB5_6;

	mov.u64 	%rd26, $str7;
	cvta.global.u64 	%rd27, %rd26;
	mov.u64 	%rd28, $str1;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, __unnamed_6;
	cvta.global.u64 	%rd31, %rd30;
	mov.u32 	%r20, 434;
	mov.u64 	%rd32, 1;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd27;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd29;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd31;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd32;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 30

BB5_6:
	ld.u32 	%r45, [%rd1];
	mov.u32 	%r21, 0;
	setp.lt.s32	%p4, %r45, 1;
	@%p4 bra 	BB5_9;

	mov.u64 	%rd48, %rd11;
	mov.u32 	%r41, %r21;

BB5_8:
	ld.u64 	%rd33, [%rd1+16];
	ld.u32 	%r22, [%rd1+8];
	mov.u64 	%rd34, $str1;
	cvta.global.u64 	%rd35, %rd34;
	mov.u32 	%r23, 438;
	mov.u32 	%r24, 3;
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r45;
	.param .b32 param4;
	st.param.b32	[param4+0], %r24;
	.param .b32 param5;
	st.param.b32	[param5+0], %r16;
	.param .b32 param6;
	st.param.b32	[param6+0], %r41;
	.param .b32 param7;
	st.param.b32	[param7+0], %r21;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r26, [retval0+0];
	
	//{
	}// Callseq End 31
	mul.wide.s32 	%rd36, %r26, 8;
	add.s64 	%rd37, %rd33, %rd36;
	ld.f64 	%fd1, [%rd37];
	st.f64 	[%rd48], %fd1;
	add.s64 	%rd48, %rd48, 8;
	ld.u32 	%r45, [%rd1];
	add.s32 	%r41, %r41, 1;
	setp.lt.s32	%p5, %r41, %r45;
	@%p5 bra 	BB5_8;

BB5_9:
	setp.lt.s32	%p6, %r45, 1;
	@%p6 bra 	BB5_12;

	add.s64 	%rd49, %rd11, 24;
	mov.u32 	%r44, 0;

BB5_11:
	ld.u64 	%rd38, [%rd1+16];
	ld.u32 	%r28, [%rd1+8];
	mov.u64 	%rd39, $str1;
	cvta.global.u64 	%rd40, %rd39;
	mov.u32 	%r29, 438;
	mov.u32 	%r30, 3;
	mov.u32 	%r31, 1;
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd40;
	.param .b32 param2;
	st.param.b32	[param2+0], %r28;
	.param .b32 param3;
	st.param.b32	[param3+0], %r45;
	.param .b32 param4;
	st.param.b32	[param4+0], %r30;
	.param .b32 param5;
	st.param.b32	[param5+0], %r16;
	.param .b32 param6;
	st.param.b32	[param6+0], %r44;
	.param .b32 param7;
	st.param.b32	[param7+0], %r31;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 32
	mul.wide.s32 	%rd41, %r32, 8;
	add.s64 	%rd42, %rd38, %rd41;
	ld.f64 	%fd2, [%rd42];
	st.f64 	[%rd49], %fd2;
	add.s64 	%rd49, %rd49, 8;
	ld.u32 	%r45, [%rd1];
	add.s32 	%r44, %r44, 1;
	setp.lt.s32	%p7, %r44, %r45;
	@%p7 bra 	BB5_11;

BB5_12:
	setp.lt.s32	%p8, %r45, 1;
	@%p8 bra 	BB5_15;

	add.s64 	%rd50, %rd11, 48;
	mov.u32 	%r47, 0;

BB5_14:
	ld.u64 	%rd43, [%rd1+16];
	ld.u32 	%r34, [%rd1+8];
	mov.u64 	%rd44, $str1;
	cvta.global.u64 	%rd45, %rd44;
	mov.u32 	%r35, 438;
	mov.u32 	%r36, 3;
	mov.u32 	%r37, 2;
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r35;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b32 param3;
	st.param.b32	[param3+0], %r45;
	.param .b32 param4;
	st.param.b32	[param4+0], %r36;
	.param .b32 param5;
	st.param.b32	[param5+0], %r16;
	.param .b32 param6;
	st.param.b32	[param6+0], %r47;
	.param .b32 param7;
	st.param.b32	[param7+0], %r37;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r38, [retval0+0];
	
	//{
	}// Callseq End 33
	mul.wide.s32 	%rd46, %r38, 8;
	add.s64 	%rd47, %rd43, %rd46;
	ld.f64 	%fd3, [%rd47];
	st.f64 	[%rd50], %fd3;
	add.s64 	%rd50, %rd50, 8;
	ld.u32 	%r45, [%rd1];
	add.s32 	%r47, %r47, 1;
	setp.lt.s32	%p9, %r47, %r45;
	@%p9 bra 	BB5_14;

BB5_15:
	mov.u32 	%r39, 0;
	st.param.b32	[func_retval0+0], %r39;
	ret;
}

	// .globl	_Z23field_grad_vector_delsqP12field_grad_siPd
.visible .func  (.param .b32 func_retval0) _Z23field_grad_vector_delsqP12field_grad_siPd(
	.param .b64 _Z23field_grad_vector_delsqP12field_grad_siPd_param_0,
	.param .b32 _Z23field_grad_vector_delsqP12field_grad_siPd_param_1,
	.param .b64 _Z23field_grad_vector_delsqP12field_grad_siPd_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<17>;
	.reg .f64 	%fd<4>;
	.reg .b64 	%rd<36>;


	ld.param.u64 	%rd2, [_Z23field_grad_vector_delsqP12field_grad_siPd_param_0];
	ld.param.u32 	%r1, [_Z23field_grad_vector_delsqP12field_grad_siPd_param_1];
	ld.param.u64 	%rd3, [_Z23field_grad_vector_delsqP12field_grad_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB6_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_7;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 456;
	mov.u64 	%rd10, 1;
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 34

BB6_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u32 	%r3, [%rd2+16];
	setp.eq.s32	%p2, %r3, 3;
	@%p2 bra 	BB6_4;

	mov.u64 	%rd11, $str6;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_7;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 457;
	mov.u64 	%rd17, 1;
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 35

BB6_4:
	setp.ne.s64	%p3, %rd3, 0;
	@%p3 bra 	BB6_6;

	mov.u64 	%rd18, $str4;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_7;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r5, 458;
	mov.u64 	%rd24, 1;
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 36

BB6_6:
	ld.u64 	%rd25, [%rd1+24];
	ld.u32 	%r6, [%rd1+8];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r7, 461;
	mov.u32 	%r8, 3;
	mov.u32 	%r9, 0;
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 37
	mul.wide.s32 	%rd28, %r10, 8;
	add.s64 	%rd29, %rd25, %rd28;
	ld.f64 	%fd1, [%rd29];
	st.f64 	[%rd3], %fd1;
	ld.u64 	%rd30, [%rd1+24];
	ld.u32 	%r11, [%rd1+8];
	mov.u32 	%r12, 1;
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r12;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r13, [retval0+0];
	
	//{
	}// Callseq End 38
	mul.wide.s32 	%rd31, %r13, 8;
	add.s64 	%rd32, %rd30, %rd31;
	ld.f64 	%fd2, [%rd32];
	st.f64 	[%rd3+8], %fd2;
	ld.u64 	%rd33, [%rd1+24];
	ld.u32 	%r14, [%rd1+8];
	mov.u32 	%r15, 2;
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r15;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 39
	mul.wide.s32 	%rd34, %r16, 8;
	add.s64 	%rd35, %rd33, %rd34;
	ld.f64 	%fd3, [%rd35];
	st.f64 	[%rd3+16], %fd3;
	st.param.b32	[func_retval0+0], %r9;
	ret;
}

	// .globl	_Z22field_grad_tensor_gradP12field_grad_siPA3_A3_d
.visible .func  (.param .b32 func_retval0) _Z22field_grad_tensor_gradP12field_grad_siPA3_A3_d(
	.param .b64 _Z22field_grad_tensor_gradP12field_grad_siPA3_A3_d_param_0,
	.param .b32 _Z22field_grad_tensor_gradP12field_grad_siPA3_A3_d_param_1,
	.param .b64 _Z22field_grad_tensor_gradP12field_grad_siPA3_A3_d_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<47>;
	.reg .f64 	%fd<35>;
	.reg .b64 	%rd<72>;


	ld.param.u64 	%rd2, [_Z22field_grad_tensor_gradP12field_grad_siPA3_A3_d_param_0];
	ld.param.u32 	%r1, [_Z22field_grad_tensor_gradP12field_grad_siPA3_A3_d_param_1];
	ld.param.u64 	%rd3, [_Z22field_grad_tensor_gradP12field_grad_siPA3_A3_d_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB7_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_8;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 480;
	mov.u64 	%rd10, 1;
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 40

BB7_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u32 	%r3, [%rd2+16];
	setp.eq.s32	%p2, %r3, 5;
	@%p2 bra 	BB7_4;

	mov.u64 	%rd11, $str8;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_8;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 481;
	mov.u64 	%rd17, 1;
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 41

BB7_4:
	setp.ne.s64	%p3, %rd3, 0;
	@%p3 bra 	BB7_6;

	mov.u64 	%rd18, $str9;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_8;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r5, 482;
	mov.u64 	%rd24, 1;
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 42

BB7_6:
	ld.u64 	%rd25, [%rd1+16];
	ld.u32 	%r6, [%rd1+8];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r7, 485;
	mov.u32 	%r8, 5;
	mov.u32 	%r9, 3;
	mov.u32 	%r10, 0;
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 43
	mul.wide.s32 	%rd28, %r11, 8;
	add.s64 	%rd29, %rd25, %rd28;
	ld.f64 	%fd1, [%rd29];
	st.f64 	[%rd3], %fd1;
	ld.u64 	%rd30, [%rd1+16];
	ld.u32 	%r12, [%rd1+8];
	mov.u32 	%r13, 486;
	mov.u32 	%r14, 1;
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 44
	mul.wide.s32 	%rd31, %r15, 8;
	add.s64 	%rd32, %rd30, %rd31;
	ld.f64 	%fd2, [%rd32];
	st.f64 	[%rd3+8], %fd2;
	ld.u64 	%rd33, [%rd1+16];
	ld.u32 	%r16, [%rd1+8];
	mov.u32 	%r17, 487;
	mov.u32 	%r18, 2;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r18;
	.param .b32 param7;
	st.param.b32	[param7+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 45
	mul.wide.s32 	%rd34, %r19, 8;
	add.s64 	%rd35, %rd33, %rd34;
	ld.f64 	%fd3, [%rd35];
	st.f64 	[%rd3+16], %fd3;
	ld.f64 	%fd4, [%rd3+8];
	st.f64 	[%rd3+24], %fd4;
	ld.u64 	%rd36, [%rd1+16];
	ld.u32 	%r20, [%rd1+8];
	mov.u32 	%r21, 489;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 46
	mul.wide.s32 	%rd37, %r22, 8;
	add.s64 	%rd38, %rd36, %rd37;
	ld.f64 	%fd5, [%rd38];
	st.f64 	[%rd3+32], %fd5;
	ld.u64 	%rd39, [%rd1+16];
	ld.u32 	%r23, [%rd1+8];
	mov.u32 	%r24, 490;
	mov.u32 	%r25, 4;
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r23;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r25;
	.param .b32 param7;
	st.param.b32	[param7+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r26, [retval0+0];
	
	//{
	}// Callseq End 47
	mul.wide.s32 	%rd40, %r26, 8;
	add.s64 	%rd41, %rd39, %rd40;
	ld.f64 	%fd6, [%rd41];
	st.f64 	[%rd3+40], %fd6;
	st.f64 	[%rd3+56], %fd6;
	ld.f64 	%fd7, [%rd3+16];
	ld.f64 	%fd8, [%rd3];
	ld.f64 	%fd9, [%rd3+32];
	st.f64 	[%rd3+48], %fd7;
	mov.f64 	%fd10, 0d0000000000000000;
	sub.f64 	%fd11, %fd10, %fd8;
	sub.f64 	%fd12, %fd11, %fd9;
	st.f64 	[%rd3+64], %fd12;
	ld.u64 	%rd42, [%rd1+16];
	ld.u32 	%r27, [%rd1+8];
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r27;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r28, [retval0+0];
	
	//{
	}// Callseq End 48
	mul.wide.s32 	%rd43, %r28, 8;
	add.s64 	%rd44, %rd42, %rd43;
	ld.f64 	%fd13, [%rd44];
	st.f64 	[%rd3+72], %fd13;
	ld.u64 	%rd45, [%rd1+16];
	ld.u32 	%r29, [%rd1+8];
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r29;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r30, [retval0+0];
	
	//{
	}// Callseq End 49
	mul.wide.s32 	%rd46, %r30, 8;
	add.s64 	%rd47, %rd45, %rd46;
	ld.f64 	%fd14, [%rd47];
	st.f64 	[%rd3+80], %fd14;
	ld.u64 	%rd48, [%rd1+16];
	ld.u32 	%r31, [%rd1+8];
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r18;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 50
	mul.wide.s32 	%rd49, %r32, 8;
	add.s64 	%rd50, %rd48, %rd49;
	ld.f64 	%fd15, [%rd50];
	st.f64 	[%rd3+88], %fd15;
	ld.f64 	%fd16, [%rd3+80];
	st.f64 	[%rd3+96], %fd16;
	ld.u64 	%rd51, [%rd1+16];
	ld.u32 	%r33, [%rd1+8];
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r33;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r34, [retval0+0];
	
	//{
	}// Callseq End 51
	mul.wide.s32 	%rd52, %r34, 8;
	add.s64 	%rd53, %rd51, %rd52;
	ld.f64 	%fd17, [%rd53];
	st.f64 	[%rd3+104], %fd17;
	ld.u64 	%rd54, [%rd1+16];
	ld.u32 	%r35, [%rd1+8];
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r35;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r25;
	.param .b32 param7;
	st.param.b32	[param7+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r36, [retval0+0];
	
	//{
	}// Callseq End 52
	mul.wide.s32 	%rd55, %r36, 8;
	add.s64 	%rd56, %rd54, %rd55;
	ld.f64 	%fd18, [%rd56];
	st.f64 	[%rd3+112], %fd18;
	st.f64 	[%rd3+128], %fd18;
	ld.f64 	%fd19, [%rd3+88];
	ld.f64 	%fd20, [%rd3+72];
	ld.f64 	%fd21, [%rd3+104];
	st.f64 	[%rd3+120], %fd19;
	sub.f64 	%fd22, %fd10, %fd20;
	sub.f64 	%fd23, %fd22, %fd21;
	st.f64 	[%rd3+136], %fd23;
	ld.u64 	%rd57, [%rd1+16];
	ld.u32 	%r37, [%rd1+8];
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r10;
	.param .b32 param7;
	st.param.b32	[param7+0], %r18;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r38, [retval0+0];
	
	//{
	}// Callseq End 53
	mul.wide.s32 	%rd58, %r38, 8;
	add.s64 	%rd59, %rd57, %rd58;
	ld.f64 	%fd24, [%rd59];
	st.f64 	[%rd3+144], %fd24;
	ld.u64 	%rd60, [%rd1+16];
	ld.u32 	%r39, [%rd1+8];
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r39;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r14;
	.param .b32 param7;
	st.param.b32	[param7+0], %r18;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r40, [retval0+0];
	
	//{
	}// Callseq End 54
	mul.wide.s32 	%rd61, %r40, 8;
	add.s64 	%rd62, %rd60, %rd61;
	ld.f64 	%fd25, [%rd62];
	st.f64 	[%rd3+152], %fd25;
	ld.u64 	%rd63, [%rd1+16];
	ld.u32 	%r41, [%rd1+8];
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r17;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r41;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r18;
	.param .b32 param7;
	st.param.b32	[param7+0], %r18;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r42, [retval0+0];
	
	//{
	}// Callseq End 55
	mul.wide.s32 	%rd64, %r42, 8;
	add.s64 	%rd65, %rd63, %rd64;
	ld.f64 	%fd26, [%rd65];
	st.f64 	[%rd3+160], %fd26;
	ld.f64 	%fd27, [%rd3+152];
	st.f64 	[%rd3+168], %fd27;
	ld.u64 	%rd66, [%rd1+16];
	ld.u32 	%r43, [%rd1+8];
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r43;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r9;
	.param .b32 param7;
	st.param.b32	[param7+0], %r18;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r44, [retval0+0];
	
	//{
	}// Callseq End 56
	mul.wide.s32 	%rd67, %r44, 8;
	add.s64 	%rd68, %rd66, %rd67;
	ld.f64 	%fd28, [%rd68];
	st.f64 	[%rd3+176], %fd28;
	ld.u64 	%rd69, [%rd1+16];
	ld.u32 	%r45, [%rd1+8];
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r45;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r9;
	.param .b32 param5;
	st.param.b32	[param5+0], %r1;
	.param .b32 param6;
	st.param.b32	[param6+0], %r25;
	.param .b32 param7;
	st.param.b32	[param7+0], %r18;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r46, [retval0+0];
	
	//{
	}// Callseq End 57
	mul.wide.s32 	%rd70, %r46, 8;
	add.s64 	%rd71, %rd69, %rd70;
	ld.f64 	%fd29, [%rd71];
	st.f64 	[%rd3+184], %fd29;
	st.f64 	[%rd3+200], %fd29;
	ld.f64 	%fd30, [%rd3+160];
	ld.f64 	%fd31, [%rd3+144];
	ld.f64 	%fd32, [%rd3+176];
	st.f64 	[%rd3+192], %fd30;
	sub.f64 	%fd33, %fd10, %fd31;
	sub.f64 	%fd34, %fd33, %fd32;
	st.f64 	[%rd3+208], %fd34;
	st.param.b32	[func_retval0+0], %r10;
	ret;
}

	// .globl	_Z23field_grad_tensor_delsqP12field_grad_siPA3_d
.visible .func  (.param .b32 func_retval0) _Z23field_grad_tensor_delsqP12field_grad_siPA3_d(
	.param .b64 _Z23field_grad_tensor_delsqP12field_grad_siPA3_d_param_0,
	.param .b32 _Z23field_grad_tensor_delsqP12field_grad_siPA3_d_param_1,
	.param .b64 _Z23field_grad_tensor_delsqP12field_grad_siPA3_d_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<27>;
	.reg .f64 	%fd<13>;
	.reg .b64 	%rd<42>;


	ld.param.u64 	%rd2, [_Z23field_grad_tensor_delsqP12field_grad_siPA3_d_param_0];
	ld.param.u32 	%r1, [_Z23field_grad_tensor_delsqP12field_grad_siPA3_d_param_1];
	ld.param.u64 	%rd3, [_Z23field_grad_tensor_delsqP12field_grad_siPA3_d_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB8_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_9;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r2, 510;
	mov.u64 	%rd10, 1;
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 58

BB8_2:
	add.s64 	%rd1, %rd2, 16;
	ld.u32 	%r3, [%rd2+16];
	setp.eq.s32	%p2, %r3, 5;
	@%p2 bra 	BB8_4;

	mov.u64 	%rd11, $str8;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_9;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r4, 511;
	mov.u64 	%rd17, 1;
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 59

BB8_4:
	setp.ne.s64	%p3, %rd3, 0;
	@%p3 bra 	BB8_6;

	mov.u64 	%rd18, $str10;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_9;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r5, 512;
	mov.u64 	%rd24, 1;
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 60

BB8_6:
	ld.u64 	%rd25, [%rd1+24];
	ld.u32 	%r6, [%rd1+8];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r7, 514;
	mov.u32 	%r8, 5;
	mov.u32 	%r9, 0;
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r9;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r10, [retval0+0];
	
	//{
	}// Callseq End 61
	mul.wide.s32 	%rd28, %r10, 8;
	add.s64 	%rd29, %rd25, %rd28;
	ld.f64 	%fd1, [%rd29];
	st.f64 	[%rd3], %fd1;
	ld.u64 	%rd30, [%rd1+24];
	ld.u32 	%r11, [%rd1+8];
	mov.u32 	%r12, 515;
	mov.u32 	%r13, 1;
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r13;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r14, [retval0+0];
	
	//{
	}// Callseq End 62
	mul.wide.s32 	%rd31, %r14, 8;
	add.s64 	%rd32, %rd30, %rd31;
	ld.f64 	%fd2, [%rd32];
	st.f64 	[%rd3+8], %fd2;
	ld.u64 	%rd33, [%rd1+24];
	ld.u32 	%r15, [%rd1+8];
	mov.u32 	%r16, 516;
	mov.u32 	%r17, 2;
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r17;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 63
	mul.wide.s32 	%rd34, %r18, 8;
	add.s64 	%rd35, %rd33, %rd34;
	ld.f64 	%fd3, [%rd35];
	st.f64 	[%rd3+16], %fd3;
	ld.f64 	%fd4, [%rd3+8];
	st.f64 	[%rd3+24], %fd4;
	ld.u64 	%rd36, [%rd1+24];
	ld.u32 	%r19, [%rd1+8];
	mov.u32 	%r20, 518;
	mov.u32 	%r21, 3;
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r20;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r21;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 64
	mul.wide.s32 	%rd37, %r22, 8;
	add.s64 	%rd38, %rd36, %rd37;
	ld.f64 	%fd5, [%rd38];
	st.f64 	[%rd3+32], %fd5;
	ld.u64 	%rd39, [%rd1+24];
	ld.u32 	%r23, [%rd1+8];
	mov.u32 	%r24, 519;
	mov.u32 	%r25, 4;
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r24;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r23;
	.param .b32 param3;
	st.param.b32	[param3+0], %r8;
	.param .b32 param4;
	st.param.b32	[param4+0], %r1;
	.param .b32 param5;
	st.param.b32	[param5+0], %r25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r26, [retval0+0];
	
	//{
	}// Callseq End 65
	mul.wide.s32 	%rd40, %r26, 8;
	add.s64 	%rd41, %rd39, %rd40;
	ld.f64 	%fd6, [%rd41];
	st.f64 	[%rd3+40], %fd6;
	st.f64 	[%rd3+56], %fd6;
	ld.f64 	%fd7, [%rd3+16];
	ld.f64 	%fd8, [%rd3];
	ld.f64 	%fd9, [%rd3+32];
	st.f64 	[%rd3+48], %fd7;
	mov.f64 	%fd10, 0d0000000000000000;
	sub.f64 	%fd11, %fd10, %fd8;
	sub.f64 	%fd12, %fd11, %fd9;
	st.f64 	[%rd3+64], %fd12;
	st.param.b32	[func_retval0+0], %r9;
	ret;
}


