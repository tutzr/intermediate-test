//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s
.extern .func  (.param .b32 func_retval0) _Z17kernel_iterationsP13kernel_ctxt_s
(
	.param .b64 _Z17kernel_iterationsP13kernel_ctxt_s_param_0
)
;
.extern .func  (.param .b32 func_retval0) _Z16kernel_coords_icP13kernel_ctxt_si
(
	.param .b64 _Z16kernel_coords_icP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_icP13kernel_ctxt_si_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z16kernel_coords_jcP13kernel_ctxt_si
(
	.param .b64 _Z16kernel_coords_jcP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_jcP13kernel_ctxt_si_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z16kernel_coords_kcP13kernel_ctxt_si
(
	.param .b64 _Z16kernel_coords_kcP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_kcP13kernel_ctxt_si_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z19kernel_coords_indexP13kernel_ctxt_siii
(
	.param .b64 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_0,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_1,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_2,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_3
)
;
.extern .func  (.param .b32 func_retval0) _Z16cs_nlocal_offsetP8coords_sPi
(
	.param .b64 _Z16cs_nlocal_offsetP8coords_sPi_param_0,
	.param .b64 _Z16cs_nlocal_offsetP8coords_sPi_param_1
)
;
.extern .func  (.param .b32 func_retval0) _Z19cs_minimum_distanceP8coords_sPKdS2_Pd
(
	.param .b64 _Z19cs_minimum_distanceP8coords_sPKdS2_Pd_param_0,
	.param .b64 _Z19cs_minimum_distanceP8coords_sPKdS2_Pd_param_1,
	.param .b64 _Z19cs_minimum_distanceP8coords_sPKdS2_Pd_param_2,
	.param .b64 _Z19cs_minimum_distanceP8coords_sPKdS2_Pd_param_3
)
;
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank2_assertiPKciiiiii
(
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_0,
	.param .b64 _Z25reverse_addr_rank2_assertiPKciiiiii_param_1,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_2,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_3,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_4,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_5,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_6,
	.param .b32 _Z25reverse_addr_rank2_assertiPKciiiiii_param_7
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.const .align 8 .b8 __nv_static_24__11_bbl_cpp1_ii_e251c242_lbp[7712];
.global .align 1 .b8 __unnamed_1[83] = {118, 111, 105, 100, 32, 98, 98, 108, 95, 112, 97, 115, 115, 48, 95, 107, 101, 114, 110, 101, 108, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 99, 111, 111, 114, 100, 115, 95, 115, 32, 42, 44, 32, 108, 98, 95, 100, 97, 116, 97, 95, 115, 32, 42, 44, 32, 99, 111, 108, 108, 111, 105, 100, 115, 95, 105, 110, 102, 111, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 $str[5] = {107, 116, 120, 116, 0};
.global .align 1 .b8 $str1[6] = {98, 98, 108, 46, 99, 0};
.global .align 1 .b8 $str2[3] = {99, 115, 0};
.global .align 1 .b8 $str3[3] = {108, 98, 0};
.global .align 1 .b8 $str4[6] = {99, 105, 110, 102, 111, 0};

.visible .entry _Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s(
	.param .u64 _Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s_param_0,
	.param .u64 _Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s_param_1,
	.param .u64 _Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s_param_2,
	.param .u64 _Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s_param_3
)
{
	.local .align 8 .b8 	__local_depot0[88];
	.reg .b64 	%SP;
	.reg .b64 	%SPL;
	.reg .pred 	%p<9>;
	.reg .b16 	%rs<4>;
	.reg .b32 	%r<33>;
	.reg .f64 	%fd<62>;
	.reg .b64 	%rd<67>;


	mov.u64 	%SPL, __local_depot0;
	cvta.local.u64 	%SP, %SPL;
	ld.param.u64 	%rd11, [_Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s_param_0];
	ld.param.u64 	%rd12, [_Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s_param_1];
	ld.param.u64 	%rd13, [_Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s_param_2];
	ld.param.u64 	%rd14, [_Z16bbl_pass0_kernelP13kernel_ctxt_sP8coords_sP9lb_data_sP15colloids_info_s_param_3];
	setp.ne.s64	%p1, %rd11, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd15, $str;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, __unnamed_1;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r8, 303;
	mov.u64 	%rd21, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r8;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	setp.ne.s64	%p2, %rd12, 0;
	@%p2 bra 	BB0_4;

	mov.u64 	%rd22, $str2;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, $str1;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, __unnamed_1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r9, 304;
	mov.u64 	%rd28, 1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd25;
	.param .b32 param2;
	st.param.b32	[param2+0], %r9;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd27;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd28;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB0_4:
	setp.ne.s64	%p3, %rd13, 0;
	@%p3 bra 	BB0_6;

	mov.u64 	%rd29, $str3;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, $str1;
	cvta.global.u64 	%rd32, %rd31;
	mov.u64 	%rd33, __unnamed_1;
	cvta.global.u64 	%rd34, %rd33;
	mov.u32 	%r10, 305;
	mov.u64 	%rd35, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r10;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd34;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2

BB0_6:
	setp.ne.s64	%p4, %rd14, 0;
	@%p4 bra 	BB0_8;

	mov.u64 	%rd36, $str4;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str1;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, __unnamed_1;
	cvta.global.u64 	%rd41, %rd40;
	mov.u32 	%r11, 306;
	mov.u64 	%rd42, 1;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r11;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd41;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd42;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB0_8:
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z17kernel_iterationsP13kernel_ctxt_s, 
	(
	param0
	);
	ld.param.b32	%r12, [retval0+0];
	
	//{
	}// Callseq End 4
	mov.u32 	%r13, %ntid.x;
	mov.u32 	%r14, %ctaid.x;
	mov.u32 	%r15, %tid.x;
	mad.lo.s32 	%r1, %r13, %r14, %r15;
	setp.ge.s32	%p5, %r1, %r12;
	@%p5 bra 	BB0_13;

	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16kernel_coords_icP13kernel_ctxt_si, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r2, [retval0+0];
	
	//{
	}// Callseq End 5
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16kernel_coords_jcP13kernel_ctxt_si, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r3, [retval0+0];
	
	//{
	}// Callseq End 6
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b32 param1;
	st.param.b32	[param1+0], %r1;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16kernel_coords_kcP13kernel_ctxt_si, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r4, [retval0+0];
	
	//{
	}// Callseq End 7
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b32 param1;
	st.param.b32	[param1+0], %r2;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b32 param3;
	st.param.b32	[param3+0], %r4;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z19kernel_coords_indexP13kernel_ctxt_siii, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b32	%r5, [retval0+0];
	
	//{
	}// Callseq End 8
	cvta.to.global.u64 	%rd43, %rd14;
	ld.global.u64 	%rd44, [%rd43+80];
	mul.wide.s32 	%rd45, %r5, 8;
	add.s64 	%rd46, %rd44, %rd45;
	ld.u64 	%rd1, [%rd46];
	setp.eq.s64	%p6, %rd1, 0;
	@%p6 bra 	BB0_13;

	add.s64 	%rd2, %rd1, 32;
	ld.u32 	%r16, [%rd1+32];
	setp.eq.s32	%p7, %r16, 2;
	@%p7 bra 	BB0_13;

	cvta.to.global.u64 	%rd50, %rd13;
	add.u64 	%rd51, %SP, 72;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd51;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z16cs_nlocal_offsetP8coords_sPi, 
	(
	param0, 
	param1
	);
	ld.param.b32	%r18, [retval0+0];
	
	//{
	}// Callseq End 9
	add.u64 	%rd52, %SPL, 72;
	ld.local.u32 	%r19, [%rd52];
	add.s32 	%r20, %r19, %r2;
	cvt.rn.f64.s32	%fd4, %r20;
	add.u64 	%rd53, %SP, 48;
	add.u64 	%rd54, %SPL, 48;
	ld.local.u32 	%r21, [%rd52+4];
	ld.local.u32 	%r22, [%rd52+8];
	st.local.f64 	[%rd54], %fd4;
	add.s32 	%r23, %r21, %r3;
	cvt.rn.f64.s32	%fd5, %r23;
	st.local.f64 	[%rd54+8], %fd5;
	add.s32 	%r24, %r22, %r4;
	cvt.rn.f64.s32	%fd6, %r24;
	st.local.f64 	[%rd54+16], %fd6;
	ld.f64 	%fd7, [%rd2+112];
	add.u64 	%rd55, %SP, 24;
	add.u64 	%rd56, %SPL, 24;
	st.local.f64 	[%rd56], %fd7;
	ld.f64 	%fd8, [%rd2+120];
	st.local.f64 	[%rd56+8], %fd8;
	ld.f64 	%fd9, [%rd2+128];
	st.local.f64 	[%rd56+16], %fd9;
	add.u64 	%rd57, %SP, 0;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd55;
	.param .b64 param2;
	st.param.b64	[param2+0], %rd53;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd57;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z19cs_minimum_distanceP8coords_sPKdS2_Pd, 
	(
	param0, 
	param1, 
	param2, 
	param3
	);
	ld.param.b32	%r25, [retval0+0];
	
	//{
	}// Callseq End 10
	add.u64 	%rd58, %SPL, 0;
	ld.local.f64 	%fd10, [%rd58+16];
	ld.f64 	%fd11, [%rd2+168];
	ld.f64 	%fd12, [%rd2+136];
	fma.rn.f64 	%fd13, %fd11, %fd10, %fd12;
	ld.local.f64 	%fd14, [%rd58+8];
	ld.f64 	%fd15, [%rd2+176];
	mul.f64 	%fd16, %fd15, %fd14;
	sub.f64 	%fd1, %fd13, %fd16;
	ld.local.f64 	%fd17, [%rd58];
	ld.f64 	%fd18, [%rd2+144];
	fma.rn.f64 	%fd19, %fd15, %fd17, %fd18;
	ld.f64 	%fd20, [%rd2+160];
	mul.f64 	%fd21, %fd20, %fd10;
	sub.f64 	%fd2, %fd19, %fd21;
	ld.f64 	%fd22, [%rd2+152];
	fma.rn.f64 	%fd23, %fd20, %fd14, %fd22;
	mul.f64 	%fd24, %fd11, %fd17;
	sub.f64 	%fd3, %fd23, %fd24;
	add.s64 	%rd3, %rd50, 56;
	add.s64 	%rd4, %rd50, 8;
	mov.u64 	%rd64, __nv_static_24__11_bbl_cpp1_ii_e251c242_lbp;
	add.s64 	%rd65, %rd64, 424;
	mov.u32 	%r32, 1;
	mov.u64 	%rd66, %rd64;

BB0_12:
	ld.const.s8 	%rs1, [%rd64+4];
	cvt.rn.f64.s16	%fd25, %rs1;
	ld.const.s8 	%rs2, [%rd64+5];
	cvt.rn.f64.s16	%fd26, %rs2;
	mul.f64 	%fd27, %fd26, %fd2;
	fma.rn.f64 	%fd28, %fd25, %fd1, %fd27;
	ld.const.s8 	%rs3, [%rd64+6];
	cvt.rn.f64.s16	%fd29, %rs3;
	fma.rn.f64 	%fd30, %fd29, %fd3, %fd28;
	ld.const.f64 	%fd31, [%rd66+640];
	mul.f64 	%fd32, %fd31, %fd1;
	fma.rn.f64 	%fd33, %fd32, %fd1, 0d0000000000000000;
	ld.const.f64 	%fd34, [%rd66+648];
	mul.f64 	%fd35, %fd34, %fd1;
	fma.rn.f64 	%fd36, %fd35, %fd2, %fd33;
	ld.const.f64 	%fd37, [%rd66+656];
	mul.f64 	%fd38, %fd37, %fd1;
	fma.rn.f64 	%fd39, %fd38, %fd3, %fd36;
	ld.const.f64 	%fd40, [%rd66+664];
	mul.f64 	%fd41, %fd40, %fd2;
	fma.rn.f64 	%fd42, %fd41, %fd1, %fd39;
	ld.const.f64 	%fd43, [%rd66+672];
	mul.f64 	%fd44, %fd43, %fd2;
	fma.rn.f64 	%fd45, %fd44, %fd2, %fd42;
	ld.const.f64 	%fd46, [%rd66+680];
	mul.f64 	%fd47, %fd46, %fd2;
	fma.rn.f64 	%fd48, %fd47, %fd3, %fd45;
	ld.const.f64 	%fd49, [%rd66+688];
	mul.f64 	%fd50, %fd49, %fd3;
	fma.rn.f64 	%fd51, %fd50, %fd1, %fd48;
	ld.const.f64 	%fd52, [%rd66+696];
	mul.f64 	%fd53, %fd52, %fd3;
	fma.rn.f64 	%fd54, %fd53, %fd2, %fd51;
	ld.const.f64 	%fd55, [%rd66+704];
	mul.f64 	%fd56, %fd55, %fd3;
	fma.rn.f64 	%fd57, %fd56, %fd3, %fd54;
	fma.rn.f64 	%fd58, %fd30, 0d4008000000000000, 0d3FF0000000000000;
	fma.rn.f64 	%fd59, %fd57, 0d4012000000000000, %fd58;
	ld.const.f64 	%fd60, [%rd65];
	mul.f64 	%fd61, %fd59, %fd60;
	ld.global.u64 	%rd59, [%rd3];
	ld.global.u32 	%r26, [%rd4+-4];
	ld.global.u32 	%r27, [%rd3+-56];
	mov.u64 	%rd60, $str1;
	cvta.global.u64 	%rd61, %rd60;
	mov.u32 	%r28, 356;
	mov.u32 	%r29, 19;
	mov.u32 	%r30, 0;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r28;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd61;
	.param .b32 param2;
	st.param.b32	[param2+0], %r26;
	.param .b32 param3;
	st.param.b32	[param3+0], %r27;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r5;
	.param .b32 param6;
	st.param.b32	[param6+0], %r30;
	.param .b32 param7;
	st.param.b32	[param7+0], %r32;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank2_assertiPKciiiiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5, 
	param6, 
	param7
	);
	ld.param.b32	%r31, [retval0+0];
	
	//{
	}// Callseq End 11
	mul.wide.s32 	%rd62, %r31, 8;
	add.s64 	%rd63, %rd59, %rd62;
	st.f64 	[%rd63], %fd61;
	add.s64 	%rd66, %rd66, 72;
	add.s64 	%rd65, %rd65, 8;
	add.s64 	%rd64, %rd64, 3;
	add.s32 	%r32, %r32, 1;
	setp.lt.s32	%p8, %r32, 19;
	@%p8 bra 	BB0_12;

BB0_13:
	ret;
}


