//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z15noise_state_setP7noise_siPj
.extern .func  (.param .b32 func_retval0) _Z25reverse_addr_rank1_assertiPKciiii
(
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_0,
	.param .b64 _Z25reverse_addr_rank1_assertiPKciiii_param_1,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_2,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_3,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_4,
	.param .b32 _Z25reverse_addr_rank1_assertiPKciiii_param_5
)
;
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .align 1 .b8 __unnamed_1[52] = {105, 110, 116, 32, 110, 111, 105, 115, 101, 95, 115, 116, 97, 116, 101, 95, 115, 101, 116, 40, 110, 111, 105, 115, 101, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_2[48] = {105, 110, 116, 32, 110, 111, 105, 115, 101, 95, 115, 116, 97, 116, 101, 40, 110, 111, 105, 115, 101, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 117, 110, 115, 105, 103, 110, 101, 100, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_3[41] = {105, 110, 116, 32, 110, 111, 105, 115, 101, 95, 114, 101, 97, 112, 40, 110, 111, 105, 115, 101, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_4[48] = {105, 110, 116, 32, 110, 111, 105, 115, 101, 95, 114, 101, 97, 112, 95, 110, 40, 110, 111, 105, 115, 101, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_5[56] = {105, 110, 116, 32, 110, 111, 105, 115, 101, 95, 117, 110, 105, 102, 111, 114, 109, 95, 100, 111, 117, 98, 108, 101, 95, 114, 101, 97, 112, 40, 110, 111, 105, 115, 101, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 100, 111, 117, 98, 108, 101, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_6[50] = {105, 110, 116, 32, 110, 111, 105, 115, 101, 95, 112, 114, 101, 115, 101, 110, 116, 40, 110, 111, 105, 115, 101, 95, 115, 32, 42, 44, 32, 110, 111, 105, 115, 101, 95, 101, 110, 117, 109, 95, 116, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 $str[4] = {111, 98, 106, 0};
.global .align 1 .b8 $str1[8] = {110, 111, 105, 115, 101, 46, 99, 0};
.global .align 1 .b8 $str2[11] = {105, 110, 100, 101, 120, 32, 62, 61, 32, 48, 0};
.global .align 1 .b8 $str3[20] = {105, 110, 100, 101, 120, 32, 60, 32, 111, 98, 106, 45, 62, 110, 115, 105, 116, 101, 115, 0};
.global .align 1 .b8 $str4[11] = {110, 109, 97, 120, 32, 60, 61, 32, 49, 48, 0};
.global .align 1 .b8 $str5[6] = {110, 111, 105, 115, 101, 0};
.global .align 1 .b8 $str6[17] = {116, 121, 112, 101, 32, 60, 32, 78, 79, 73, 83, 69, 95, 69, 78, 68, 0};
.global .align 1 .b8 $str7[8] = {112, 114, 101, 115, 101, 110, 116, 0};

.visible .func  (.param .b32 func_retval0) _Z15noise_state_setP7noise_siPj(
	.param .b64 _Z15noise_state_setP7noise_siPj_param_0,
	.param .b32 _Z15noise_state_setP7noise_siPj_param_1,
	.param .b64 _Z15noise_state_setP7noise_siPj_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<39>;


	ld.param.u64 	%rd2, [_Z15noise_state_setP7noise_siPj_param_0];
	ld.param.u32 	%r4, [_Z15noise_state_setP7noise_siPj_param_1];
	ld.param.u64 	%rd3, [_Z15noise_state_setP7noise_siPj_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r5, 334;
	mov.u64 	%rd10, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	setp.gt.s32	%p2, %r4, -1;
	@%p2 bra 	BB0_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r6, 335;
	mov.u64 	%rd17, 1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB0_4:
	add.s64 	%rd1, %rd2, 20;
	ld.u32 	%r25, [%rd2+20];
	setp.gt.s32	%p3, %r25, %r4;
	@%p3 bra 	BB0_6;

	mov.u64 	%rd18, $str3;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_1;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r7, 336;
	mov.u64 	%rd24, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2
	ld.u32 	%r25, [%rd1];

BB0_6:
	ld.u32 	%r8, [%rd3];
	ld.u64 	%rd25, [%rd1+20];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r9, 339;
	mov.u32 	%r10, 4;
	mov.u32 	%r11, 0;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r25;
	.param .b32 param3;
	st.param.b32	[param3+0], %r10;
	.param .b32 param4;
	st.param.b32	[param4+0], %r4;
	.param .b32 param5;
	st.param.b32	[param5+0], %r11;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r12, [retval0+0];
	
	//{
	}// Callseq End 3
	mul.wide.s32 	%rd28, %r12, 4;
	add.s64 	%rd29, %rd25, %rd28;
	st.u32 	[%rd29], %r8;
	ld.u32 	%r13, [%rd3+4];
	ld.u64 	%rd30, [%rd1+20];
	ld.u32 	%r14, [%rd1];
	mov.u32 	%r15, 1;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b32 param3;
	st.param.b32	[param3+0], %r10;
	.param .b32 param4;
	st.param.b32	[param4+0], %r4;
	.param .b32 param5;
	st.param.b32	[param5+0], %r15;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r16, [retval0+0];
	
	//{
	}// Callseq End 4
	mul.wide.s32 	%rd31, %r16, 4;
	add.s64 	%rd32, %rd30, %rd31;
	st.u32 	[%rd32], %r13;
	ld.u32 	%r17, [%rd3+8];
	ld.u64 	%rd33, [%rd1+20];
	ld.u32 	%r18, [%rd1];
	mov.u32 	%r19, 2;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b32 param3;
	st.param.b32	[param3+0], %r10;
	.param .b32 param4;
	st.param.b32	[param4+0], %r4;
	.param .b32 param5;
	st.param.b32	[param5+0], %r19;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r20, [retval0+0];
	
	//{
	}// Callseq End 5
	mul.wide.s32 	%rd34, %r20, 4;
	add.s64 	%rd35, %rd33, %rd34;
	st.u32 	[%rd35], %r17;
	ld.u32 	%r21, [%rd3+12];
	ld.u64 	%rd36, [%rd1+20];
	ld.u32 	%r22, [%rd1];
	mov.u32 	%r23, 3;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r9;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b32 param3;
	st.param.b32	[param3+0], %r10;
	.param .b32 param4;
	st.param.b32	[param4+0], %r4;
	.param .b32 param5;
	st.param.b32	[param5+0], %r23;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r24, [retval0+0];
	
	//{
	}// Callseq End 6
	mul.wide.s32 	%rd37, %r24, 4;
	add.s64 	%rd38, %rd36, %rd37;
	st.u32 	[%rd38], %r21;
	st.param.b32	[func_retval0+0], %r11;
	ret;
}

	// .globl	_Z11noise_stateP7noise_siPj
.visible .func  (.param .b32 func_retval0) _Z11noise_stateP7noise_siPj(
	.param .b64 _Z11noise_stateP7noise_siPj_param_0,
	.param .b32 _Z11noise_stateP7noise_siPj_param_1,
	.param .b64 _Z11noise_stateP7noise_siPj_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<26>;
	.reg .b64 	%rd<39>;


	ld.param.u64 	%rd2, [_Z11noise_stateP7noise_siPj_param_0];
	ld.param.u32 	%r4, [_Z11noise_stateP7noise_siPj_param_1];
	ld.param.u64 	%rd3, [_Z11noise_stateP7noise_siPj_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_2;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r5, 357;
	mov.u64 	%rd10, 1;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r5;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7

BB1_2:
	setp.gt.s32	%p2, %r4, -1;
	@%p2 bra 	BB1_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_2;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r6, 358;
	mov.u64 	%rd17, 1;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB1_4:
	add.s64 	%rd1, %rd2, 20;
	ld.u32 	%r25, [%rd2+20];
	setp.gt.s32	%p3, %r25, %r4;
	@%p3 bra 	BB1_6;

	mov.u64 	%rd18, $str3;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_2;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r7, 359;
	mov.u64 	%rd24, 1;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r7;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9
	ld.u32 	%r25, [%rd1];

BB1_6:
	ld.u64 	%rd25, [%rd1+20];
	mov.u64 	%rd26, $str1;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r8, 362;
	mov.u32 	%r9, 4;
	mov.u32 	%r10, 0;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r25;
	.param .b32 param3;
	st.param.b32	[param3+0], %r9;
	.param .b32 param4;
	st.param.b32	[param4+0], %r4;
	.param .b32 param5;
	st.param.b32	[param5+0], %r10;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r11, [retval0+0];
	
	//{
	}// Callseq End 10
	mul.wide.s32 	%rd28, %r11, 4;
	add.s64 	%rd29, %rd25, %rd28;
	ld.u32 	%r12, [%rd29];
	st.u32 	[%rd3], %r12;
	ld.u64 	%rd30, [%rd1+20];
	ld.u32 	%r13, [%rd1];
	mov.u32 	%r14, 1;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r13;
	.param .b32 param3;
	st.param.b32	[param3+0], %r9;
	.param .b32 param4;
	st.param.b32	[param4+0], %r4;
	.param .b32 param5;
	st.param.b32	[param5+0], %r14;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r15, [retval0+0];
	
	//{
	}// Callseq End 11
	mul.wide.s32 	%rd31, %r15, 4;
	add.s64 	%rd32, %rd30, %rd31;
	ld.u32 	%r16, [%rd32];
	st.u32 	[%rd3+4], %r16;
	ld.u64 	%rd33, [%rd1+20];
	ld.u32 	%r17, [%rd1];
	mov.u32 	%r18, 2;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b32 param3;
	st.param.b32	[param3+0], %r9;
	.param .b32 param4;
	st.param.b32	[param4+0], %r4;
	.param .b32 param5;
	st.param.b32	[param5+0], %r18;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r19, [retval0+0];
	
	//{
	}// Callseq End 12
	mul.wide.s32 	%rd34, %r19, 4;
	add.s64 	%rd35, %rd33, %rd34;
	ld.u32 	%r20, [%rd35];
	st.u32 	[%rd3+8], %r20;
	ld.u64 	%rd36, [%rd1+20];
	ld.u32 	%r21, [%rd1];
	mov.u32 	%r22, 3;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd27;
	.param .b32 param2;
	st.param.b32	[param2+0], %r21;
	.param .b32 param3;
	st.param.b32	[param3+0], %r9;
	.param .b32 param4;
	st.param.b32	[param4+0], %r4;
	.param .b32 param5;
	st.param.b32	[param5+0], %r22;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r23, [retval0+0];
	
	//{
	}// Callseq End 13
	mul.wide.s32 	%rd37, %r23, 4;
	add.s64 	%rd38, %rd36, %rd37;
	ld.u32 	%r24, [%rd38];
	st.u32 	[%rd3+12], %r24;
	st.param.b32	[func_retval0+0], %r10;
	ret;
}

	// .globl	_Z10noise_reapP7noise_siPd
.visible .func  (.param .b32 func_retval0) _Z10noise_reapP7noise_siPd(
	.param .b64 _Z10noise_reapP7noise_siPd_param_0,
	.param .b32 _Z10noise_reapP7noise_siPd_param_1,
	.param .b64 _Z10noise_reapP7noise_siPd_param_2
)
{
	.reg .pred 	%p<13>;
	.reg .b32 	%r<81>;
	.reg .f64 	%fd<11>;
	.reg .b64 	%rd<145>;


	ld.param.u64 	%rd2, [_Z10noise_reapP7noise_siPd_param_0];
	ld.param.u32 	%r11, [_Z10noise_reapP7noise_siPd_param_1];
	ld.param.u64 	%rd3, [_Z10noise_reapP7noise_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_3;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r12, 379;
	mov.u64 	%rd10, 1;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB2_2:
	setp.gt.s32	%p2, %r11, -1;
	@%p2 bra 	BB2_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_3;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r13, 380;
	mov.u64 	%rd17, 1;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r13;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB2_4:
	add.s64 	%rd1, %rd2, 20;
	ld.u32 	%r14, [%rd2+20];
	setp.gt.s32	%p3, %r14, %r11;
	@%p3 bra 	BB2_6;

	mov.u64 	%rd18, $str3;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_3;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r15, 381;
	mov.u64 	%rd24, 1;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB2_6:
	@%p1 bra 	BB2_8;

	mov.u64 	%rd25, $str;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, $str1;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, __unnamed_4;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r16, 404;
	mov.u64 	%rd31, 1;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd30;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd31;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB2_8:
	@%p2 bra 	BB2_10;

	mov.u64 	%rd32, $str2;
	cvta.global.u64 	%rd33, %rd32;
	mov.u64 	%rd34, $str1;
	cvta.global.u64 	%rd35, %rd34;
	mov.u64 	%rd36, __unnamed_4;
	cvta.global.u64 	%rd37, %rd36;
	mov.u32 	%r17, 405;
	mov.u64 	%rd38, 1;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd37;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd38;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB2_10:
	ld.u32 	%r18, [%rd1];
	setp.gt.s32	%p6, %r18, %r11;
	@%p6 bra 	BB2_12;

	mov.u64 	%rd39, $str3;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, $str1;
	cvta.global.u64 	%rd42, %rd41;
	mov.u64 	%rd43, __unnamed_4;
	cvta.global.u64 	%rd44, %rd43;
	mov.u32 	%r19, 406;
	mov.u64 	%rd45, 1;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r19;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd44;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd45;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB2_12:
	@%p1 bra 	BB2_14;

	mov.u64 	%rd46, $str;
	cvta.global.u64 	%rd47, %rd46;
	mov.u64 	%rd48, $str1;
	cvta.global.u64 	%rd49, %rd48;
	mov.u64 	%rd50, __unnamed_2;
	cvta.global.u64 	%rd51, %rd50;
	mov.u32 	%r20, 357;
	mov.u64 	%rd52, 1;
	// Callseq Start 20
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd47;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd49;
	.param .b32 param2;
	st.param.b32	[param2+0], %r20;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd51;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd52;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 20

BB2_14:
	@%p2 bra 	BB2_16;

	mov.u64 	%rd53, $str2;
	cvta.global.u64 	%rd54, %rd53;
	mov.u64 	%rd55, $str1;
	cvta.global.u64 	%rd56, %rd55;
	mov.u64 	%rd57, __unnamed_2;
	cvta.global.u64 	%rd58, %rd57;
	mov.u32 	%r21, 358;
	mov.u64 	%rd59, 1;
	// Callseq Start 21
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd54;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd56;
	.param .b32 param2;
	st.param.b32	[param2+0], %r21;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd58;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd59;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 21

BB2_16:
	ld.u32 	%r79, [%rd1];
	setp.gt.s32	%p9, %r79, %r11;
	@%p9 bra 	BB2_18;

	mov.u64 	%rd60, $str3;
	cvta.global.u64 	%rd61, %rd60;
	mov.u64 	%rd62, $str1;
	cvta.global.u64 	%rd63, %rd62;
	mov.u64 	%rd64, __unnamed_2;
	cvta.global.u64 	%rd65, %rd64;
	mov.u32 	%r22, 359;
	mov.u64 	%rd66, 1;
	// Callseq Start 22
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd61;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd63;
	.param .b32 param2;
	st.param.b32	[param2+0], %r22;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd65;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd66;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 22
	ld.u32 	%r79, [%rd1];

BB2_18:
	ld.u64 	%rd67, [%rd1+20];
	mov.u64 	%rd68, $str1;
	cvta.global.u64 	%rd69, %rd68;
	mov.u32 	%r23, 362;
	mov.u32 	%r24, 4;
	mov.u32 	%r25, 0;
	// Callseq Start 23
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r79;
	.param .b32 param3;
	st.param.b32	[param3+0], %r24;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r26, [retval0+0];
	
	//{
	}// Callseq End 23
	mul.wide.s32 	%rd70, %r26, 4;
	add.s64 	%rd71, %rd67, %rd70;
	ld.u32 	%r4, [%rd71];
	ld.u64 	%rd72, [%rd1+20];
	ld.u32 	%r27, [%rd1];
	mov.u32 	%r28, 1;
	// Callseq Start 24
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r27;
	.param .b32 param3;
	st.param.b32	[param3+0], %r24;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r28;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r29, [retval0+0];
	
	//{
	}// Callseq End 24
	mul.wide.s32 	%rd73, %r29, 4;
	add.s64 	%rd74, %rd72, %rd73;
	ld.u32 	%r5, [%rd74];
	ld.u64 	%rd75, [%rd1+20];
	ld.u32 	%r30, [%rd1];
	mov.u32 	%r31, 2;
	// Callseq Start 25
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r30;
	.param .b32 param3;
	st.param.b32	[param3+0], %r24;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r31;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r32, [retval0+0];
	
	//{
	}// Callseq End 25
	mul.wide.s32 	%rd76, %r32, 4;
	add.s64 	%rd77, %rd75, %rd76;
	ld.u32 	%r6, [%rd77];
	ld.u64 	%rd78, [%rd1+20];
	ld.u32 	%r33, [%rd1];
	mov.u32 	%r34, 3;
	// Callseq Start 26
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r33;
	.param .b32 param3;
	st.param.b32	[param3+0], %r24;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r34;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r35, [retval0+0];
	
	//{
	}// Callseq End 26
	mul.wide.s32 	%rd79, %r35, 4;
	add.s64 	%rd80, %rd78, %rd79;
	ld.u32 	%r7, [%rd80];
	@%p1 bra 	BB2_20;

	mov.u64 	%rd81, $str;
	cvta.global.u64 	%rd82, %rd81;
	mov.u64 	%rd85, __unnamed_1;
	cvta.global.u64 	%rd86, %rd85;
	mov.u32 	%r36, 334;
	mov.u64 	%rd87, 1;
	// Callseq Start 27
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd82;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r36;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd86;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd87;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 27

BB2_20:
	@%p2 bra 	BB2_22;

	mov.u64 	%rd88, $str2;
	cvta.global.u64 	%rd89, %rd88;
	mov.u64 	%rd92, __unnamed_1;
	cvta.global.u64 	%rd93, %rd92;
	mov.u32 	%r37, 335;
	mov.u64 	%rd94, 1;
	// Callseq Start 28
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd89;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd93;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd94;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 28

BB2_22:
	ld.u32 	%r80, [%rd1];
	setp.gt.s32	%p12, %r80, %r11;
	@%p12 bra 	BB2_24;

	mov.u64 	%rd95, $str3;
	cvta.global.u64 	%rd96, %rd95;
	mov.u64 	%rd99, __unnamed_1;
	cvta.global.u64 	%rd100, %rd99;
	mov.u32 	%r38, 336;
	mov.u64 	%rd101, 1;
	// Callseq Start 29
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd96;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r38;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd100;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd101;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 29
	ld.u32 	%r80, [%rd1];

BB2_24:
	mad.lo.s32 	%r39, %r4, 69069, 1234567;
	shl.b32 	%r40, %r5, 17;
	xor.b32  	%r41, %r40, %r5;
	shr.u32 	%r42, %r41, 13;
	xor.b32  	%r43, %r42, %r41;
	shl.b32 	%r44, %r43, 5;
	xor.b32  	%r45, %r44, %r43;
	shr.u32 	%r46, %r6, 16;
	and.b32  	%r47, %r6, 65535;
	mad.lo.s32 	%r48, %r47, 36969, %r46;
	shr.u32 	%r49, %r7, 16;
	and.b32  	%r50, %r7, 65535;
	mad.lo.s32 	%r51, %r50, 18000, %r49;
	shl.b32 	%r52, %r48, 16;
	add.s32 	%r53, %r51, %r52;
	xor.b32  	%r54, %r53, %r39;
	add.s32 	%r55, %r54, %r45;
	ld.u64 	%rd102, [%rd1+20];
	mov.u32 	%r56, 339;
	// Callseq Start 30
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r56;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r80;
	.param .b32 param3;
	st.param.b32	[param3+0], %r24;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r25;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r59, [retval0+0];
	
	//{
	}// Callseq End 30
	mul.wide.s32 	%rd105, %r59, 4;
	add.s64 	%rd106, %rd102, %rd105;
	st.u32 	[%rd106], %r39;
	ld.u64 	%rd107, [%rd1+20];
	ld.u32 	%r60, [%rd1];
	// Callseq Start 31
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r56;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r60;
	.param .b32 param3;
	st.param.b32	[param3+0], %r24;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r28;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r62, [retval0+0];
	
	//{
	}// Callseq End 31
	mul.wide.s32 	%rd108, %r62, 4;
	add.s64 	%rd109, %rd107, %rd108;
	st.u32 	[%rd109], %r45;
	ld.u64 	%rd110, [%rd1+20];
	ld.u32 	%r63, [%rd1];
	// Callseq Start 32
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r56;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r63;
	.param .b32 param3;
	st.param.b32	[param3+0], %r24;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r31;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r65, [retval0+0];
	
	//{
	}// Callseq End 32
	mul.wide.s32 	%rd111, %r65, 4;
	add.s64 	%rd112, %rd110, %rd111;
	st.u32 	[%rd112], %r48;
	ld.u64 	%rd113, [%rd1+20];
	ld.u32 	%r66, [%rd1];
	// Callseq Start 33
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r56;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd69;
	.param .b32 param2;
	st.param.b32	[param2+0], %r66;
	.param .b32 param3;
	st.param.b32	[param3+0], %r24;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r34;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r68, [retval0+0];
	
	//{
	}// Callseq End 33
	mul.wide.s32 	%rd114, %r68, 4;
	add.s64 	%rd115, %rd113, %rd114;
	st.u32 	[%rd115], %r51;
	bfe.u32 	%r69, %r55, 2, 3;
	mul.wide.u32 	%rd116, %r69, 8;
	add.s64 	%rd117, %rd2, 48;
	add.s64 	%rd118, %rd117, %rd116;
	ld.f64 	%fd1, [%rd118];
	st.f64 	[%rd3], %fd1;
	shr.u32 	%r70, %r55, 5;
	mul.wide.u32 	%rd119, %r70, 8;
	and.b64  	%rd120, %rd119, 56;
	add.s64 	%rd121, %rd117, %rd120;
	ld.f64 	%fd2, [%rd121];
	st.f64 	[%rd3+8], %fd2;
	shr.u32 	%r71, %r55, 8;
	mul.wide.u32 	%rd122, %r71, 8;
	and.b64  	%rd123, %rd122, 56;
	add.s64 	%rd124, %rd117, %rd123;
	ld.f64 	%fd3, [%rd124];
	st.f64 	[%rd3+16], %fd3;
	shr.u32 	%r72, %r55, 11;
	mul.wide.u32 	%rd125, %r72, 8;
	and.b64  	%rd126, %rd125, 56;
	add.s64 	%rd127, %rd117, %rd126;
	ld.f64 	%fd4, [%rd127];
	st.f64 	[%rd3+24], %fd4;
	shr.u32 	%r73, %r55, 14;
	mul.wide.u32 	%rd128, %r73, 8;
	and.b64  	%rd129, %rd128, 56;
	add.s64 	%rd130, %rd117, %rd129;
	ld.f64 	%fd5, [%rd130];
	st.f64 	[%rd3+32], %fd5;
	shr.u32 	%r74, %r55, 17;
	mul.wide.u32 	%rd131, %r74, 8;
	and.b64  	%rd132, %rd131, 56;
	add.s64 	%rd133, %rd117, %rd132;
	ld.f64 	%fd6, [%rd133];
	st.f64 	[%rd3+40], %fd6;
	shr.u32 	%r75, %r55, 20;
	mul.wide.u32 	%rd134, %r75, 8;
	and.b64  	%rd135, %rd134, 56;
	add.s64 	%rd136, %rd117, %rd135;
	ld.f64 	%fd7, [%rd136];
	st.f64 	[%rd3+48], %fd7;
	shr.u32 	%r76, %r55, 23;
	mul.wide.u32 	%rd137, %r76, 8;
	and.b64  	%rd138, %rd137, 56;
	add.s64 	%rd139, %rd117, %rd138;
	ld.f64 	%fd8, [%rd139];
	st.f64 	[%rd3+56], %fd8;
	shr.u32 	%r77, %r55, 26;
	mul.wide.u32 	%rd140, %r77, 8;
	and.b64  	%rd141, %rd140, 56;
	add.s64 	%rd142, %rd117, %rd141;
	ld.f64 	%fd9, [%rd142];
	st.f64 	[%rd3+64], %fd9;
	shr.u32 	%r78, %r55, 29;
	mul.wide.u32 	%rd143, %r78, 8;
	add.s64 	%rd144, %rd117, %rd143;
	ld.f64 	%fd10, [%rd144];
	st.f64 	[%rd3+72], %fd10;
	st.param.b32	[func_retval0+0], %r25;
	ret;
}

	// .globl	_Z12noise_reap_nP7noise_siiPd
.visible .func  (.param .b32 func_retval0) _Z12noise_reap_nP7noise_siiPd(
	.param .b64 _Z12noise_reap_nP7noise_siiPd_param_0,
	.param .b32 _Z12noise_reap_nP7noise_siiPd_param_1,
	.param .b32 _Z12noise_reap_nP7noise_siiPd_param_2,
	.param .b64 _Z12noise_reap_nP7noise_siiPd_param_3
)
{
	.reg .pred 	%p<17>;
	.reg .b32 	%r<106>;
	.reg .f64 	%fd<8>;
	.reg .b64 	%rd<129>;


	ld.param.u64 	%rd5, [_Z12noise_reap_nP7noise_siiPd_param_0];
	ld.param.u32 	%r29, [_Z12noise_reap_nP7noise_siiPd_param_1];
	ld.param.u32 	%r30, [_Z12noise_reap_nP7noise_siiPd_param_2];
	ld.param.u64 	%rd6, [_Z12noise_reap_nP7noise_siiPd_param_3];
	setp.ne.s64	%p1, %rd5, 0;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd7, $str;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str1;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, __unnamed_4;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r31, 404;
	mov.u64 	%rd13, 1;
	// Callseq Start 34
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd12;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd13;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 34

BB3_2:
	setp.gt.s32	%p2, %r29, -1;
	@%p2 bra 	BB3_4;

	mov.u64 	%rd14, $str2;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, $str1;
	cvta.global.u64 	%rd17, %rd16;
	mov.u64 	%rd18, __unnamed_4;
	cvta.global.u64 	%rd19, %rd18;
	mov.u32 	%r32, 405;
	mov.u64 	%rd20, 1;
	// Callseq Start 35
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd15;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd17;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd19;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd20;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 35

BB3_4:
	add.s64 	%rd1, %rd5, 20;
	ld.u32 	%r33, [%rd5+20];
	setp.gt.s32	%p3, %r33, %r29;
	@%p3 bra 	BB3_6;

	mov.u64 	%rd21, $str3;
	cvta.global.u64 	%rd22, %rd21;
	mov.u64 	%rd23, $str1;
	cvta.global.u64 	%rd24, %rd23;
	mov.u64 	%rd25, __unnamed_4;
	cvta.global.u64 	%rd26, %rd25;
	mov.u32 	%r34, 406;
	mov.u64 	%rd27, 1;
	// Callseq Start 36
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd22;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd24;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd26;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd27;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 36

BB3_6:
	setp.lt.s32	%p4, %r30, 11;
	@%p4 bra 	BB3_8;

	mov.u64 	%rd28, $str4;
	cvta.global.u64 	%rd29, %rd28;
	mov.u64 	%rd30, $str1;
	cvta.global.u64 	%rd31, %rd30;
	mov.u64 	%rd32, __unnamed_4;
	cvta.global.u64 	%rd33, %rd32;
	mov.u32 	%r35, 407;
	mov.u64 	%rd34, 1;
	// Callseq Start 37
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd29;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd31;
	.param .b32 param2;
	st.param.b32	[param2+0], %r35;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd33;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd34;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 37

BB3_8:
	@%p1 bra 	BB3_10;

	mov.u64 	%rd35, $str;
	cvta.global.u64 	%rd36, %rd35;
	mov.u64 	%rd37, $str1;
	cvta.global.u64 	%rd38, %rd37;
	mov.u64 	%rd39, __unnamed_2;
	cvta.global.u64 	%rd40, %rd39;
	mov.u32 	%r36, 357;
	mov.u64 	%rd41, 1;
	// Callseq Start 38
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd36;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd38;
	.param .b32 param2;
	st.param.b32	[param2+0], %r36;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd40;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd41;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 38

BB3_10:
	@%p2 bra 	BB3_12;

	mov.u64 	%rd42, $str2;
	cvta.global.u64 	%rd43, %rd42;
	mov.u64 	%rd44, $str1;
	cvta.global.u64 	%rd45, %rd44;
	mov.u64 	%rd46, __unnamed_2;
	cvta.global.u64 	%rd47, %rd46;
	mov.u32 	%r37, 358;
	mov.u64 	%rd48, 1;
	// Callseq Start 39
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd43;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd45;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd47;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd48;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 39

BB3_12:
	ld.u32 	%r96, [%rd1];
	setp.gt.s32	%p7, %r96, %r29;
	@%p7 bra 	BB3_14;

	mov.u64 	%rd49, $str3;
	cvta.global.u64 	%rd50, %rd49;
	mov.u64 	%rd51, $str1;
	cvta.global.u64 	%rd52, %rd51;
	mov.u64 	%rd53, __unnamed_2;
	cvta.global.u64 	%rd54, %rd53;
	mov.u32 	%r38, 359;
	mov.u64 	%rd55, 1;
	// Callseq Start 40
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd50;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd52;
	.param .b32 param2;
	st.param.b32	[param2+0], %r38;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd54;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd55;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 40
	ld.u32 	%r96, [%rd1];

BB3_14:
	ld.u64 	%rd56, [%rd1+20];
	mov.u64 	%rd57, $str1;
	cvta.global.u64 	%rd58, %rd57;
	mov.u32 	%r39, 362;
	mov.u32 	%r40, 4;
	mov.u32 	%r41, 0;
	// Callseq Start 41
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r96;
	.param .b32 param3;
	st.param.b32	[param3+0], %r40;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r41;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r42, [retval0+0];
	
	//{
	}// Callseq End 41
	mul.wide.s32 	%rd59, %r42, 4;
	add.s64 	%rd60, %rd56, %rd59;
	ld.u32 	%r43, [%rd60];
	ld.u64 	%rd61, [%rd1+20];
	ld.u32 	%r44, [%rd1];
	mov.u32 	%r45, 1;
	// Callseq Start 42
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r44;
	.param .b32 param3;
	st.param.b32	[param3+0], %r40;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r45;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r46, [retval0+0];
	
	//{
	}// Callseq End 42
	mul.wide.s32 	%rd62, %r46, 4;
	add.s64 	%rd63, %rd61, %rd62;
	ld.u32 	%r47, [%rd63];
	ld.u64 	%rd64, [%rd1+20];
	ld.u32 	%r48, [%rd1];
	mov.u32 	%r49, 2;
	// Callseq Start 43
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r48;
	.param .b32 param3;
	st.param.b32	[param3+0], %r40;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r49;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r50, [retval0+0];
	
	//{
	}// Callseq End 43
	mul.wide.s32 	%rd65, %r50, 4;
	add.s64 	%rd66, %rd64, %rd65;
	ld.u32 	%r51, [%rd66];
	ld.u64 	%rd67, [%rd1+20];
	ld.u32 	%r52, [%rd1];
	mov.u32 	%r53, 3;
	// Callseq Start 44
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r39;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b32 param3;
	st.param.b32	[param3+0], %r40;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r53;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r54, [retval0+0];
	
	//{
	}// Callseq End 44
	mul.wide.s32 	%rd68, %r54, 4;
	add.s64 	%rd69, %rd67, %rd68;
	mad.lo.s32 	%r4, %r43, 69069, 1234567;
	shl.b32 	%r55, %r47, 17;
	xor.b32  	%r56, %r55, %r47;
	shr.u32 	%r57, %r56, 13;
	xor.b32  	%r58, %r57, %r56;
	shl.b32 	%r59, %r58, 5;
	xor.b32  	%r5, %r59, %r58;
	and.b32  	%r60, %r51, 65535;
	shr.u32 	%r61, %r51, 16;
	mad.lo.s32 	%r6, %r60, 36969, %r61;
	ld.u32 	%r62, [%rd69];
	and.b32  	%r63, %r62, 65535;
	shr.u32 	%r64, %r62, 16;
	mad.lo.s32 	%r7, %r63, 18000, %r64;
	shl.b32 	%r65, %r6, 16;
	add.s32 	%r66, %r7, %r65;
	xor.b32  	%r67, %r66, %r4;
	add.s32 	%r8, %r67, %r5;
	@%p1 bra 	BB3_16;

	mov.u64 	%rd70, $str;
	cvta.global.u64 	%rd71, %rd70;
	mov.u64 	%rd74, __unnamed_1;
	cvta.global.u64 	%rd75, %rd74;
	mov.u32 	%r68, 334;
	mov.u64 	%rd76, 1;
	// Callseq Start 45
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd71;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r68;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd75;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd76;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 45

BB3_16:
	@%p2 bra 	BB3_18;

	mov.u64 	%rd77, $str2;
	cvta.global.u64 	%rd78, %rd77;
	mov.u64 	%rd81, __unnamed_1;
	cvta.global.u64 	%rd82, %rd81;
	mov.u32 	%r69, 335;
	mov.u64 	%rd83, 1;
	// Callseq Start 46
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd78;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r69;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd82;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd83;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 46

BB3_18:
	ld.u32 	%r97, [%rd1];
	setp.gt.s32	%p10, %r97, %r29;
	@%p10 bra 	BB3_20;

	mov.u64 	%rd84, $str3;
	cvta.global.u64 	%rd85, %rd84;
	mov.u64 	%rd88, __unnamed_1;
	cvta.global.u64 	%rd89, %rd88;
	mov.u32 	%r70, 336;
	mov.u64 	%rd90, 1;
	// Callseq Start 47
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd85;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r70;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd89;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd90;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 47
	ld.u32 	%r97, [%rd1];

BB3_20:
	ld.u64 	%rd91, [%rd1+20];
	mov.u32 	%r71, 339;
	// Callseq Start 48
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r71;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r97;
	.param .b32 param3;
	st.param.b32	[param3+0], %r40;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r41;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r74, [retval0+0];
	
	//{
	}// Callseq End 48
	mul.wide.s32 	%rd94, %r74, 4;
	add.s64 	%rd95, %rd91, %rd94;
	st.u32 	[%rd95], %r4;
	ld.u64 	%rd96, [%rd1+20];
	ld.u32 	%r75, [%rd1];
	// Callseq Start 49
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r71;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r75;
	.param .b32 param3;
	st.param.b32	[param3+0], %r40;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r45;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r77, [retval0+0];
	
	//{
	}// Callseq End 49
	mul.wide.s32 	%rd97, %r77, 4;
	add.s64 	%rd98, %rd96, %rd97;
	st.u32 	[%rd98], %r5;
	ld.u64 	%rd99, [%rd1+20];
	ld.u32 	%r78, [%rd1];
	// Callseq Start 50
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r71;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r78;
	.param .b32 param3;
	st.param.b32	[param3+0], %r40;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r49;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r80, [retval0+0];
	
	//{
	}// Callseq End 50
	mul.wide.s32 	%rd100, %r80, 4;
	add.s64 	%rd101, %rd99, %rd100;
	st.u32 	[%rd101], %r6;
	ld.u64 	%rd102, [%rd1+20];
	ld.u32 	%r81, [%rd1];
	// Callseq Start 51
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r71;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd58;
	.param .b32 param2;
	st.param.b32	[param2+0], %r81;
	.param .b32 param3;
	st.param.b32	[param3+0], %r40;
	.param .b32 param4;
	st.param.b32	[param4+0], %r29;
	.param .b32 param5;
	st.param.b32	[param5+0], %r53;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r83, [retval0+0];
	
	//{
	}// Callseq End 51
	mul.wide.s32 	%rd103, %r83, 4;
	add.s64 	%rd104, %rd102, %rd103;
	st.u32 	[%rd104], %r7;
	setp.lt.s32	%p11, %r30, 1;
	@%p11 bra 	BB3_32;

	shr.u32 	%r12, %r8, 2;
	and.b32  	%r13, %r30, 3;
	setp.eq.s32	%p12, %r13, 0;
	@%p12 bra 	BB3_22;

	setp.eq.s32	%p13, %r13, 1;
	mov.u32 	%r100, 0;
	@%p13 bra 	BB3_28;

	setp.eq.s32	%p14, %r13, 2;
	mov.u32 	%r86, 0;
	@%p14 bra 	BB3_25;
	bra.uni 	BB3_26;

BB3_25:
	mov.u32 	%r45, %r86;
	bra.uni 	BB3_27;

BB3_22:
	mov.u32 	%r104, %r41;
	bra.uni 	BB3_29;

BB3_26:
	and.b32  	%r88, %r12, 7;
	mul.wide.u32 	%rd105, %r88, 8;
	add.s64 	%rd106, %rd5, %rd105;
	ld.f64 	%fd1, [%rd106+48];
	st.f64 	[%rd6], %fd1;
	shr.u32 	%r12, %r8, 5;

BB3_27:
	and.b32  	%r89, %r12, 7;
	mul.wide.u32 	%rd107, %r89, 8;
	add.s64 	%rd108, %rd5, %rd107;
	ld.f64 	%fd2, [%rd108+48];
	mul.wide.u32 	%rd109, %r45, 8;
	add.s64 	%rd110, %rd6, %rd109;
	st.f64 	[%rd110], %fd2;
	shr.u32 	%r12, %r12, 3;
	add.s32 	%r100, %r45, 1;

BB3_28:
	and.b32  	%r90, %r12, 7;
	mul.wide.u32 	%rd111, %r90, 8;
	add.s64 	%rd112, %rd5, %rd111;
	ld.f64 	%fd3, [%rd112+48];
	mul.wide.s32 	%rd113, %r100, 8;
	add.s64 	%rd114, %rd6, %rd113;
	st.f64 	[%rd114], %fd3;
	shr.u32 	%r12, %r12, 3;
	add.s32 	%r104, %r100, 1;

BB3_29:
	setp.lt.u32	%p15, %r30, 4;
	@%p15 bra 	BB3_32;

	mul.wide.s32 	%rd115, %r104, 8;
	add.s64 	%rd128, %rd6, %rd115;

BB3_31:
	and.b32  	%r91, %r12, 7;
	add.s64 	%rd116, %rd5, 48;
	mul.wide.u32 	%rd117, %r91, 8;
	add.s64 	%rd118, %rd116, %rd117;
	ld.f64 	%fd4, [%rd118];
	st.f64 	[%rd128], %fd4;
	shr.u32 	%r92, %r12, 3;
	mul.wide.u32 	%rd119, %r92, 8;
	and.b64  	%rd120, %rd119, 56;
	add.s64 	%rd121, %rd116, %rd120;
	ld.f64 	%fd5, [%rd121];
	st.f64 	[%rd128+8], %fd5;
	shr.u32 	%r93, %r12, 6;
	mul.wide.u32 	%rd122, %r93, 8;
	and.b64  	%rd123, %rd122, 56;
	add.s64 	%rd124, %rd116, %rd123;
	ld.f64 	%fd6, [%rd124];
	st.f64 	[%rd128+16], %fd6;
	shr.u32 	%r94, %r12, 9;
	mul.wide.u32 	%rd125, %r94, 8;
	and.b64  	%rd126, %rd125, 56;
	add.s64 	%rd127, %rd116, %rd126;
	ld.f64 	%fd7, [%rd127];
	st.f64 	[%rd128+24], %fd7;
	shr.u32 	%r12, %r12, 12;
	add.s64 	%rd128, %rd128, 32;
	add.s32 	%r104, %r104, 4;
	setp.lt.s32	%p16, %r104, %r30;
	@%p16 bra 	BB3_31;

BB3_32:
	st.param.b32	[func_retval0+0], %r41;
	ret;
}

	// .globl	_Z13noise_uniformPj
.visible .func  (.param .b32 func_retval0) _Z13noise_uniformPj(
	.param .b64 _Z13noise_uniformPj_param_0
)
{
	.reg .b32 	%r<22>;
	.reg .b64 	%rd<2>;


	ld.param.u64 	%rd1, [_Z13noise_uniformPj_param_0];
	ld.u32 	%r1, [%rd1];
	mad.lo.s32 	%r2, %r1, 69069, 1234567;
	ld.u32 	%r3, [%rd1+4];
	ld.u32 	%r4, [%rd1+8];
	ld.u32 	%r5, [%rd1+12];
	st.u32 	[%rd1], %r2;
	shl.b32 	%r6, %r3, 17;
	xor.b32  	%r7, %r6, %r3;
	shr.u32 	%r8, %r7, 13;
	xor.b32  	%r9, %r8, %r7;
	shl.b32 	%r10, %r9, 5;
	xor.b32  	%r11, %r10, %r9;
	st.u32 	[%rd1+4], %r11;
	and.b32  	%r12, %r4, 65535;
	shr.u32 	%r13, %r4, 16;
	mad.lo.s32 	%r14, %r12, 36969, %r13;
	st.u32 	[%rd1+8], %r14;
	and.b32  	%r15, %r5, 65535;
	shr.u32 	%r16, %r5, 16;
	mad.lo.s32 	%r17, %r15, 18000, %r16;
	st.u32 	[%rd1+12], %r17;
	shl.b32 	%r18, %r14, 16;
	add.s32 	%r19, %r17, %r18;
	xor.b32  	%r20, %r19, %r2;
	add.s32 	%r21, %r20, %r11;
	st.param.b32	[func_retval0+0], %r21;
	ret;
}

	// .globl	_Z25noise_uniform_double_reapP7noise_siPd
.visible .func  (.param .b32 func_retval0) _Z25noise_uniform_double_reapP7noise_siPd(
	.param .b64 _Z25noise_uniform_double_reapP7noise_siPd_param_0,
	.param .b32 _Z25noise_uniform_double_reapP7noise_siPd_param_1,
	.param .b64 _Z25noise_uniform_double_reapP7noise_siPd_param_2
)
{
	.reg .pred 	%p<10>;
	.reg .b32 	%r<67>;
	.reg .f64 	%fd<3>;
	.reg .b64 	%rd<95>;


	ld.param.u64 	%rd2, [_Z25noise_uniform_double_reapP7noise_siPd_param_0];
	ld.param.u32 	%r11, [_Z25noise_uniform_double_reapP7noise_siPd_param_1];
	ld.param.u64 	%rd3, [_Z25noise_uniform_double_reapP7noise_siPd_param_2];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB5_2;

	mov.u64 	%rd4, $str;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, $str1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, __unnamed_5;
	cvta.global.u64 	%rd9, %rd8;
	mov.u32 	%r12, 440;
	mov.u64 	%rd10, 1;
	// Callseq Start 52
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd5;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd7;
	.param .b32 param2;
	st.param.b32	[param2+0], %r12;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd9;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd10;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 52

BB5_2:
	setp.gt.s32	%p2, %r11, -1;
	@%p2 bra 	BB5_4;

	mov.u64 	%rd11, $str2;
	cvta.global.u64 	%rd12, %rd11;
	mov.u64 	%rd13, $str1;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, __unnamed_5;
	cvta.global.u64 	%rd16, %rd15;
	mov.u32 	%r13, 441;
	mov.u64 	%rd17, 1;
	// Callseq Start 53
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd12;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd14;
	.param .b32 param2;
	st.param.b32	[param2+0], %r13;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd16;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd17;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 53

BB5_4:
	add.s64 	%rd1, %rd2, 20;
	ld.u32 	%r14, [%rd2+20];
	setp.gt.s32	%p3, %r14, %r11;
	@%p3 bra 	BB5_6;

	mov.u64 	%rd18, $str3;
	cvta.global.u64 	%rd19, %rd18;
	mov.u64 	%rd20, $str1;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, __unnamed_5;
	cvta.global.u64 	%rd23, %rd22;
	mov.u32 	%r15, 442;
	mov.u64 	%rd24, 1;
	// Callseq Start 54
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd21;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd23;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd24;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 54

BB5_6:
	@%p1 bra 	BB5_8;

	mov.u64 	%rd25, $str;
	cvta.global.u64 	%rd26, %rd25;
	mov.u64 	%rd27, $str1;
	cvta.global.u64 	%rd28, %rd27;
	mov.u64 	%rd29, __unnamed_2;
	cvta.global.u64 	%rd30, %rd29;
	mov.u32 	%r16, 357;
	mov.u64 	%rd31, 1;
	// Callseq Start 55
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd26;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd28;
	.param .b32 param2;
	st.param.b32	[param2+0], %r16;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd30;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd31;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 55

BB5_8:
	@%p2 bra 	BB5_10;

	mov.u64 	%rd32, $str2;
	cvta.global.u64 	%rd33, %rd32;
	mov.u64 	%rd34, $str1;
	cvta.global.u64 	%rd35, %rd34;
	mov.u64 	%rd36, __unnamed_2;
	cvta.global.u64 	%rd37, %rd36;
	mov.u32 	%r17, 358;
	mov.u64 	%rd38, 1;
	// Callseq Start 56
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd33;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd35;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd37;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd38;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 56

BB5_10:
	ld.u32 	%r65, [%rd1];
	setp.gt.s32	%p6, %r65, %r11;
	@%p6 bra 	BB5_12;

	mov.u64 	%rd39, $str3;
	cvta.global.u64 	%rd40, %rd39;
	mov.u64 	%rd41, $str1;
	cvta.global.u64 	%rd42, %rd41;
	mov.u64 	%rd43, __unnamed_2;
	cvta.global.u64 	%rd44, %rd43;
	mov.u32 	%r18, 359;
	mov.u64 	%rd45, 1;
	// Callseq Start 57
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd40;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd42;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd44;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd45;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 57
	ld.u32 	%r65, [%rd1];

BB5_12:
	ld.u64 	%rd46, [%rd1+20];
	mov.u64 	%rd47, $str1;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r19, 362;
	mov.u32 	%r20, 4;
	mov.u32 	%r21, 0;
	// Callseq Start 58
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r65;
	.param .b32 param3;
	st.param.b32	[param3+0], %r20;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r21;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r22, [retval0+0];
	
	//{
	}// Callseq End 58
	mul.wide.s32 	%rd49, %r22, 4;
	add.s64 	%rd50, %rd46, %rd49;
	ld.u32 	%r4, [%rd50];
	ld.u64 	%rd51, [%rd1+20];
	ld.u32 	%r23, [%rd1];
	mov.u32 	%r24, 1;
	// Callseq Start 59
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r23;
	.param .b32 param3;
	st.param.b32	[param3+0], %r20;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r24;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r25, [retval0+0];
	
	//{
	}// Callseq End 59
	mul.wide.s32 	%rd52, %r25, 4;
	add.s64 	%rd53, %rd51, %rd52;
	ld.u32 	%r5, [%rd53];
	ld.u64 	%rd54, [%rd1+20];
	ld.u32 	%r26, [%rd1];
	mov.u32 	%r27, 2;
	// Callseq Start 60
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r26;
	.param .b32 param3;
	st.param.b32	[param3+0], %r20;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r27;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r28, [retval0+0];
	
	//{
	}// Callseq End 60
	mul.wide.s32 	%rd55, %r28, 4;
	add.s64 	%rd56, %rd54, %rd55;
	ld.u32 	%r6, [%rd56];
	ld.u64 	%rd57, [%rd1+20];
	ld.u32 	%r29, [%rd1];
	mov.u32 	%r30, 3;
	// Callseq Start 61
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r19;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r29;
	.param .b32 param3;
	st.param.b32	[param3+0], %r20;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r30;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r31, [retval0+0];
	
	//{
	}// Callseq End 61
	mul.wide.s32 	%rd58, %r31, 4;
	add.s64 	%rd59, %rd57, %rd58;
	ld.u32 	%r7, [%rd59];
	@%p1 bra 	BB5_14;

	mov.u64 	%rd60, $str;
	cvta.global.u64 	%rd61, %rd60;
	mov.u64 	%rd64, __unnamed_1;
	cvta.global.u64 	%rd65, %rd64;
	mov.u32 	%r32, 334;
	mov.u64 	%rd66, 1;
	// Callseq Start 62
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd61;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r32;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd65;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd66;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 62

BB5_14:
	@%p2 bra 	BB5_16;

	mov.u64 	%rd67, $str2;
	cvta.global.u64 	%rd68, %rd67;
	mov.u64 	%rd71, __unnamed_1;
	cvta.global.u64 	%rd72, %rd71;
	mov.u32 	%r33, 335;
	mov.u64 	%rd73, 1;
	// Callseq Start 63
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd68;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r33;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd72;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd73;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 63

BB5_16:
	ld.u32 	%r66, [%rd1];
	setp.gt.s32	%p9, %r66, %r11;
	@%p9 bra 	BB5_18;

	mov.u64 	%rd74, $str3;
	cvta.global.u64 	%rd75, %rd74;
	mov.u64 	%rd78, __unnamed_1;
	cvta.global.u64 	%rd79, %rd78;
	mov.u32 	%r34, 336;
	mov.u64 	%rd80, 1;
	// Callseq Start 64
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd75;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd79;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd80;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 64
	ld.u32 	%r66, [%rd1];

BB5_18:
	mad.lo.s32 	%r35, %r4, 69069, 1234567;
	shl.b32 	%r36, %r5, 17;
	xor.b32  	%r37, %r36, %r5;
	shr.u32 	%r38, %r37, 13;
	xor.b32  	%r39, %r38, %r37;
	shl.b32 	%r40, %r39, 5;
	xor.b32  	%r41, %r40, %r39;
	shr.u32 	%r42, %r6, 16;
	and.b32  	%r43, %r6, 65535;
	mad.lo.s32 	%r44, %r43, 36969, %r42;
	shr.u32 	%r45, %r7, 16;
	and.b32  	%r46, %r7, 65535;
	mad.lo.s32 	%r47, %r46, 18000, %r45;
	ld.u64 	%rd81, [%rd1+20];
	mov.u32 	%r48, 339;
	// Callseq Start 65
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r66;
	.param .b32 param3;
	st.param.b32	[param3+0], %r20;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r21;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r51, [retval0+0];
	
	//{
	}// Callseq End 65
	mul.wide.s32 	%rd84, %r51, 4;
	add.s64 	%rd85, %rd81, %rd84;
	st.u32 	[%rd85], %r35;
	ld.u64 	%rd86, [%rd1+20];
	ld.u32 	%r52, [%rd1];
	// Callseq Start 66
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r52;
	.param .b32 param3;
	st.param.b32	[param3+0], %r20;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r24;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r54, [retval0+0];
	
	//{
	}// Callseq End 66
	mul.wide.s32 	%rd87, %r54, 4;
	add.s64 	%rd88, %rd86, %rd87;
	st.u32 	[%rd88], %r41;
	ld.u64 	%rd89, [%rd1+20];
	ld.u32 	%r55, [%rd1];
	// Callseq Start 67
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r55;
	.param .b32 param3;
	st.param.b32	[param3+0], %r20;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r27;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r57, [retval0+0];
	
	//{
	}// Callseq End 67
	mul.wide.s32 	%rd90, %r57, 4;
	add.s64 	%rd91, %rd89, %rd90;
	st.u32 	[%rd91], %r44;
	ld.u64 	%rd92, [%rd1+20];
	ld.u32 	%r58, [%rd1];
	// Callseq Start 68
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b32 param0;
	st.param.b32	[param0+0], %r48;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd48;
	.param .b32 param2;
	st.param.b32	[param2+0], %r58;
	.param .b32 param3;
	st.param.b32	[param3+0], %r20;
	.param .b32 param4;
	st.param.b32	[param4+0], %r11;
	.param .b32 param5;
	st.param.b32	[param5+0], %r30;
	.param .b32 retval0;
	call.uni (retval0), 
	_Z25reverse_addr_rank1_assertiPKciiii, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4, 
	param5
	);
	ld.param.b32	%r60, [retval0+0];
	
	//{
	}// Callseq End 68
	mul.wide.s32 	%rd93, %r60, 4;
	add.s64 	%rd94, %rd92, %rd93;
	st.u32 	[%rd94], %r47;
	shl.b32 	%r61, %r44, 16;
	add.s32 	%r62, %r47, %r61;
	xor.b32  	%r63, %r62, %r35;
	add.s32 	%r64, %r63, %r41;
	cvt.rn.f64.u32	%fd1, %r64;
	mul.f64 	%fd2, %fd1, 0d3DF0000000100000;
	st.f64 	[%rd3], %fd2;
	st.param.b32	[func_retval0+0], %r21;
	ret;
}

	// .globl	_Z13noise_presentP7noise_s12noise_enum_tPi
.visible .func  (.param .b32 func_retval0) _Z13noise_presentP7noise_s12noise_enum_tPi(
	.param .b64 _Z13noise_presentP7noise_s12noise_enum_tPi_param_0,
	.param .b32 _Z13noise_presentP7noise_s12noise_enum_tPi_param_1,
	.param .b64 _Z13noise_presentP7noise_s12noise_enum_tPi_param_2
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<26>;


	ld.param.u64 	%rd1, [_Z13noise_presentP7noise_s12noise_enum_tPi_param_0];
	ld.param.u32 	%r1, [_Z13noise_presentP7noise_s12noise_enum_tPi_param_1];
	ld.param.u64 	%rd2, [_Z13noise_presentP7noise_s12noise_enum_tPi_param_2];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB6_2;

	mov.u64 	%rd3, $str5;
	cvta.global.u64 	%rd4, %rd3;
	mov.u64 	%rd5, $str1;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, __unnamed_6;
	cvta.global.u64 	%rd8, %rd7;
	mov.u32 	%r2, 544;
	mov.u64 	%rd9, 1;
	// Callseq Start 69
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd4;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd6;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd8;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd9;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 69

BB6_2:
	setp.lt.s32	%p2, %r1, 3;
	@%p2 bra 	BB6_4;

	mov.u64 	%rd10, $str6;
	cvta.global.u64 	%rd11, %rd10;
	mov.u64 	%rd12, $str1;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, __unnamed_6;
	cvta.global.u64 	%rd15, %rd14;
	mov.u32 	%r3, 545;
	mov.u64 	%rd16, 1;
	// Callseq Start 70
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd11;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd13;
	.param .b32 param2;
	st.param.b32	[param2+0], %r3;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd15;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd16;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 70

BB6_4:
	setp.ne.s64	%p3, %rd2, 0;
	@%p3 bra 	BB6_6;

	mov.u64 	%rd17, $str7;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, $str1;
	cvta.global.u64 	%rd20, %rd19;
	mov.u64 	%rd21, __unnamed_6;
	cvta.global.u64 	%rd22, %rd21;
	mov.u32 	%r4, 546;
	mov.u64 	%rd23, 1;
	// Callseq Start 71
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd18;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd20;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd22;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd23;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 71

BB6_6:
	mul.wide.s32 	%rd24, %r1, 4;
	add.s64 	%rd25, %rd1, %rd24;
	ld.u32 	%r5, [%rd25+24];
	st.u32 	[%rd2], %r5;
	mov.u32 	%r6, 0;
	st.param.b32	[func_retval0+0], %r6;
	ret;
}


