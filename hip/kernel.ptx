//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-26907403
// Cuda compilation tools, release 10.1, V10.1.243
// Based on LLVM 3.4svn
//

.version 6.4
.target sm_30
.address_size 64

	// .globl	_Z16kernel_baseindexP13kernel_ctxt_si
.extern .func __assertfail
(
	.param .b64 __assertfail_param_0,
	.param .b64 __assertfail_param_1,
	.param .b32 __assertfail_param_2,
	.param .b64 __assertfail_param_3,
	.param .b64 __assertfail_param_4
)
;
.global .align 8 .b8 __nv_static_27__14_kernel_cpp1_ii_6c28956c_static_ctxt[16];
.const .align 4 .b8 __nv_static_27__14_kernel_cpp1_ii_6c28956c_static_param[84];
.global .align 1 .b8 __unnamed_1[43] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 98, 97, 115, 101, 105, 110, 100, 101, 120, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_2[43] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 99, 111, 111, 114, 100, 115, 95, 105, 99, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_3[43] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 99, 111, 111, 114, 100, 115, 95, 106, 99, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_4[43] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 99, 111, 111, 114, 100, 115, 95, 107, 99, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_5[63] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 99, 111, 111, 114, 100, 115, 95, 118, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_6[63] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 109, 97, 115, 107, 95, 118, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_7[56] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 99, 111, 111, 114, 100, 115, 95, 105, 110, 100, 101, 120, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 44, 32, 105, 110, 116, 41, 0};
.global .align 1 .b8 __unnamed_8[71] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 99, 111, 111, 114, 100, 115, 95, 105, 110, 100, 101, 120, 95, 118, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 44, 32, 105, 110, 116, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_9[39] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 105, 116, 101, 114, 97, 116, 105, 111, 110, 115, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 __unnamed_10[46] = {105, 110, 116, 32, 107, 101, 114, 110, 101, 108, 95, 118, 101, 99, 116, 111, 114, 95, 105, 116, 101, 114, 97, 116, 105, 111, 110, 115, 40, 107, 101, 114, 110, 101, 108, 95, 99, 116, 120, 116, 95, 115, 32, 42, 41, 0};
.global .align 1 .b8 $str[4] = {111, 98, 106, 0};
.global .align 1 .b8 $str1[9] = {107, 101, 114, 110, 101, 108, 46, 99, 0};
.global .align 1 .b8 $str2[28] = {49, 32, 45, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 32, 60, 61, 32, 105, 99, 0};
.global .align 1 .b8 $str3[48] = {105, 99, 32, 60, 61, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 88, 93, 32, 43, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str4[28] = {49, 32, 45, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 32, 60, 61, 32, 106, 99, 0};
.global .align 1 .b8 $str5[48] = {106, 99, 32, 60, 61, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 89, 93, 32, 43, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str6[28] = {49, 32, 45, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 32, 60, 61, 32, 107, 99, 0};
.global .align 1 .b8 $str7[48] = {107, 99, 32, 60, 61, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 90, 93, 32, 43, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str8[33] = {49, 32, 45, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 32, 60, 61, 32, 105, 99, 118, 91, 105, 118, 93, 0};
.global .align 1 .b8 $str9[33] = {49, 32, 45, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 32, 60, 61, 32, 106, 99, 118, 91, 105, 118, 93, 0};
.global .align 1 .b8 $str10[53] = {105, 99, 118, 91, 105, 118, 93, 32, 60, 61, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 88, 93, 32, 43, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str11[53] = {106, 99, 118, 91, 105, 118, 93, 32, 60, 61, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 89, 93, 32, 43, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};
.global .align 1 .b8 $str12[53] = {107, 99, 118, 91, 105, 118, 93, 32, 60, 61, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 108, 111, 99, 97, 108, 91, 90, 93, 32, 43, 32, 111, 98, 106, 45, 62, 112, 97, 114, 97, 109, 45, 62, 110, 104, 97, 108, 111, 0};

.visible .func  (.param .b32 func_retval0) _Z16kernel_baseindexP13kernel_ctxt_si(
	.param .b64 _Z16kernel_baseindexP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_baseindexP13kernel_ctxt_si_param_1
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<5>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z16kernel_baseindexP13kernel_ctxt_si_param_0];
	ld.param.u32 	%r1, [_Z16kernel_baseindexP13kernel_ctxt_si_param_1];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB0_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_1;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r2, 234;
	mov.u64 	%rd8, 1;
	// Callseq Start 0
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r2;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 0

BB0_2:
	ld.u64 	%rd9, [%rd1];
	ld.u32 	%r3, [%rd9+20];
	add.s32 	%r4, %r3, %r1;
	st.param.b32	[func_retval0+0], %r4;
	ret;
}

	// .globl	_Z16kernel_coords_icP13kernel_ctxt_si
.visible .func  (.param .b32 func_retval0) _Z16kernel_coords_icP13kernel_ctxt_si(
	.param .b64 _Z16kernel_coords_icP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_icP13kernel_ctxt_si_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd5, [_Z16kernel_coords_icP13kernel_ctxt_si_param_0];
	ld.param.u32 	%r5, [_Z16kernel_coords_icP13kernel_ctxt_si_param_1];
	setp.ne.s64	%p1, %rd5, 0;
	@%p1 bra 	BB1_2;

	mov.u64 	%rd6, $str;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, __unnamed_2;
	cvta.global.u64 	%rd11, %rd10;
	mov.u32 	%r6, 249;
	mov.u64 	%rd12, 1;
	// Callseq Start 1
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 1

BB1_2:
	ld.u64 	%rd27, [%rd5];
	ld.u32 	%r7, [%rd27+32];
	ld.u32 	%r8, [%rd27+28];
	mul.lo.s32 	%r9, %r7, %r8;
	div.s32 	%r10, %r5, %r9;
	ld.u32 	%r11, [%rd27+60];
	add.s32 	%r1, %r10, %r11;
	ld.u32 	%r18, [%rd27];
	mov.u32 	%r12, 1;
	sub.s32 	%r13, %r12, %r18;
	setp.le.s32	%p2, %r13, %r1;
	@%p2 bra 	BB1_4;

	mov.u64 	%rd13, $str2;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, __unnamed_2;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r14, 254;
	mov.u64 	%rd19, 1;
	// Callseq Start 2
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd18;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd19;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 2
	ld.u64 	%rd27, [%rd5];
	ld.u32 	%r18, [%rd27];

BB1_4:
	ld.u32 	%r15, [%rd27+8];
	add.s32 	%r16, %r18, %r15;
	setp.le.s32	%p3, %r1, %r16;
	@%p3 bra 	BB1_6;

	mov.u64 	%rd20, $str3;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, $str1;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, __unnamed_2;
	cvta.global.u64 	%rd25, %rd24;
	mov.u32 	%r17, 255;
	mov.u64 	%rd26, 1;
	// Callseq Start 3
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 3

BB1_6:
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z16kernel_coords_jcP13kernel_ctxt_si
.visible .func  (.param .b32 func_retval0) _Z16kernel_coords_jcP13kernel_ctxt_si(
	.param .b64 _Z16kernel_coords_jcP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_jcP13kernel_ctxt_si_param_1
)
{
	.reg .pred 	%p<4>;
	.reg .b32 	%r<20>;
	.reg .b64 	%rd<28>;


	ld.param.u64 	%rd5, [_Z16kernel_coords_jcP13kernel_ctxt_si_param_0];
	ld.param.u32 	%r5, [_Z16kernel_coords_jcP13kernel_ctxt_si_param_1];
	setp.ne.s64	%p1, %rd5, 0;
	@%p1 bra 	BB2_2;

	mov.u64 	%rd6, $str;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, __unnamed_3;
	cvta.global.u64 	%rd11, %rd10;
	mov.u32 	%r6, 272;
	mov.u64 	%rd12, 1;
	// Callseq Start 4
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r6;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 4

BB2_2:
	ld.u64 	%rd27, [%rd5];
	ld.u32 	%r7, [%rd27+32];
	ld.u32 	%r8, [%rd27+28];
	mul.lo.s32 	%r9, %r7, %r8;
	rem.s32 	%r10, %r5, %r9;
	div.s32 	%r11, %r10, %r7;
	ld.u32 	%r12, [%rd27+68];
	add.s32 	%r1, %r11, %r12;
	ld.u32 	%r19, [%rd27];
	mov.u32 	%r13, 1;
	sub.s32 	%r14, %r13, %r19;
	setp.le.s32	%p2, %r14, %r1;
	@%p2 bra 	BB2_4;

	mov.u64 	%rd13, $str4;
	cvta.global.u64 	%rd14, %rd13;
	mov.u64 	%rd15, $str1;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, __unnamed_3;
	cvta.global.u64 	%rd18, %rd17;
	mov.u32 	%r15, 279;
	mov.u64 	%rd19, 1;
	// Callseq Start 5
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd14;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd16;
	.param .b32 param2;
	st.param.b32	[param2+0], %r15;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd18;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd19;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 5
	ld.u64 	%rd27, [%rd5];
	ld.u32 	%r19, [%rd27];

BB2_4:
	ld.u32 	%r16, [%rd27+12];
	add.s32 	%r17, %r19, %r16;
	setp.le.s32	%p3, %r1, %r17;
	@%p3 bra 	BB2_6;

	mov.u64 	%rd20, $str5;
	cvta.global.u64 	%rd21, %rd20;
	mov.u64 	%rd22, $str1;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, __unnamed_3;
	cvta.global.u64 	%rd25, %rd24;
	mov.u32 	%r18, 280;
	mov.u64 	%rd26, 1;
	// Callseq Start 6
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd21;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd23;
	.param .b32 param2;
	st.param.b32	[param2+0], %r18;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd25;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd26;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 6

BB2_6:
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z16kernel_coords_kcP13kernel_ctxt_si
.visible .func  (.param .b32 func_retval0) _Z16kernel_coords_kcP13kernel_ctxt_si(
	.param .b64 _Z16kernel_coords_kcP13kernel_ctxt_si_param_0,
	.param .b32 _Z16kernel_coords_kcP13kernel_ctxt_si_param_1
)
{
	.reg .pred 	%p<3>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<20>;


	ld.param.u64 	%rd1, [_Z16kernel_coords_kcP13kernel_ctxt_si_param_0];
	ld.param.u32 	%r5, [_Z16kernel_coords_kcP13kernel_ctxt_si_param_1];
	ld.u64 	%rd19, [%rd1];
	ld.u32 	%r6, [%rd19+32];
	ld.u32 	%r7, [%rd19+28];
	mul.lo.s32 	%r8, %r6, %r7;
	rem.s32 	%r9, %r5, %r8;
	rem.s32 	%r10, %r9, %r6;
	ld.u32 	%r11, [%rd19+76];
	add.s32 	%r1, %r11, %r10;
	ld.u32 	%r18, [%rd19];
	mov.u32 	%r12, 1;
	sub.s32 	%r13, %r12, %r18;
	setp.le.s32	%p1, %r13, %r1;
	@%p1 bra 	BB3_2;

	mov.u64 	%rd5, $str6;
	cvta.global.u64 	%rd6, %rd5;
	mov.u64 	%rd7, $str1;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, __unnamed_4;
	cvta.global.u64 	%rd10, %rd9;
	mov.u32 	%r14, 304;
	mov.u64 	%rd11, 1;
	// Callseq Start 7
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd6;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd8;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd10;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd11;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 7
	ld.u64 	%rd19, [%rd1];
	ld.u32 	%r18, [%rd19];

BB3_2:
	ld.u32 	%r15, [%rd19+16];
	add.s32 	%r16, %r18, %r15;
	setp.le.s32	%p2, %r1, %r16;
	@%p2 bra 	BB3_4;

	mov.u64 	%rd12, $str7;
	cvta.global.u64 	%rd13, %rd12;
	mov.u64 	%rd14, $str1;
	cvta.global.u64 	%rd15, %rd14;
	mov.u64 	%rd16, __unnamed_4;
	cvta.global.u64 	%rd17, %rd16;
	mov.u32 	%r17, 305;
	mov.u64 	%rd18, 1;
	// Callseq Start 8
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd13;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd15;
	.param .b32 param2;
	st.param.b32	[param2+0], %r17;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd17;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd18;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 8

BB3_4:
	st.param.b32	[func_retval0+0], %r1;
	ret;
}

	// .globl	_Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1_
.visible .func  (.param .b32 func_retval0) _Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1_(
	.param .b64 _Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_0,
	.param .b32 _Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_1,
	.param .b64 _Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_2,
	.param .b64 _Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_3,
	.param .b64 _Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_4
)
{
	.reg .pred 	%p<7>;
	.reg .b32 	%r<49>;
	.reg .b64 	%rd<61>;


	ld.param.u64 	%rd11, [_Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_0];
	ld.param.u32 	%r13, [_Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_1];
	ld.param.u64 	%rd12, [_Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_2];
	ld.param.u64 	%rd13, [_Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_3];
	ld.param.u64 	%rd14, [_Z15kernel_coords_vP13kernel_ctxt_siPiS1_S1__param_4];
	setp.ne.s64	%p1, %rd11, 0;
	@%p1 bra 	BB4_2;

	mov.u64 	%rd15, $str;
	cvta.global.u64 	%rd16, %rd15;
	mov.u64 	%rd17, $str1;
	cvta.global.u64 	%rd18, %rd17;
	mov.u64 	%rd19, __unnamed_5;
	cvta.global.u64 	%rd20, %rd19;
	mov.u32 	%r14, 327;
	mov.u64 	%rd21, 1;
	// Callseq Start 9
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd16;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd18;
	.param .b32 param2;
	st.param.b32	[param2+0], %r14;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd20;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd21;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 9

BB4_2:
	ld.u64 	%rd58, [%rd11];
	ld.u32 	%r15, [%rd58+56];
	ld.u32 	%r16, [%rd58+52];
	mul.lo.s32 	%r17, %r15, %r16;
	ld.u32 	%r18, [%rd58+20];
	add.s32 	%r19, %r18, %r13;
	div.s32 	%r20, %r19, %r17;
	mul.lo.s32 	%r21, %r20, %r17;
	sub.s32 	%r22, %r19, %r21;
	div.s32 	%r23, %r22, %r15;
	mul.lo.s32 	%r24, %r15, %r23;
	sub.s32 	%r25, %r22, %r24;
	add.s32 	%r26, %r20, 1;
	mov.u32 	%r27, 1;
	ld.u32 	%r46, [%rd58];
	sub.s32 	%r2, %r26, %r46;
	st.u32 	[%rd12], %r2;
	add.s32 	%r28, %r23, 1;
	sub.s32 	%r3, %r28, %r46;
	st.u32 	[%rd13], %r3;
	add.s32 	%r29, %r25, 1;
	sub.s32 	%r4, %r29, %r46;
	st.u32 	[%rd14], %r4;
	sub.s32 	%r30, %r27, %r46;
	setp.le.s32	%p2, %r30, %r2;
	@%p2 bra 	BB4_4;

	mov.u64 	%rd22, $str8;
	cvta.global.u64 	%rd23, %rd22;
	mov.u64 	%rd24, $str1;
	cvta.global.u64 	%rd25, %rd24;
	mov.u64 	%rd26, __unnamed_5;
	cvta.global.u64 	%rd27, %rd26;
	mov.u32 	%r31, 343;
	mov.u64 	%rd28, 1;
	// Callseq Start 10
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd23;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd25;
	.param .b32 param2;
	st.param.b32	[param2+0], %r31;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd27;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd28;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 10
	ld.u64 	%rd58, [%rd11];
	ld.u32 	%r46, [%rd58];

BB4_4:
	sub.s32 	%r33, %r27, %r46;
	setp.le.s32	%p3, %r33, %r3;
	@%p3 bra 	BB4_6;

	mov.u64 	%rd29, $str9;
	cvta.global.u64 	%rd30, %rd29;
	mov.u64 	%rd31, $str1;
	cvta.global.u64 	%rd32, %rd31;
	mov.u64 	%rd33, __unnamed_5;
	cvta.global.u64 	%rd34, %rd33;
	mov.u32 	%r34, 344;
	mov.u64 	%rd35, 1;
	// Callseq Start 11
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd30;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd32;
	.param .b32 param2;
	st.param.b32	[param2+0], %r34;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd34;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd35;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 11
	ld.u64 	%rd58, [%rd11];
	ld.u32 	%r46, [%rd58];

BB4_6:
	ld.u32 	%r35, [%rd58+8];
	add.s32 	%r36, %r46, %r35;
	setp.le.s32	%p4, %r2, %r36;
	@%p4 bra 	BB4_8;

	mov.u64 	%rd36, $str10;
	cvta.global.u64 	%rd37, %rd36;
	mov.u64 	%rd38, $str1;
	cvta.global.u64 	%rd39, %rd38;
	mov.u64 	%rd40, __unnamed_5;
	cvta.global.u64 	%rd41, %rd40;
	mov.u32 	%r37, 345;
	mov.u64 	%rd42, 1;
	// Callseq Start 12
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd37;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd39;
	.param .b32 param2;
	st.param.b32	[param2+0], %r37;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd41;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd42;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 12
	ld.u64 	%rd58, [%rd11];
	ld.u32 	%r46, [%rd58];

BB4_8:
	ld.u32 	%r38, [%rd58+12];
	add.s32 	%r39, %r46, %r38;
	setp.le.s32	%p5, %r3, %r39;
	@%p5 bra 	BB4_10;

	mov.u64 	%rd43, $str11;
	cvta.global.u64 	%rd44, %rd43;
	mov.u64 	%rd45, $str1;
	cvta.global.u64 	%rd46, %rd45;
	mov.u64 	%rd47, __unnamed_5;
	cvta.global.u64 	%rd48, %rd47;
	mov.u32 	%r40, 346;
	mov.u64 	%rd49, 1;
	// Callseq Start 13
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd44;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd46;
	.param .b32 param2;
	st.param.b32	[param2+0], %r40;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd48;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd49;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 13
	ld.u64 	%rd58, [%rd11];
	ld.u32 	%r46, [%rd58];

BB4_10:
	ld.u32 	%r41, [%rd58+16];
	add.s32 	%r42, %r46, %r41;
	setp.le.s32	%p6, %r4, %r42;
	@%p6 bra 	BB4_12;

	mov.u64 	%rd50, $str12;
	cvta.global.u64 	%rd51, %rd50;
	mov.u64 	%rd52, $str1;
	cvta.global.u64 	%rd53, %rd52;
	mov.u64 	%rd54, __unnamed_5;
	cvta.global.u64 	%rd55, %rd54;
	mov.u32 	%r43, 347;
	mov.u64 	%rd56, 1;
	// Callseq Start 14
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd51;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd53;
	.param .b32 param2;
	st.param.b32	[param2+0], %r43;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd55;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd56;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 14

BB4_12:
	mov.u32 	%r44, 0;
	st.param.b32	[func_retval0+0], %r44;
	ret;
}

	// .globl	_Z11kernel_maskP13kernel_ctxt_siii
.visible .func  (.param .b32 func_retval0) _Z11kernel_maskP13kernel_ctxt_siii(
	.param .b64 _Z11kernel_maskP13kernel_ctxt_siii_param_0,
	.param .b32 _Z11kernel_maskP13kernel_ctxt_siii_param_1,
	.param .b32 _Z11kernel_maskP13kernel_ctxt_siii_param_2,
	.param .b32 _Z11kernel_maskP13kernel_ctxt_siii_param_3
)
{
	.reg .pred 	%p<14>;
	.reg .b32 	%r<12>;
	.reg .b64 	%rd<4>;


	ld.param.u64 	%rd2, [_Z11kernel_maskP13kernel_ctxt_siii_param_0];
	ld.param.u32 	%r1, [_Z11kernel_maskP13kernel_ctxt_siii_param_1];
	ld.param.u32 	%r2, [_Z11kernel_maskP13kernel_ctxt_siii_param_2];
	ld.param.u32 	%r3, [_Z11kernel_maskP13kernel_ctxt_siii_param_3];
	ld.u64 	%rd3, [%rd2];
	add.s64 	%rd1, %rd3, 60;
	ld.u32 	%r4, [%rd3+60];
	setp.gt.s32	%p4, %r4, %r1;
	mov.pred 	%p13, -1;
	@%p4 bra 	BB5_6;

	ld.u32 	%r5, [%rd1+4];
	setp.lt.s32	%p6, %r5, %r1;
	@%p6 bra 	BB5_6;

	ld.u32 	%r6, [%rd1+8];
	setp.gt.s32	%p8, %r6, %r2;
	@%p8 bra 	BB5_6;

	ld.u32 	%r7, [%rd1+12];
	setp.lt.s32	%p10, %r7, %r2;
	@%p10 bra 	BB5_6;

	ld.u32 	%r8, [%rd1+16];
	setp.gt.s32	%p12, %r8, %r3;
	@%p12 bra 	BB5_6;

	ld.u32 	%r9, [%rd1+20];
	setp.lt.s32	%p13, %r9, %r3;

BB5_6:
	selp.u32	%r10, 1, 0, %p13;
	xor.b32  	%r11, %r10, 1;
	st.param.b32	[func_retval0+0], %r11;
	ret;
}

	// .globl	_Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1_
.visible .func  (.param .b32 func_retval0) _Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1_(
	.param .b64 _Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_0,
	.param .b64 _Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_1,
	.param .b64 _Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_2,
	.param .b64 _Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_3,
	.param .b64 _Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_4
)
{
	.reg .pred 	%p<8>;
	.reg .b32 	%r<14>;
	.reg .b64 	%rd<15>;


	ld.param.u64 	%rd2, [_Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_0];
	ld.param.u64 	%rd3, [_Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_1];
	ld.param.u64 	%rd4, [_Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_2];
	ld.param.u64 	%rd5, [_Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_3];
	ld.param.u64 	%rd6, [_Z13kernel_mask_vP13kernel_ctxt_sPiS1_S1_S1__param_4];
	setp.ne.s64	%p1, %rd2, 0;
	@%p1 bra 	BB6_2;

	mov.u64 	%rd7, $str;
	cvta.global.u64 	%rd8, %rd7;
	mov.u64 	%rd9, $str1;
	cvta.global.u64 	%rd10, %rd9;
	mov.u64 	%rd11, __unnamed_6;
	cvta.global.u64 	%rd12, %rd11;
	mov.u32 	%r4, 386;
	mov.u64 	%rd13, 1;
	// Callseq Start 15
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd8;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd10;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd12;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd13;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 15

BB6_2:
	mov.u32 	%r5, 1;
	st.u32 	[%rd6], %r5;
	ld.u64 	%rd14, [%rd2];
	add.s64 	%rd1, %rd14, 60;
	ld.u32 	%r1, [%rd3];
	ld.u32 	%r6, [%rd14+60];
	setp.lt.s32	%p2, %r1, %r6;
	@%p2 bra 	BB6_8;

	ld.u32 	%r7, [%rd1+4];
	setp.gt.s32	%p3, %r1, %r7;
	@%p3 bra 	BB6_8;

	ld.u32 	%r2, [%rd4];
	ld.u32 	%r8, [%rd1+8];
	setp.lt.s32	%p4, %r2, %r8;
	@%p4 bra 	BB6_8;

	ld.u32 	%r9, [%rd1+12];
	setp.gt.s32	%p5, %r2, %r9;
	@%p5 bra 	BB6_8;

	ld.u32 	%r3, [%rd5];
	ld.u32 	%r10, [%rd1+16];
	setp.lt.s32	%p6, %r3, %r10;
	@%p6 bra 	BB6_8;

	ld.u32 	%r11, [%rd1+20];
	setp.le.s32	%p7, %r3, %r11;
	@%p7 bra 	BB6_9;

BB6_8:
	mov.u32 	%r12, 0;
	st.u32 	[%rd6], %r12;

BB6_9:
	mov.u32 	%r13, 0;
	st.param.b32	[func_retval0+0], %r13;
	ret;
}

	// .globl	_Z19kernel_coords_indexP13kernel_ctxt_siii
.visible .func  (.param .b32 func_retval0) _Z19kernel_coords_indexP13kernel_ctxt_siii(
	.param .b64 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_0,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_1,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_2,
	.param .b32 _Z19kernel_coords_indexP13kernel_ctxt_siii_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<19>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z19kernel_coords_indexP13kernel_ctxt_siii_param_0];
	ld.param.u32 	%r1, [_Z19kernel_coords_indexP13kernel_ctxt_siii_param_1];
	ld.param.u32 	%r2, [_Z19kernel_coords_indexP13kernel_ctxt_siii_param_2];
	ld.param.u32 	%r3, [_Z19kernel_coords_indexP13kernel_ctxt_siii_param_3];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB7_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_7;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r4, 416;
	mov.u64 	%rd8, 1;
	// Callseq Start 16
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r4;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 16

BB7_2:
	ld.u64 	%rd9, [%rd1];
	ld.u32 	%r5, [%rd9];
	shl.b32 	%r6, %r5, 1;
	ld.u32 	%r7, [%rd9+16];
	add.s32 	%r8, %r7, %r6;
	ld.u32 	%r9, [%rd9+12];
	add.s32 	%r10, %r9, %r6;
	add.s32 	%r11, %r1, %r5;
	add.s32 	%r12, %r11, -1;
	add.s32 	%r13, %r2, %r5;
	add.s32 	%r14, %r13, -1;
	mad.lo.s32 	%r15, %r10, %r12, %r14;
	add.s32 	%r16, %r3, %r5;
	add.s32 	%r17, %r16, -1;
	mad.lo.s32 	%r18, %r15, %r8, %r17;
	st.param.b32	[func_retval0+0], %r18;
	ret;
}

	// .globl	_Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1_
.visible .func  (.param .b32 func_retval0) _Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1_(
	.param .b64 _Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_0,
	.param .b64 _Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_1,
	.param .b64 _Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_2,
	.param .b64 _Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_3,
	.param .b64 _Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_4
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<18>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd1, [_Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_0];
	ld.param.u64 	%rd2, [_Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_1];
	ld.param.u64 	%rd3, [_Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_2];
	ld.param.u64 	%rd4, [_Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_3];
	ld.param.u64 	%rd5, [_Z21kernel_coords_index_vP13kernel_ctxt_sPiS1_S1_S1__param_4];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB8_2;

	mov.u64 	%rd6, $str;
	cvta.global.u64 	%rd7, %rd6;
	mov.u64 	%rd8, $str1;
	cvta.global.u64 	%rd9, %rd8;
	mov.u64 	%rd10, __unnamed_8;
	cvta.global.u64 	%rd11, %rd10;
	mov.u32 	%r1, 445;
	mov.u64 	%rd12, 1;
	// Callseq Start 17
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd7;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd9;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd11;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd12;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 17

BB8_2:
	ld.u64 	%rd13, [%rd1];
	ld.u32 	%r2, [%rd13];
	shl.b32 	%r3, %r2, 1;
	ld.u32 	%r4, [%rd13+16];
	add.s32 	%r5, %r4, %r3;
	ld.u32 	%r6, [%rd13+12];
	add.s32 	%r7, %r6, %r3;
	add.s32 	%r8, %r2, -1;
	ld.u32 	%r9, [%rd2];
	add.s32 	%r10, %r8, %r9;
	ld.u32 	%r11, [%rd3];
	add.s32 	%r12, %r8, %r11;
	mad.lo.s32 	%r13, %r10, %r7, %r12;
	ld.u32 	%r14, [%rd4];
	add.s32 	%r15, %r8, %r14;
	mad.lo.s32 	%r16, %r13, %r5, %r15;
	st.u32 	[%rd5], %r16;
	mov.u32 	%r17, 0;
	st.param.b32	[func_retval0+0], %r17;
	ret;
}

	// .globl	_Z17kernel_iterationsP13kernel_ctxt_s
.visible .func  (.param .b32 func_retval0) _Z17kernel_iterationsP13kernel_ctxt_s(
	.param .b64 _Z17kernel_iterationsP13kernel_ctxt_s_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z17kernel_iterationsP13kernel_ctxt_s_param_0];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB9_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_9;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 467;
	mov.u64 	%rd8, 1;
	// Callseq Start 18
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 18

BB9_2:
	ld.u64 	%rd9, [%rd1];
	ld.u32 	%r2, [%rd9+36];
	st.param.b32	[func_retval0+0], %r2;
	ret;
}

	// .globl	_Z24kernel_vector_iterationsP13kernel_ctxt_s
.visible .func  (.param .b32 func_retval0) _Z24kernel_vector_iterationsP13kernel_ctxt_s(
	.param .b64 _Z24kernel_vector_iterationsP13kernel_ctxt_s_param_0
)
{
	.reg .pred 	%p<2>;
	.reg .b32 	%r<3>;
	.reg .b64 	%rd<10>;


	ld.param.u64 	%rd1, [_Z24kernel_vector_iterationsP13kernel_ctxt_s_param_0];
	setp.ne.s64	%p1, %rd1, 0;
	@%p1 bra 	BB10_2;

	mov.u64 	%rd2, $str;
	cvta.global.u64 	%rd3, %rd2;
	mov.u64 	%rd4, $str1;
	cvta.global.u64 	%rd5, %rd4;
	mov.u64 	%rd6, __unnamed_10;
	cvta.global.u64 	%rd7, %rd6;
	mov.u32 	%r1, 480;
	mov.u64 	%rd8, 1;
	// Callseq Start 19
	{
	.reg .b32 temp_param_reg;
	// <end>}
	.param .b64 param0;
	st.param.b64	[param0+0], %rd3;
	.param .b64 param1;
	st.param.b64	[param1+0], %rd5;
	.param .b32 param2;
	st.param.b32	[param2+0], %r1;
	.param .b64 param3;
	st.param.b64	[param3+0], %rd7;
	.param .b64 param4;
	st.param.b64	[param4+0], %rd8;
	call.uni 
	__assertfail, 
	(
	param0, 
	param1, 
	param2, 
	param3, 
	param4
	);
	
	//{
	}// Callseq End 19

BB10_2:
	ld.u64 	%rd9, [%rd1];
	ld.u32 	%r2, [%rd9+44];
	st.param.b32	[func_retval0+0], %r2;
	ret;
}


